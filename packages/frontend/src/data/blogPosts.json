{"data":{"blogPosts":{"data":[{"id":"83","attributes":{"title":"Understanding Account Abstraction Schnorr Multi-Signatures","slug":"understanding-account-abstraction-schnorr-multi-signatures","pubDate":"2024-03-25","content":"<p>In today’s article, we continue the journey through public and private keys, blockchain algorithms, and Account Abstraction. Let’s focus on the complicated matter of ECDSA signatures and how to enable multisig transactions on Ethereum, shall we?</p><p>Have you ever seen Vitalik sad?<br><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/VitalikButerin/status/1527359435072425988\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/vitalik_twitter_1_096fab7da1.PNG\" alt=\"vitalik_twitter_1.PNG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_vitalik_twitter_1_096fab7da1.PNG 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_vitalik_twitter_1_096fab7da1.PNG 500w,\" sizes=\"100vw\" width=\"500px\"></a></p><p>Or have you ever seen Vitalik angry?<br><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/VitalikButerin/status/1527359917161517071\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/vitalik_twitter_2_65d3b10d72.PNG\" alt=\"vitalik_twitter_2.PNG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_vitalik_twitter_2_65d3b10d72.PNG 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_vitalik_twitter_2_65d3b10d72.PNG 500w,\" sizes=\"100vw\" width=\"500px\"></a></p><p>It looks like Ethereum’s signature algorithm is quite exciting and not that straightforward even for its co-founder. In this blog post, we’re going to discuss why ECDSA is (in some ways) not that efficient, why Bitcoin already adopted another algorithm called Schnorr, and last but not least, I’ll show you what solutions are already available and developed by amazing Rumble Fish devs!</p><h3>Let me <s>do</s> sign it for you!</h3><p>For those of you who are not familiar with blockchain’s private-public key pair concept, don’t worry! Relax, grab a big cup of coffee, and let me guide you through this! Ready? Let’s go!<br>Every blockchain’s security, including Bitcoin and Ethereum, relies on cryptography and some brilliant underlying concepts. One of them is <strong>private-public key pairs</strong> which are used mainly for:</p><ul style=\"list-style-type:circle;\"><li>authentication - to prove that the user knows the private key, which confirms their identity,</li><li>encryption - to decrypt and read the message previously encoded, in other words - to read a secret message that only a private key owner can see.&nbsp;</li></ul><p>Private-public key pairs are <strong>asymmetric</strong> which means that with a given private key (think about it as simply as a number) it’s possible to derive the public key (the other number). However, it’s not feasible to reverse the process and get a private key from the public key. If you wonder why, take a look at our previous <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-3/\">blog post</a>, where I explained the magic behind elliptic curves and generating Ethereum addresses from private keys. To move forward I assume that ECC (elliptic curve cryptography) and ECDSA (Elliptic Curve Digital Signature Algorithm) acronyms already sound familiar to you.&nbsp;</p><h3>pov: ECDSA is a bad signature algorithm</h3><p>As we’ve shown above, Vitalik himself believes that ECDSA is a bad algorithm. Let’s take a look at the reasoning behind this statement.<br>In Ethereum, ECDSA is used as the algorithm for creating and verifying digital signatures. This is to ensure transaction authentication, so we know the transaction was approved by the sender. ECDSA uses the SHA-256 hash function and the secp256k1 elliptic curve and does it for good reasons. Firstly, it is constructed in a special non-random way, which results in efficient and fast computations. It provides strong security while requiring relatively little computational power. Secondly, the secp256k1 curve reduces the possibility of potential backdoor weakness and is also used by Bitcoin, so was already adopted at the moment of Ethereum creation. Now, let’s see what the basic process of signing and verifying a message looks like:</p><p>Signing the message:</p><ol><li>Generate a private-public key pair. Keep the private key hidden and share only the public key.</li><li>Calculate the message hash with a cryptographic hash function, e.g. SHA-256.</li><li>Sign the message with the private key. By signing I mean performing a series of mathematical operations on the message hash value and the private key, which results in a unique signature.</li><li>Transmit the message and its signature.</li></ol><p>Verifying the signature:</p><ol><li>Calculate the message hash the same way it was hashed within the signing process.</li><li>Recover the signer address from the signature and public key (for the sake of simplicity I’m not gonna explain all the math behind it - I encourage you to do your own research).</li><li>Compare the recovered address with the provided one - if they match, the signature is valid!</li></ol><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/account_abstraction_sender_receiver_eafb765592.jpg\" alt=\"account-abstraction-sender-receiver.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_account_abstraction_sender_receiver_eafb765592.jpg 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_account_abstraction_sender_receiver_eafb765592.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_account_abstraction_sender_receiver_eafb765592.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_account_abstraction_sender_receiver_eafb765592.jpg 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><p>So far it’s all looking good, right? So what’s the problem with ECDSA? The chaos appears as soon as someone wants to create a multi-signature. Ekhm, excuse me, multi-what…? - you ask? Let me explain.</p><h3>Multi-signatures - single problem</h3><p><strong>The Multi-signature Scheme</strong> is a concept that avoids a single point of failure and requires multiple signers to approve a transaction. This is great for splitting the responsibility of ownership of an address (and its funds) and can be shared between multiple people with different private keys. What's more, it’s possible to implement a k-of-n policy, so e.g. 2-of-3 means that only 2 signers (out of 3) need to approve the transaction for it to be valid (as shown below). This is commonly known as the <strong>threshold scheme</strong>.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/multisignature_contract_051dfb4a1c.jpg\" alt=\"multisignature-contract.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_multisignature_contract_051dfb4a1c.jpg 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_multisignature_contract_051dfb4a1c.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_multisignature_contract_051dfb4a1c.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_multisignature_contract_051dfb4a1c.jpg 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><p>There are already plenty of multi-signature wallets, like <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ConsenSysMesh/MultiSigWallet\">The Consensys multisig wallet, Safe</a>, or <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.argent.xyz/vault/\">Argent</a>. Most often that kind of wallets use a smart contract that stores multiple signers' addresses and verifies the signatures one by one (naive multi-signatures). And that’s the core of the problem. Why? First of all, storing multiple signers’ addresses costs money (welcome to the blockchain!), and the same goes for sending and verifying multiple signatures. Every signature needs to be verified with a specified signer separately and computational power is the crucial aspect of the transaction cost. What’s more (and in some cases the worst) signers’ public addresses are exposed and can be easily used to check who (out of the signers group) approved the transaction and who didn’t. OK, so what about aggregating multiple signatures into a single one? Well, this might be a better approach, but aggregated signatures are currently slower than e.g. ECDSA, so there must be a tradeoff between speed and size (which on the blockchain means cost).</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/native_vs_aggregated_signature_4569907414.jpg\" alt=\"native-vs-aggregated-signature.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_native_vs_aggregated_signature_4569907414.jpg 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_native_vs_aggregated_signature_4569907414.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_native_vs_aggregated_signature_4569907414.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_native_vs_aggregated_signature_4569907414.jpg 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><h3>Bitcoin’s Taproot and Schnorr’s Signatures</h3><p>Let’s jump out for a second to the Bitcoin Blockchain and look closer at one of the rare protocol updates, called Taproot. This BIP (Bitcoin Improvement Proposal) introduced several enhancements, including the Schnorr Signatures. Why do I mention this? We must realize that Bitcoin’s upgrades are extremely limited to keep the protocol stable and secure, so enhancements are deeply discussed, battle-tested, and significantly improve the network’s efficiency. So what is that <strong>Schnorr Signature</strong>?</p><p>It is a type of digital signature scheme that allows for signing transactions in a very efficient way without compromising on security even for multi-signatures. The algorithm itself isn’t new though, because originally it was described by Claus Schnorr in 1991. It wasn’t widely used before because it was protected by patent till 2008 (the same year Bitcoin was launched).<br>The primary advantage of Schnorr signatures lies in key aggregation. In a typical digital signature scenario, a single public key, message, and signature are involved, confirming that the owner of the public key signed the provided message. However, when multiple parties aim to sign the same message, like when spending from a multisig address, each must include their public key and signature. Consequently, if three parties wish to sign a message, the verification process entails three public keys and three signatures, leading to inefficiencies in computation and storage. Each node must conduct signature verification, a resource-intensive task, three times, and store three sets of signatures and public keys.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/ecdsa_vs_schnorr_signatures_9800efde10.jpg\" alt=\"ecdsa-vs-schnorr-signatures.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_ecdsa_vs_schnorr_signatures_9800efde10.jpg 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_ecdsa_vs_schnorr_signatures_9800efde10.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_ecdsa_vs_schnorr_signatures_9800efde10.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_ecdsa_vs_schnorr_signatures_9800efde10.jpg 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><p>Key aggregation resolves this inefficiency by obviating the necessity for multiple public keys and signatures. Schnorr public keys and signatures can be aggregated so that, if three parties intend to sign a transaction, they can combine their public keys into a single one, using their respective private keys to sign the same message. Subsequently, they can combine their signatures into a single signature valid for the aggregate public key. A verifier needs only to authenticate a single signature and public key to ascertain that all three parties signed the message.</p><h3>Signatures with benefits&nbsp;</h3><p>Key aggregation presents an opportunity to decrease transaction costs and enhance the scalability of the base layer, as signatures from multi-signature configurations occupy the same space in a block as those from single-party transactions. This aspect of Schnorr can be leveraged to decrease the size of multisig payments and related transactions (e.g. those within the Lightning Network channels).</p><p>Moreover, Schnorr signatures possess a crucial attribute of non-malleability. In the realm of digital signatures, malleability refers to the capacity of an attacker to alter a confirmed signature in a manner that retains its validity while authenticating a distinct message from the original signature. Such manipulation could lead to significant issues in cryptocurrency applications, potentially allowing a malicious actor to increase the transferred funds' amount or change the recipient.</p><p>Last but not least, Schnorr offers substantial privacy advantages. By enabling the obfuscation of a multi-signature scheme, rendering it virtually indistinguishable from a traditional single public key, Schnorr significantly complicates the task of differentiating between multisig and single-signature transactions through on-chain observation. Additionally, in setups involving n-of-m multisig, Schnorr makes it more challenging for observers to ascertain which participants did or did not sign a transaction.</p><h3>Just do it!</h3><p>Okay, that’s enough of the theory, let’s see what the practice looks like! As was written, the Bitcoin protocol already supports Schnorr Signatures and can be used alongside ECDSA. Unfortunately, the Ethereum blockchain does not yet, so this looks like a perfect opportunity for Rumble Fish developers to do, once again, some innovative stuff!</p><p>No, wait a sec. Let’s complicate things a bit so that it’s not too easy. Where would be the perfect place to use multi-signatures? Where can we find the need for a multi-owner wallet? Any ideas? Exactly, Account Abstraction! Take a look at our previous <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/what-is-account-abstraction-and-why-is-it-important-eip-4337-explained/\">blog post about ERC-4337</a> to see what it is and let’s move to the coding part!</p><p>Let’s see what has to be done to achieve Multi-Schnorr-Signatures.&nbsp;</p><ol><li>Deploy MultiSigSmartAccountFactory and create Account Abstraction<br>This is needed to interact with the blockchain and use the Account Abstraction concept. In our case though instead of a single Account Owner, there are multiple Schnorr-Signers Owners.&nbsp;</li><li>Create Schnorr Signers and MultiSig Account Signer<br>To utilize multi-signature features and be ERC-4337-compliant, the Schnorr Signer needs to be created out of an individual's private key.</li><li>Construct User Operation CallData and build User Operation<br>As ERC-4337 specified, instead of standard transaction the User Operation needs to be created.</li><li>Initialize Multi-Sig Schnorr User Operation<br>Crucial element of multi-signature mechanism. To be sure that the same transaction is approved by every needed signer, the desired <strong>Multi-Sig Schnorr User Operation</strong> is created. It contains such information as transaction data and each signer’s public addresses, one-time nonces, and signatures.</li><li>Sign the transaction by each defined signer<br>Transactions can be signed by each signer in any order. There’s also no time limit or need for all of the signers to be online at once.&nbsp;</li><li>Send the User Operation<br>If a transaction is signed by each needed signer, it can be sent through the MultiSigSmartAccount contract. As needed it can be paid by ERC-4337 Paymaster. User Operation data can be signed and used only once by design!</li><li>Appreciate the beauty and simplicity of the Account Abstraction Schnorr Signatures solution. As simple as that!</li></ol><p>But if you are curious about how it works under the hood or want to utilize this in your project, feel free to jump into Rumble Fish repositories:</p><ul style=\"list-style-type:circle;\"><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.npmjs.com/package/aa-schnorr-multisig\">aa-schnorr-multisig</a></li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.npmjs.com/package/aa-schnorr-multisig-sdk\">aa-schnorr-multisig-sdk</a></li></ul><p>That’s it! Today I’ve showcased the pain points and vulnerabilities of the ECDSA signature algorithm when it comes to creating multi-signature transactions. I’ve also taken you on a journey through Schnorr’s Signatures and how to tie them into Account Abstraction to create an effective multisig transaction on Ethereum. Stay tuned for future updates and feel free to <a href=\"mailto:hello@rumblefish.dev\" target=\"_blank\" rel=\"noopener noreferrer\">reach out to our team</a> if you have any blockchain-related questions!</p>","timeToRead":9,"shortContent":"<p>Multi-Signatures</p><p>In today’s article, we continue the journey through public and private keys, blockchain algorithms, and Account Abstraction. Let’s focus on the complicated matter of ECDSA signatures and how to enable multisig transactions on Ethereum, shall we?</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"BlogPost Top Image.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blog_Post_Top_Image_9ed9063db2.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/aa_multisig_blog_miniature_5d4e7d336f.jpg","name":"aa-multisig-blog-miniature.jpg"}}},"category":[{"name":"Code stories"}],"authors":{"data":[{"attributes":{"Name":"Oskar Karcz","Position":"Blockchain Developer at Rumble Fish","Avatar":{"data":{"id":"391","attributes":{"name":"Oskar.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Oskar_d3c2e86fc3.jpg"}}}}}]}}},{"id":"82","attributes":{"title":"What is Account Abstraction and Why is It Important? EIP-4337 Explained","slug":"what-is-account-abstraction-and-why-is-it-important-eip-4337-explained","pubDate":"2024-02-29","content":"<p><strong>Account abstraction in Ethereum represents a groundbreaking shift in how users engage with decentralized applications (dApps). It introduces a novel paradigm where assets can be exclusively held by smart contracts rather than externally owned accounts (EOAs). At the heart of this innovation lies the ERC-4337 standard, which unlocks the potential of smart contract crypto wallets on the Ethereum blockchain.</strong></p><p>This article delves into Ethereum's account abstraction, exploring how it redefines user experiences with smart contract wallets and understanding <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.erc4337.io/\">the ERC-4337 standard</a> within the Ethereum ecosystem. Let's dive into the history, evolution, and benefits of account abstraction, and its implications for driving a Web3 revolution.</p><h2>Back to the basics and why do we need Account Abstraction</h2><p>To get to the bottom of Account Abstraction we need to take a few steps back and look into two main types of accounts on Ethereum:</p><ul><li><strong>EOAs (Externally Owned Accounts)</strong> - used to store and transfer ETH, ERC-20 tokens, and other digital assets. They are controlled by an <strong>Elliptic Curve Digital Signature Algorithm (ECDSA) key</strong>, which is cryptography used to sign and verify digital transactions and involves generating a private key and a corresponding public key. (We’ve previously written more about ECDSA <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-3/\">here</a>). EOAs are managed using a public-private key pair, where the public key is the 64-byte (128 hex character) from which the network address (20-bytes) with the added prefix 0x is derived and is used by others to identify the account for a transaction. The private key is a mathematical key (kept secret by the holder) used to sign transactions and should be known only to the owner of the EOA. Basically, EOAs can only perform two operations: transfer native tokens to other externally owned accounts, and initiate transactions that prompt the execution of another smart contract transaction. This mechanism opens an account to many vulnerabilities and limitations, poor security being the most crucial one. If the account owner loses the private key and seed phrase, they may lose access to all their assets. There is no social recovery mechanism, no spending limits to set, and no 2FAs to add.&nbsp;<br>Another drawback of EOAs is the lack of customization - owners must sign every transaction manually. On top of that, the EOA owner must possess ETH to cover gas fees. All of those make for an unsatisfying user experience, not very welcoming for users outside the Web3 world.</li><li><strong>Smart Contract Accounts (SCA)</strong> - in the simplest terms SCAs are smart contracts functioning as crypto wallets. They are fully programmable and are not controlled by a private key but by a customizable verification logic which opens the way to a variety of new possibilities. SCAs enable transaction customization and add extra features to the wallet, but due to the fact they don’t have a private key and/or seed phrase they cannot initiate transactions. The execution of a specific action is only possible when the smart contract code is triggered by a transaction from an Externally Owned Account (EOA). This basically means that users have to keep an EOA topped up with some ETH (or other native token) to run a contract account. So, dealing with a contract account ends up being even more of a hassle compared to handling a standalone EOA.</li></ul><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/EOA_vs_SCA_d7a888049d.png\" alt=\"EOA vs SCA.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_EOA_vs_SCA_d7a888049d.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_EOA_vs_SCA_d7a888049d.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_EOA_vs_SCA_d7a888049d.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_EOA_vs_SCA_d7a888049d.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><p>Enters… account abstraction! Account abstraction, a concept described in the ERC-4337 proposal, offers a new approach where a smart account can be tailored to specific user needs using smart contracts but without the need for an existing EOA account. How is that possible? Let’s dive a bit deeper! 🐟</p><h2>Introducing UserOperation, Bundlers, and Paymasters</h2><p><strong>EIP-4337</strong> introduced a couple of new features that enabled major upgrades all without any required changes to the Ethereum protocol. One of the said features is a new object type called UserOperation. Instead of shooting off regular transactions like an EOA would, <strong>UserOperation</strong> can handle operations on behalf of users. UserOperation objects carry data and multiple instructions to execute smart contract calls initiated by the smart contract account. They're then dispatched <strong>into a dedicated mempool </strong>where validators, referred to as <strong>\"bundlers\"</strong>, gather them up into a <strong>\"bundled transaction”</strong>. A bundler monitors the special mempool designed for UserOperation objects, bundling them into a single transaction sent to the <strong>EntryPoint</strong> contract. They receive compensation in the form of a portion of the gas fees for this service. Bundlers play a vital role in the account abstraction workflow because EAOs are still required to initiate all Ethereum transactions. Moreover, all bundlers possess EOAs, making them the sole participants needing them within this account abstraction ecosystem. This approach effectively abstracts the necessity for every Web3 participant to have their own EOA. Et voila!</p><p>A moment ago, we mentioned an <strong>EntryPoint contract</strong>. EntryPoint, as a smart contract, receives transactions from bundlers and handles the verification and execution of UserOperations. In the verification phase, it checks if the wallet holds sufficient funds; if not, the transaction is rejected. For execution, EntryPoint executes UserOperations by invoking the smart contract wallets with the call data of the operations. Additionally, EntryPoint deducts funds from the account to reimburse the bundlers.</p><p>Another new addition, introduced in EIP-4337 proposal is <strong>Paymaster</strong>, tasked with managing gas payment policies. These policies offer options on who foots the gas bill and how it's done. As a result, users aren't obliged to hold the native ETH token to engage with the network anymore. It’s a significant improvement for new users, entering the world of Web3 for the first time.&nbsp;</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/aa_workflow_8f50735103.png\" alt=\"aa workflow.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_aa_workflow_8f50735103.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_aa_workflow_8f50735103.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_aa_workflow_8f50735103.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_aa_workflow_8f50735103.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><h2>Benefits of Account Abstraction</h2><p>Now that we have a basic understanding of how <strong>Account Abstraction</strong> works and what mechanisms it utilizes, we can focus on what it actually brings to Web3 users.</p><h3>Improved security</h3><p>Right now, Ethereum accounts rely on a seed phrase and private keys to handle transactions. If that seed phrase takes a hike, there's no getting your accounts back, setting spending limits, adding whitelist accounts, or freezing accounts for extra security measures. But with Account Abstraction, developers can get crafty and program all sorts of options for account authentication and recovery.&nbsp;</p><h3>Lower barrier to entry</h3><p>For folks who aren't familiar with blockchain, understanding the ins and outs of EOAs can pose a challenge. Properly managing and protecting their keys can be complex and leave them susceptible to vulnerabilities. However, thanks to Account Abstraction, developers have the flexibility to implement different logic to integrate security features and allow users to customize how they process and authenticate transactions.</p><h3>Enabled customization and automation</h3><p>When it comes to the current externally owned account (EOA) setup, users are stuck with transactions that can't be customized or automated. Each one has to be signed off individually. But with account abstraction, the game changes. Now, <strong>users can set up recurring payments and dive into other forms of automation</strong>.&nbsp;<br>With EOA, you need to approve and authorize each transaction one by one. Imagine if you're into gaming or anything that involves a lot of transactions – it's a real time-suck and not all that convenient. But with Account Abstraction, things start looking up. You'll be able to greenlight multiple transactions with just one go, kind of like bagging a bunch of items with a single payment.&nbsp;<br><strong>Account Abstraction empowers developers to craft \"wallets\" that are non-custodial yet deliver a straightforward, intuitive, and dependable experience for end-users</strong>. DeFi apps can sport a user interface reminiscent of banking apps, where users are relieved of concerns regarding key management, gas fees, and other complexities. That's the ticket to making life easier for users diving into Ethereum and Web3 apps!</p><h3>Upgraded gas fee management options</h3><p>Remember Paymasters from earlier? Thanks to this feature, <strong>smart account users can cover gas fees with any ERC-20 token they fancy</strong>. Plus, anyone can chip in to foot the bill for someone else's transactions, dApps can even cover their users' gas fees as a thank-you, sponsorship, or just to keep things smooth sailing for users hopping onto their app. That’s the customer-first approach we all love!</p><h2>Conclusion</h2><p>In summary, <strong>Ethereum's Account Abstraction</strong> marks a significant milestone in blockchain technology, offering users unparalleled flexibility and security. As developers delve deeper into its capabilities, the prospects for account abstraction appear promising, steering the evolution of Web3 toward widespread adoption.</p><p>In the next part of this series, we’ll take a look at the most promising projects powered by Account Abstraction, including one of our own - <strong>Devil Wallet, a mobile Web3 wallet utilizing EIP-4337</strong>. Stay tuned!</p>","timeToRead":7,"shortContent":"<p>Account abstraction in Ethereum represents a groundbreaking shift in how users engage with decentralized applications (dApps). It introduces a novel paradigm where assets can be exclusively held by smart contracts rather than externally owned accounts (EOAs). At the heart of this innovation lies the ERC-4337 standard, which unlocks the potential of smart contract crypto wallets on the Ethereum blockchain.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"blog-post-account-abstraction-part-1-v2.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/blog_post_account_abstraction_part_1_v2_1532c95f89.png"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/account_abstraction_part_1_miniature_f66a08c216.png","name":"account abstraction part 1 miniature.png"}}},"category":[{"name":"Business stories"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"81","attributes":{"title":"The Current State of Knowledge About Zero Knowledge. Comprehensive Private Token Overview - Part 3","slug":"the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-3","pubDate":"2024-01-29","content":"<p>This post is Part 3 of our three-part series dedicated to ZKs and Private Tokens. Click here for <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-1/\">Part 1</a>, and <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-2/\">Part 2</a>.</p><h2>Part 3: Return of the Hash</h2><h3>Theory vs practice. Expectations vs reality</h3><p>In the previous part of the series, we delved into seemingly unrelated topics about blockchain, zero-knowledge proofs, and privacy. Now, let’s transition to practical considerations and explore the tools available for developers.</p><p>Undoubtedly, the creation of any kind of ZK technology needs <strong>ZK Proof</strong>. How can we create it? The core element in this process is known as a circuit, often referring to an arithmetic circuit—an ordered collection of operations (such as addition, multiplication) represented by gates. In the realm of <strong>ZK-circuits</strong>, this translates to a program specifying a calculation to be performed on certain data inputs, used by the prover to generate a proof of knowledge. Thankfully we’re not forced to create every complex circuit from logic gates (AND, OR etc), but instead can use dedicated programming languages. Moreover, it's possible to validate the proof on-chain, using smart contracts deployed on platforms like Ethereum. Let's explore the available options:</p><ul style=\"list-style-type:circle;\"><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.circom.io/\"><strong>circom</strong></a><strong> by iden3</strong>: designed for ZK-circuit development, circom provides programmers with a powerful and precise Domain-Specific Language (DSL). However, newcomers may find it challenging to grasp the syntax and semantics underlying the mathematical equations.</li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://aztec.network/\"><strong>Noir by</strong> <strong>Aztec</strong></a>: a language for Aztec, a privacy-focused Layer 2 for Ethereum, heavily inspired by Rust. Noir is designed to be user-friendly for developers without a ZK background.</li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.cairo-lang.org/\"><strong>Cairo</strong></a> <strong>by Starkware</strong>: another language dedicated to Layer 2, Cairo is a relatively low-level \"intermediate\" language known for its efficiency and scalability.</li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://zokrates.github.io/\"><strong>Zokrates</strong></a>: while not a language per se, Zokrates is a toolbox for zkSNARKs. It simplifies the complexity of ZK-circuits, aiding in generating proofs in high-level languages and verifying them through Solidity smart contracts.</li></ul><p>Other noteworthy languages include:</p><ul><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.minaprotocol.com/zkapps/o1js\">o1js</a></li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://leo-lang.org/\">Leo</a></li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://lurk-lang.org/\">Lurk</a></li></ul><p>As evident, several options are already available, with more on the horizon! While developing on Layer 2 platforms like Starknet has dedicated languages, addressing the Ethereum Mainnet introduces intricacies due to subtle yet consequential differences between ZK and EVM elliptic curves. Let’s explain them now.</p><h3>Elliptic curves and straightforward hashes</h3><p>Once again, in this series of articles, I don't intend to delve too deeply into this complex theme, as covering everything comprehensively would require another series of papers. Numerous excellent resources on this subject can be found on the internet. So, let's keep it as simple as possible.</p><p>Blockchains like Bitcoin or Ethereum employ hashes as account addresses, which is obvious. However, not everyone understands how these addresses are created. It involves something like private and public keys, a touch of cryptography (or, as some might say, magic), and voila! Let's take a closer look.</p><p>In mathematics, there's a concept known as elliptic curves. While these curves can take various forms, they are essentially a set of points that satisfy a specific mathematical equation, such as:</p><p>y2 = x3 + ax + b.&nbsp;</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/zk_private_token_part3_chart_1_d39c1b3a79.png\" alt=\"zk-private-token-part3-chart-1.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_zk_private_token_part3_chart_1_d39c1b3a79.png 174w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_zk_private_token_part3_chart_1_d39c1b3a79.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_zk_private_token_part3_chart_1_d39c1b3a79.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_zk_private_token_part3_chart_1_d39c1b3a79.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><p>&nbsp;Utilizing the cryptographic system known as <strong>ECDSA (Elliptic Curve Digital Signature Algorithm)</strong>, it becomes possible to obtain a point on the elliptic curve (public key) through the multiplication of two numbers. One of these numbers represents the private key. The trick lies in the fact that calculating the public key from a known number (private key) is extremely fast, yet attempting to deduce the number (private key) from a given point (public key) is incredibly challenging. <strong>In essence, the public key can be derived through a one-way function from the private key</strong>.</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/zk_private_tokens_chart_2_bcc8c47fc1.jpg\" alt=\"zk-private-tokens-chart-2.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_zk_private_tokens_chart_2_bcc8c47fc1.jpg 184w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_zk_private_tokens_chart_2_bcc8c47fc1.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_zk_private_tokens_chart_2_bcc8c47fc1.jpg 750w,\" sizes=\"100vw\" width=\"750px\"><figcaption><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.horizen.io/academy/public-key-cryptography-pkc/\">Click for resource</a></figcaption></figure><p>To generate a public address for your account, simply append 0x to the beginning of the last 20 bytes of the Keccak-256 hash of the public key.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/keccak_256_a2093c2e59.png\" alt=\"keccak-256.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_keccak_256_a2093c2e59.png 97w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_keccak_256_a2093c2e59.png 311w,\" sizes=\"100vw\" width=\"311px\"></p><p>The curve employed in ECDSA is named the <strong>secp256k1 curve</strong>, and what holds significance for us is that operations on this curve entail arithmetic with 256-bit numbers. Why is this aspect crucial?</p><h3>Zero-Knowledge Proofs and EVM Relationship Status: It’s complicated</h3><p>Recall zkSNARKs, the proving system integral to Zero-Knowledge Proofs? zkSNARKs rely on elliptic curve cryptography, which permits operations only on numbers restricted to 254 bits. In summary, the numbers utilized on Ethereum's EVM surpass the 254-bit limits allowed in zkSNARK systems. Consequently, to implement ECDSA algorithms within ZK circuits, we must resort to 'non-native' field arithmetic.</p><p><strong>This presents one of the most significant challenges in ensuring a smooth interaction between ZKP and EVM</strong>. While it is achievable, there's always a trade-off: time or money. A noteworthy example is the commendable work by the 0xPARK Foundation, which presented an implementation of <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://0xparc.org/blog/zk-ecdsa-1\">an ECDSA circuit in the circom language, capable of generating zkSNARKs</a>. Although it is possible to prove ownership of an account, there is still much to be done, as the performance falls short of expectations. The circom environment is resource-constrained, making proofs expensive and time-consuming.</p><p>Nevertheless, ongoing efforts have resulted in an improved approach to verifying ECDSA signatures in ZK. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://personaelabs.org/posts/spartan-ecdsa/\"><strong>Spartan-ecdsa</strong></a>, <strong>introduced by Personae Labs</strong>, shows promise. It’s still a work in progress, with challenges like poor Keccak performance and excessively large proofs for on-chain verification via smart contracts still needing to be addressed.</p><h3>There is always hope</h3><p>Let's pause for a moment and contemplate our goals and available options. The objective is to validate the proof (a 254-bit system) on-chain, which is a 256-bit system. Two potential approaches come to mind:</p><ol><li>Convert 256-bit numbers to 254-bit ones, as previously discussed. However, this option, as assumed, is currently impractical.</li><li>Convert 254-bit numbers to 256-bit ones, which we will dive into below.</li></ol><p>Given that numerous encryption and description operations need to occur within zkSNARKs, necessitating 254-bit numbers for easy arithmetic, we can explore the utilization of another elliptic curve known as <strong>Baby Jubjub</strong>. Specifically designed to function efficiently within zkSNARKs on Ethereum, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eips.ethereum.org/EIPS/eip-2494\">the ERC-2494</a> was introduced in 2020. Although it is no longer active, it remains a compelling and intriguing concept worth considering.</p><h3>A Bitcoin Orchard: Merkle Trees</h3><p>In the realm of <strong>Zero-Knowledge Proofs (ZKP)</strong> on the<strong> Ethereum Virtual Machine (EVM)</strong>, or more broadly, whenever we navigate the blockchain landscape, a critical consideration emerges: <strong>data storage</strong>. While the ability to create and verify proofs is commendable, it becomes even more enchanting when we can efficiently store those proofs on the blockchain. A widely adopted solution, employed, for instance, by Tornado Cash, is <strong>the Merkle Tree</strong>. This data structure proves invaluable for privacy-centric projects by securely storing hashed (encrypted) data fragments while enabling the verification of specific data without exposing the entirety of the dataset. Let's once again refer to the diagram for a clearer illustration.<img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/merkle_tree_bb7e69a379.png\" alt=\"merkle-tree.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_merkle_tree_bb7e69a379.png 203w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_merkle_tree_bb7e69a379.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_merkle_tree_bb7e69a379.png 750w,\" sizes=\"100vw\" width=\"750px\"></p><p>At its core, a Merkle Tree is a data structure crafted from encrypted (hashed) data fragments. Illustrated in the diagram, each pair undergoes a hashing process, generating the next \"leaf\" (node). This paired hashing repeats, ascending the tree until culminating in the top hash known as <strong>the Merkle Root</strong>. This ingenious structure facilitates the proof of data existence within the tree without necessitating the storage of the entire dataset. For an in-depth exploration, delve into <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/crypto-0-nite/merkle-proofs-explained-6dd429623dc5\">this detailed explanation</a>.</p><p>Merkle Trees works great for the UTXO Model, because the entire state can be stored with two Merkle Trees:</p><ul><li><strong>a Note Tree</strong> - stores all system data, including smart contracts and asset ownership;</li><li><strong>a Nullifier Tree</strong> - stores data about spent (used) UTXOs.</li></ul><p>Before using a UTXO, it's checked in the Nullifier Tree to ensure it hasn't been used. If all's clear, changes can be made in the Note Tree.</p><h3>Encrypt. Verify. Repeat. zkSNARK</h3><p>Understanding Merkle Trees is vital for comparing SNARKs on various circuits, especially if the criterion is hash verifying efficiency. The method of creating hashes within the Merkle Tree, however, is far from unequivocal; it hinges on factors like numerical systems (e.g., 256- / 254-bit), arithmetic complexity, and cryptographic security. The most prominent ones among many available hash functions are:&nbsp;</p><ul><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eprint.iacr.org/2016/492\">MiMC</a> - designed for very compact circuits with minimal amount of multiplications. Great for the tiniest circuits and as the base for more complicated algorithms (e.g. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eprint.iacr.org/2019/397.pdf\">GMiMC</a>),</li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eprint.iacr.org/2019/458\">Poseidon</a> - an enhanced version of MiMC with improved security, well-suited for scenarios requiring a collision-resistant, secure, and SNARKs-friendly algorithm,</li><li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://research.nccgroup.com/2023/03/22/breaking-pedersen-hashes-in-practice/\">Pedersen</a> - extremely useful and efficient, for e.g. homomorphic encryption, which enables solving some zk-security problems (like <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://research.nccgroup.com/2021/06/15/on-the-use-of-pedersen-commitments-for-confidential-payments/\">confidential payments</a>) and building Merkle proofs. On the other hand, this can lead to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://research.nccgroup.com/2023/03/22/breaking-pedersen-hashes-in-practice/\">significant security vulnerabilities</a>.</li></ul><p>Segueing back to <strong>zkSNARKs protocols</strong>, two prominent players — <strong>PLONK</strong> and <strong>Groth16</strong> — take the spotlight. For a detailed exploration of their nuances and functionalities, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/@mehialiabadi/plonk-vs-groth16-50254c157196\">dive into this article</a>. In a nutshell, both Groth16 and PLONK, are not quantum-resistant, and exhibit distinct characteristics: Groth16 boasts a generally smaller proof size, whereas PLONK sidesteps the need for recurring trusted setup ceremonies.</p><h3>Private Token: Proof of Concept&nbsp;</h3><p>Let’s see what the Private Token system could look like, using ZKP and EVM blockchain. <strong>Private Token</strong> is deployed as an EVM smart contract on a ZK-rollup (L2) and uses <strong>zkSNARKs</strong> to verify (on-chain via smart contract) transfer correctness and keep privacy at the same time. It is designed with the UTXO Model and uses Merkle Tree for membership proof. The Private Token contract maps UTXOs with commitments, having a structure defined by owner address, value, and unique ID. The ZK Circuit, written in circom language, verifies input and output UTXO values and sender ownership. As a result, we get a new UTXO commitment, in the form of data hashed with e.g. Pedersen Hash Function. If valid, a new commitment is added to the Merkle Tree using the Baby Jubjub curve (254-bit) for an efficient proof system. UTXOs are stored on Private Token contract in an encrypted format and thanks to the Partially Homomorphic Encryption can be decrypted and read only by the owner of the account.</p><p>Simple, right? Well, if you're still a bit dazzled, no worries – I'm not grading anyone on their zero-knowledge prowess. Stick around, and we'll unravel more in the next posts!</p>","timeToRead":10,"shortContent":"<p>In the previous part of the series, we delved into seemingly unrelated topics about blockchain, zero-knowledge proofs, and privacy. Now, let’s transition to practical considerations and explore the tools available for developers.</p><p>Undoubtedly, the creation of any kind of ZK technology needs <strong>ZK Proof</strong>. How can we create it?&nbsp;</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"private-tokens-zero-knowledge-part-3.PNG","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/private_tokens_zero_knowledge_part_3_e41089b8f6.PNG"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/3_4145b0d656.png","name":"3.png"}}},"category":[{"name":"Code stories"}],"authors":{"data":[{"attributes":{"Name":"Oskar Karcz","Position":"Blockchain Developer at Rumble Fish","Avatar":{"data":{"id":"391","attributes":{"name":"Oskar.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Oskar_d3c2e86fc3.jpg"}}}}}]}}},{"id":"80","attributes":{"title":"The Current State of Knowledge About Zero Knowledge. Comprehensive Private Token Overview - Part 2","slug":"the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-2","pubDate":"2024-01-22","content":"<p>This post is Part 2 of our three-part series dedicated to ZKs and Private Tokens. Please read Part 1 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-1/\">here</a>.</p><h2>Part 2: The ZK Strikes Back</h2><h3>Money for nothin’ (... and the privacy for free)</h3><p>But why does it matter? Why delve into all these models and ownership concepts? Well, it's crucial when we aim to understand secure and privacy-centric transactions.</p><p>As mentioned in <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-1/\">Part 1</a>, <strong>the UTXO model resembles a cash-payment system, while ETH's Account-Based model is more akin to a bank account setup</strong>. Which one offers better privacy? Certainly, it's the former. Cash transactions are visible to both parties (sender and receiver), and the only necessary data is the bill's value and its new owner's address. Simple as that. Moreover, the sender (Bob) and receiver (Alice) can arrange to transfer cash without meeting by utilizing a code-safe box. Bob places the money in the box, sends the code to Alice, who then enters the code to retrieve the money. Voila! It's private and secure.</p><p>Now, let's explore how this straightforward example can evolve into a blockchain solution. The critical question arises: How can we verify that Bob genuinely owned that money before and/or didn't just print the bill and hack the system? Well, the solution lies in checking whether Bob owns the money and ensuring that Alice (A) and Bob (B) balances before the transaction are equal to their balances after the transaction, represented as A1 + B1 = A2 + B2. This is where the magic unfolds — enter <strong>zero knowledge proofs.</strong></p><h3>ZKP. Zero Knowledge Proof.</h3><p>Thanks to the prowess of cryptography, one can prove the veracity of a given piece of data without actually revealing the data itself. If you've never encountered <strong>Zero Knowledge Proofs (ZKP)</strong>, you might be surprised that it's possible. Yes, it's possible! Revisiting our example, Bob (the prover) can persuade Alice (the verifier) that he owns the money and the transaction is valid. Moreover, the entire system can acknowledge this proof, all without anyone discerning the specific amount of money and balances involved!</p><p>Now, let's pause for a moment and delve deeper into the beauty of ZKP.&nbsp;</p><p>While the concept is continually evolving (with much work still ahead), its roots trace back to 1985 when it was first introduced in the academic paper <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://dl.acm.org/doi/10.1145/22145.22178\">\"The knowledge complexity of interactive proof-systems\"</a>.</p><p>From our perspective, the significance lies in ZKP's ability to address privacy concerns, allowing for the validation of claims without the need to expose sensitive information. For instance, it can be employed to verify your ID without revealing the actual ID (\"I am Bob, here's the proof!\"). To achieve this, the most basic structure of a zero-knowledge proof consists of three elements:</p><ol><li><strong>Witness:</strong> This is the secret information that the prover aims to prove knowledge of without revealing it.</li><li><strong>Challenge:</strong> A randomly selected question posed by the verifier, which the prover must answer.</li><li><strong>Response:</strong> The answer calculated by the prover in response to the question asked.</li></ol><p>This interaction must be repeated multiple times to eliminate the possibility of the prover faking knowledge of the witness. Termed <strong>\"interactive zero-knowledge proof,\"</strong> it necessitates back-and-forth communication between the prover and verifier. While this is effective, it might be inconvenient or even impossible in some cases. Fortunately, there's also a solution—enter <strong>\"Non-interactive ZKP,\"</strong> which can be generated using a \"shared key.\" This key can be passed to anyone for verification, minimizing the communication required between the prover and verifier, thus enhancing the efficiency of ZKP.</p><h3>zk-TYPEs&nbsp;</h3><p>Non-interactive proofs come in various types, and currently, two of the most compelling are:</p><ol><li><strong>zk-SNARK: Zero Knowledge Succinct Non-interactive Argument of Knowledge</strong></li></ol><p>Introduced in 2012 and employed by, for example, Zcash, zk-SNARKs are small in size and easy to verify (succinct). zk-SNARK generates a proof using elliptic curves cryptography (no worries, I will explain them later on!), which implicates two important things. Firstly, the proof-generating process requires a trusted setup, so the initial creation event of the keys is needed to create and verify the proof. This one is called the Powers of Tau Ceremony and is used to ensure security by using a multi-party computation (MPC) (more about setup ceremonies can be found <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://zkproof.org/2021/06/30/setup-ceremonies/\">here</a>). Secondly, zkSNARKs are not quantum attacks resistant, which might be the case in the future.&nbsp;</p><ol start=\"2\"><li><strong>zk-STARK: Zero-Knowledge Scalable Transparent Argument of Knowledge</strong></li></ol><p>Based on hash functions, zk-STARKs stand out by being resistant to quantum attacks and not requiring a trusted setup, unlike zk-SNARKs. However, zk-STARK proofs have a considerably larger size than zk-SNARKs, translating to longer verification times and increased gas requirements.<img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/zk_snark_vs_zk_stark_1cfd4f86c2.png\" alt=\"zk-snark-vs-zk-stark.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_zk_snark_vs_zk_stark_1cfd4f86c2.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_zk_snark_vs_zk_stark_1cfd4f86c2.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_zk_snark_vs_zk_stark_1cfd4f86c2.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_zk_snark_vs_zk_stark_1cfd4f86c2.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><h3>Zero Knowledge Proof - Full Utility Certainty</h3><p>Since its introduction, <strong>Zero Knowledge Proofs (ZKP)</strong> have found compelling use cases, and we'll focus on their application in the blockchain realm. ZCash, launched in 2016, stands out as one of the pioneers in <strong>privacy-oriented blockchains</strong>, as it was created as the solution for one of the biggest Bitcoin challenges: privacy. While Bitcoin leans towards pseudonymity, allowing for easy tracking of addresses and transactions, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://z.cash/\">ZCash</a> strives for true anonymity. Leveraging ZK technology, specifically zkSNARKs, ZCash conceals transaction amounts and addresses, offering a robust privacy solution (learn more <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://z.cash/learn/what-is-zcash/\">here</a>).</p><p>ZK technology isn't exclusive to the UTXO Model; projects on the Account-Based model, especially on the Ethereum Network, have embraced it as well. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://tornado.ws/\">Tornado Cash</a>, a prominent example, acts as a mixer allowing users to deposit crypto from one address and withdraw it with another, thwarting attempts to link two wallets and track on-chain activity. While facing legal issues and security challenges, Tornado Cash remains an intriguing attempt at preserving privacy.</p><p>Other projects like Consensys' \"The Confidential Transactions\" and EY's \"Nightfall Project\" approach privacy differently. The Confidential Transactions aimed to enable transfers with encrypted balances, concealing user balances. Sender and receiver addresses weren’t hidden though, both sides of a transaction had to communicate off-chain and users had to keep decrypted balances to not lose access to their funds, which made The Confidential Transactions not so user-friendly and thus unsuccessful.&nbsp;</p><p>On the other hand, the Nightfall Project sought to recreate the UTXO Model on Ethereum's smart contract, employing a Merkle Tree to manage UTXOs and hide users' balances. Though facing challenges such as expensive transactions and synchronization issues, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.ey.com/en_gl/news/2023/01/the-ey-and-polygon-organizations-update-source-code-for-blockchain-privacy-based-protocol-nightfall\">Nightfall evolved into a zk-rollup protocol</a> in collaboration with Polygon, offering efficient private transactions on the Ethereum Mainnet without compromising transparency and security.</p><h3>Like a complete unknown, like a Rolling Stone… like a ZK Roll-up?&nbsp;</h3><p>As detailed on <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/en/developers/docs/scaling/zk-rollups\">Ethereum's comprehensive content and resource page</a>, Zero-Knowledge Rollups (ZKR) are Layer 2 scaling solutions designed to enhance throughput on the Ethereum Mainnet by relocating computation and state storage off-chain. ZKR bundles transactions into batches, executing them off-chain and subsequently posting reduced data to the blockchain.</p><p>Remember the Blockchain Trilemma we discussed earlier? <strong>Layer 2 (L2)</strong> is a concept aiming to address Ethereum's scalability issues, essentially a separate blockchain <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/en/layer-2/#what-is-layer-2\">extending Ethereum with inherited security guarantees</a>. L2 typically comprises a <strong>network</strong> (separate blockchain) and a <strong>smart contract</strong> responsible for interacting with the underlying blockchain, such as the Ethereum Mainnet.</p><p>Presently, two main <strong>Layer 2 implementations</strong> are considered the most promising: payment <i>channels</i> and <i>rollups</i>. Both aim to reduce transaction costs and enhance scalability by executing state changes off-chain and proving them on-chain.</p><p>One can’t be surprised that scalability in rollups can be achieved in different ways and nowadays two types are being the most actively developed: <strong>Optimistic Rollup</strong> and <strong>ZK Rollup</strong>. Focusing on the latter due to its alignment with the Zero Knowledge theme of this article, ZK Rollups aggregate transactions, perform off-chain computation (generate Zero Knowledge Proofs) and send data to Layer 1 smart contracts for proof validation. This architectural approach accelerates and economizes transactions without compromising security.</p><p>While this may seem overly complex, there are already working solutions like <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://zksync.io/\">zkSync</a>, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.starknet.io/en\">Starknet</a>, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://loopring.org/\">Loopring</a>, and <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://aztec.network\">Aztec</a>, with a total value locked exceeding a billion dollars (see <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://l2beat.com/scaling/summary\">ZK Rollup project summary</a>).</p><p>A significant challenge in ZK Rollups revolves around generating and validating proofs efficiently. How to create the proof as fast as possible, while keeping it not “too heavy” or not too expensive to verify (remember, this must be passed to the blockchain, and that costs money!)? This is exactly where the knowledge about zkSNARKs and zkSTARKs needs to be utilized to choose the most suitable technology for a project! For example, Starknet uses zkSTARK and Loopring is based on zkSNARKs. So, as you can see, it’s not such a trivial decision, especially when the technology is being developed so rapidly.</p><p>&nbsp;</p><p>This is Part 2 of our three-part series - stay tuned for its continuation!</p>","timeToRead":8,"shortContent":"<p>But why does it matter? Why delve into all these models and ownership concepts? Well, it's crucial when we aim to understand secure and privacy-centric transactions.</p><p>As mentioned in <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-1/\">Part 1</a>, <strong>the UTXO model resembles a cash-payment system, while ETH's Account-Based model is more akin to a bank account setup</strong>. Which one offers better privacy? Certainly, it's the former.&nbsp;</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"zk-private-tokens-part-2.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/zk_private_tokens_part_2_c8a8e0fcdc.png"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/2_f3641c937f.png","name":"2.png"}}},"category":[{"name":"Code Stories"}],"authors":{"data":[{"attributes":{"Name":"Oskar Karcz","Position":"Blockchain Developer at Rumble Fish","Avatar":{"data":{"id":"391","attributes":{"name":"Oskar.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Oskar_d3c2e86fc3.jpg"}}}}}]}}},{"id":"79","attributes":{"title":"The Current State of Knowledge About Zero Knowledge. Comprehensive Private Token Overview - Part 1","slug":"the-current-state-of-knowledge-about-zero-knowledge-comprehensive-private-token-overview-part-1","pubDate":"2024-01-15","content":"<p><strong>This blog post is the first of the three-part series regarding Zero Knowledge and Private Tokens. We’re going to take a deep dive into the history, evolution, and what lies ahead for Private Tokens. Today, I’m going to take you through the Blockchain Trilemma, the different approaches to on-chain user balance tracking, and more. Ready to dive in? Let’s get started!&nbsp;</strong></p><h2>Part 1: Blockchain’s New Hope</h2><p>Alright, so you’ve come across the term “blockchain” and wondered if it automatically guarantees privacy. Perhaps you've engaged in transactions and found yourself puzzled by the myriad of hashes and private/public keys. Ever wished it were as straightforward as typing in your name and sending tokens? Alternatively, you might be well-versed in blockchain tech but haven't delved into the realms of privacy, anonymity, and pseudonymity. If any of these scenarios resonate with you, grab a generous cup of coffee, find a comfortable seat, and let's embark on a journey through the expansive universe of blockchain!</p><h3>Who is the Batman?</h3><p>Anonymity is likely one of the buzzwords that pop up when people discuss blockchain. However, we need to recognize that it's not as simple as equating blockchain with anonymity. Why? Because <strong>while some blockchains offer the possibility of true anonymity, others do not</strong>.</p><p>Have you ever heard of <strong>Satoshi Nakamoto</strong>? That's the alias of the inventor of Bitcoin. We know his nickname and have a fair idea of his wallet addresses and some transactions, yet his real identity remains elusive (and probably always will). Think of him as Batman – everyone knows what he does and how he looks, but nobody knows his real face. This is pseudonymity.&nbsp;<br>On the other hand, anonymity means your identity is concealed, and your actions can't be traced back to you or your address. However, this doesn't imply that transaction details are impossible to unveil. When the data of a transaction is entirely concealed, we call it a private transaction. Why might someone need it? Well, it can be a huge advantage for people who care about their digital privacy or for companies dealing with sensitive private data. And many many more. So privacy is gonna be the main topic of this series of articles, in which we’ll look at how it can be implemented and the pros and cons of different approaches.</p><h3>Public, private, or permissioned?</h3><p>Let's circle back to the blockchain. Imagine it as <strong>a decentralized public ledger</strong> capable of storing various types of data. So, how does a public ledger offer any privacy? The answer lies in cryptography — specifically, the mathematical underpinnings of this technology. Don't worry; we won't delve (too) deeply into concepts like <strong>zero-knowledge proofs</strong> (ZK), <strong>secure multi-party computation</strong> (MPC), <strong>or fully homomorphic encryption</strong> (FHE) this time. Instead, we'll provide an overview to grasp the context and understand the numerous approaches to blockchain architecture and its concepts.</p><p>Returning to the privacy dilemma for a moment, it's crucial to recognize that blockchain isn't inherently a private ledger by default. The widely known ones, such as <strong>Bitcoin or Ethereum</strong>, are indeed public, allowing anyone to join and participate in their core activities. Simultaneously, it's possible to establish a decentralized ledger (aka blockchain) controlled by a single entity (operator) that restricts access to the network, permitting only selected and verified participants to create it. This is referred to as <strong>a private blockchain</strong>.</p><p>You might wonder <strong>how this differs from a centralized database</strong> (an excellent question!). The key lies in <strong>immutability and digital signatures!</strong> Blockchains ensure that once data is recorded, it becomes practically impossible to change (well, almost, as explained in my <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/blog/post/how-to-make-smart-contracts-upgradeable-without-Proxy/\">previous post about Upgradeability</a>). Just to let you know, there’s also a mix of public and private concepts named permissioned (in some cases called “consortium” or “federated”), which is public but can allocate specific permissions to a specific user.</p><h3>Gotta catch ’em all! Security, Decentralization, Scalability - The Blockchain Trilemma</h3><p>Why do we find ourselves in the position of having to choose the best fit for our needs among private, public, or permissioned blockchains? Can't we simply create and standardize a \"Plug and Play blockchain\"? It sounds fantastic, but it’s akin to facing <strong>the Blockchain Trilemma</strong>. Numerous articles, videos, and discussions delve into this theme, so here, I'll briefly sum it up to ensure you're familiar with the concept before we move forward.&nbsp;<br>The Blockchain Trilemma, as articulated by Vitalik Buterin, posits that a blockchain can deliver only two out of three essential benefits: security, decentralization, and scalability.</p><p><strong>The Blockchain Trilemma</strong>, as articulated by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/VitalikButerin\">Vitalik Buterin</a>, posits that a blockchain can deliver only two out of three essential benefits: security, decentralization, and scalability.</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/the_blockchain_trilemma_rumble_fish_6f467b37de.png\" alt=\"the-blockchain-trilemma-rumble-fish.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_the_blockchain_trilemma_rumble_fish_6f467b37de.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_the_blockchain_trilemma_rumble_fish_6f467b37de.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_the_blockchain_trilemma_rumble_fish_6f467b37de.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_the_blockchain_trilemma_rumble_fish_6f467b37de.png 1000w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>The Blockchain Trilemma</figcaption></figure><h3>“Always two there are. No more. No less.”</h3><p>Perhaps Master Yoda wasn't talking about blockchains, but we can certainly agree that, currently, two of the most significant blockchains with fundamental differences are Bitcoin (BTC) and Ethereum (ETH). In this discussion, I'll concentrate on one of many distinctions crucial to comprehending diverse approaches to privacy and anonymous transactions—specifically, the <strong>tracking of users' balances</strong>.</p><p>They say a picture is worth a thousand words. Indeed, let's start by examining the diagram below.</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/models_detailed_comparison_by_medium_user_5a8069e797.png\" alt=\"models-detailed-comparison-by-medium-user.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_models_detailed_comparison_by_medium_user_5a8069e797.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_models_detailed_comparison_by_medium_user_5a8069e797.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_models_detailed_comparison_by_medium_user_5a8069e797.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_models_detailed_comparison_by_medium_user_5a8069e797.png 1000w,\" sizes=\"100vw\" width=\"1000px\"><figcaption><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://drraghavendra99.medium.com/how-to-measure-and-improvise-utxo-efficiency-using-topl-blockchain-99c776c90b8f\">Click for source</a></figcaption></figure><p>Now, let's take a guess at which one describes BTC and ETH. Alternatively, we can delve into the workings of these two.</p><p><strong>The UTXO (Unspent Transaction Output)</strong> model serves as a foundational concept for the <strong>BTC network</strong> and was chosen for various reasons. It can be compared to cash transactions, where each UTXO is akin to a paper bill. For instance, if you need to pay $10 but only have a $20 bill, you hand over the $20, with $10 going to the recipient and $10 returned to you as a change. Each bill can be represented as a separate UTXO. Later, if you want to pay, say, $30, you would take $10 and $20 bills (two separate UTXOs) and create a single transaction (a single UTXO worth $30). In terms of the blockchain, <strong>the Bitcoin protocol doesn't track users' balances</strong>. Instead, each UTXO is attributed to a specific address. The protocol doesn't create your account with an updated balance but checks all your UTXOs and displays a summarized amount. Each Bitcoin node maintains a list of all UTXOs and checks their usability (whether they have already been spent).</p><p>Sticking with this real-life analogy, we can think of <strong>the Account Model</strong> used by ETH as a banking system, where every asset is represented by the balance within accounts. Each transaction recorded by the blockchain alters the system state, meaning that every node on the network must track and store all account balances with each new block added to the chain. For example, if Bob wants to pay Alice $20, his balance is decreased, and Alice's is increased by $20. To prevent a <strong>Double-Spending Attack</strong> (or, in ETH terms, a <strong>Replay Attack</strong>), each transaction has its own nonce—a number that can be used only once.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/account_vs_utxo_comparison_cbaf6777ff.png\" alt=\"account-vs-utxo-comparison.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_account_vs_utxo_comparison_cbaf6777ff.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_account_vs_utxo_comparison_cbaf6777ff.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_account_vs_utxo_comparison_cbaf6777ff.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_account_vs_utxo_comparison_cbaf6777ff.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></p><p>When it comes to privacy, both the UTXO and Account Models come with their respective pros and cons.</p><p><strong>The UTXO model</strong> introduces a bit more complexity in linking transactions due to the ability to change addresses with each new one. A newly created address lacks an owner, making it less straightforward to trace connections between UTXOs and, consequently, correlate them to a single use.</p><p>On the other hand, <strong>the Account-based model</strong> doesn't offer such flexibility. Each address's state is meticulously tracked. However, it comes with a \"built-in mixer\", adding a layer of complexity to tracing the flow of money. If an account receives funds from various sources with numerous transactions, the entire amount is consolidated as the account's balance. When a new payment is recorded, it becomes challenging to pinpoint the exact coin that was used for that transaction.</p><p>It's important to note that this is a simplified overview, and we're not diving into the technical possibilities or \"corner cases\" at this point.</p><h3>Yes, we can mix!</h3><p>As mentioned earlier, one of the significant drawbacks of <strong>the UTXO Model</strong> is its relative difficulty in implementing multi-assets and smart contracts (or any kind of programs executed on-chain). Nevertheless, there are already ideas circulating on how to enhance the UTXO and make it more \"programmable.\" This evolution can be observed in blockchains like <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cardano.org/\">Cardano</a> or <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.nervos.org/\">Nervos</a>, which have implemented the <strong>Extended UTXO (EUTXO) models</strong>. These models might be considered even more flexible and developer-friendly than the Account-Based Model.</p><p>Without delving too deep into EUTXO (which is undoubtedly substantial enough for a separate article), we can simplify and assume that EUTXO extends the \"basic\" UTXO in two significant ways:</p><ul><li>Uses scripts as logic to determine whether UTXO can be spent or not,</li><li>Allows the sending of (almost) any kind of data, not just address and value.</li></ul><p>This is what distinguishes EUTXO from the Account-Based Model—scripts and data are used to alter the blockchain state.</p><p>That wraps it up for now and concludes the first part of my series. Today, we've laid the groundwork for Part 2, where I'll dive deeper into the realms of <strong>zero-knowledge proofs and private tokens</strong>. More to come next week - stay tuned!</p>","timeToRead":8,"shortContent":"<p>This blog post is the first of the three-part series regarding Zero Knowledge and Private Tokens. We’re going to take a deep dive into the history, evolution, and what lies ahead for Private Tokens. Today, I’m going to take you through the Blockchain &nbsp;Trilemma, the different approaches to on-chain user balance tracking, and more. Ready to dive in? Let’s get started!&nbsp;</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"zk-private-tokens-part-1.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/zk_private_tokens_part_1_ba8a7f7d21.png"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1_46532c26d7.png","name":"1.png"}}},"category":[{"name":"Code Stories"}],"authors":{"data":[{"attributes":{"Name":"Oskar Karcz","Position":"Blockchain Developer at Rumble Fish","Avatar":{"data":{"id":"391","attributes":{"name":"Oskar.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Oskar_d3c2e86fc3.jpg"}}}}}]}}},{"id":"78","attributes":{"title":"How AI Chatbot Assistants Transform Businesses - Top 6 Real Use Cases of AI Chatbot Implementation","slug":"how-ai-chatbot-assistants-transform-businesses-top-6-real-use-cases-of-ai-chatbot-implementation","pubDate":"2024-01-03","content":"<p><strong>In the rapidly evolving digital innovation landscape, AI chatbot assistants are emerging as powerful catalysts for change across various industries. Let's explore how these intelligent assistants revolutionize operations and drive unparalleled benefits in various sectors.</strong></p><p>AI chatbots leverage a spectrum of advanced AI technologies, like machine learning for refined responses, natural language processing (NLP), and natural language understanding (NLU) to precisely decipher user inquiries and align them with specific intents. With deep learning capabilities, AI chatbots continuously enhance accuracy, fostering natural and seamless interactions. This iterative learning process makes human-AI interactions more intuitive, with a communication style that flows effortlessly without the risk of misunderstandings over time. Let’s see how AI chatbots can enhance productivity, customer satisfaction, and efficiency across multiple industries.</p><h2>Must-know AI Chatbot Stats</h2><p>Let’s start with some numbers to support our claims and emphasize the importance of the AI industry. AI is not just a technology; it's a transformative force reshaping the dynamics of human-machine interaction. Chatbots, wielding the power of conversational AI, have proven instrumental in driving sales, <strong>boasting an average</strong> <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.intercom.com/blog/the-state-of-chatbots/\">increase of 67%</a>. This isn't just about revenue; it's about the efficacy of chatbots in closing deals, with <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.intercom.com/blog/the-state-of-chatbots/\">35% of business leaders</a> <strong>crediting them for successful transactions</strong>.</p><p>Investment in conversational AI is witnessing a surge, evident in the rising number of mergers and acquisitions in the sector. The global chatbot market, valued at $370 million in 2017, is expected <strong>to reach</strong> <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.marketsandmarkets.com/Market-Reports/conversational-ai-market-49043506.html\">$29.8 billion by 2028</a>. By 2025, the entire <strong>AI market is projected to reach a staggering</strong> <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.marketsandmarkets.com/Market-Reports/artificial-intelligence-market-74851580.html\">$190 billion</a>, underlining the sheer magnitude of its impact.<br>However, trust remains a critical factor. A significant 39% of respondents in the United States express reluctance to entrust AI voice assistants with making phone calls, emphasizing <strong>the importance of building trust in the evolving landscape of conversational AI</strong>.</p><p>On the other hand, customers seem to be ready for the future. Over <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://venturebeat.com/business/3-stats-that-show-chatbots-are-here-to-stay/\">50% expect</a> <strong>businesses to be available 24/7</strong>, and more than 40% don't mind whether they're assisted by an AI tool or a human, as long as their questions are answered.</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/ai_chatbot_development_stats_0a0ea773c3.png\" alt=\"ai-chatbot-development-stats.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_ai_chatbot_development_stats_0a0ea773c3.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_ai_chatbot_development_stats_0a0ea773c3.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_ai_chatbot_development_stats_0a0ea773c3.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_ai_chatbot_development_stats_0a0ea773c3.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></figure><p>The corporate realm is acknowledging the transformative power of conversational AI. According to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.pwc.com/us/en/tech-effect/ai-analytics/ai-business-survey.html\">the PWC 2022 AI Business Survey</a>, CEOs, with 40% identifying the improvement of employee experiences and 37% focused on enhancing consumer experiences, <strong>are steering their companies toward a more AI-powered future</strong>.</p><p>Conversational AI, potentially reducing <strong>customer service costs by</strong> up to 40%, is not just a cost-effective solution but a catalyst for improved customer experiences. As businesses stand on the precipice of this technological revolution, embracing the power of conversational AI is not just an option — it's a strategic imperative. Let’s see <strong>real-life examples of AI chatbot implementation</strong> in various industries.</p><h2>Retail and E-Commerce: A Seamless Shopping Experience</h2><p>In the retail and e-commerce sector, AI chatbot assistants are reshaping the customer journey. Picture a virtual assistant guiding users through product selections, answering queries, and even facilitating purchases without human intervention. By providing instant responses and personalized interactions, these chatbots elevate customer satisfaction, streamline transactions, and enhance the overall shopping experience.</p><h3>Real-Life Use Case: AI Chatbot in E-commerce</h3><p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://yellow.ai/case-study/sephora-embraces-digital-experiences-through-conversational-ai/\">Sephora Singapore</a> strategically blended physical and digital experiences using conversational AI, <strong>introducing a virtual assistant for personalized beauty consultations and in-store-like interactions online</strong>. This move resulted in over 9,000 users, 332,000+ conversation sessions, and an average monthly revenue increase of $30,000 within a year. The virtual assistant's success challenges the notion that chatbots are solely for complaint resolution, highlighting their potential in upselling and cross-selling. Sephora's adept use of generative AI stands as a successful model, showcasing the technology's potential to redefine customer engagement in the retail sector.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Megi_naslovna_3_min_4403fefaf9.png\" alt=\"Megi_naslovna_3-min.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Megi_naslovna_3_min_4403fefaf9.png 133w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Megi_naslovna_3_min_4403fefaf9.png 426w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Megi_naslovna_3_min_4403fefaf9.png 639w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_Megi_naslovna_3_min_4403fefaf9.png 852w,\" sizes=\"100vw\" width=\"852px\"><figcaption>Source: megi.ai</figcaption></figure><h2>Healthcare: Personalized Patient Support</h2><p>In healthcare, the role of AI chatbot assistants extends beyond administrative tasks. These chatbots assist in appointment scheduling, provide medication reminders, and offer basic health information. By delivering personalized and context-aware responses, they create a supportive and engaging patient environment, ultimately contributing to improved healthcare experiences.</p><h3>Real-Life Use Case: AI Chatbot in Healthcare</h3><p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.megi.ai/\">Megi Health</a>, a digital healthcare startup faced the challenge of enhancing patient care and optimizing medical staff efficiency. Recognizing the potential of technology, Megi Health created a secure and user-friendly digital platform to provide 24/7 support to chronic patients. Leveraging WhatsApp, <strong>the platform introduced a virtual assistant, streamlining patient interactions and achieving objectives</strong>. The chatbot facilitates two-way data exchange, allowing patients to submit readings and receive immediate feedback, connecting them with a doctor when necessary. Results include an 86% CSAT score and a remarkable 65% reduction in data collection time, demonstrating the transformative impact of AI in healthcare.</p><h2>Legal Services: Simplifying Legal Processes</h2><p>Legal services benefit from the efficiency of AI Chatbot Assistants in simplifying legal processes. These chatbots provide basic legal information, guide users through legal procedures, and offer support in understanding legal documentation. This streamlines the legal service workflow, making legal assistance more accessible and user-friendly.</p><p>To see a real-life example of an AI chatbot for the legal industry, please <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/case-studies/ai-chat-assistant/\">review our case study</a>.<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/case-studies/ai-chat-assistant/\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/ai_chatbot_development_case_study_rf_82abc53e6d.png\" alt=\"ai-chatbot-development-case-study-rf.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_ai_chatbot_development_case_study_rf_82abc53e6d.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_ai_chatbot_development_case_study_rf_82abc53e6d.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_ai_chatbot_development_case_study_rf_82abc53e6d.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_ai_chatbot_development_case_study_rf_82abc53e6d.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></a></p><h2>Travel and Hospitality: Bridging Language Gaps Globally</h2><p>For the travel and hospitality industry, language barriers can be a significant hurdle to global expansion. AI Chatbot Assistants break down these barriers by offering multilingual support. They assist users in various languages, facilitating bookings, providing travel information, and ensuring a seamless experience for travelers worldwide.</p><h3>Real-Life Use Case: AI Chatbot in Travel</h3><p>Gol Airlines, a prominent South American airline, faced challenges in addressing customer inquiries, particularly those related to COVID-19 restrictions. To overcome this, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.voegol.com.br/en-us/customer-service/gal-chat\">they introduced Gal</a>, <strong>a virtual assistant providing round-the-clock customer support</strong>. With an impressive 85% retention rate, Gal autonomously handled 90% of 900,000 inquiries. The virtual assistant streamlined interactions, offering passengers increased visibility into important information. This successful implementation showcases Gal's efficiency in addressing customer queries, improving the overall customer experience for Gol Airlines.</p><h2>Real Estate: Transforming Lead Generation and Property Searches</h2><p>In real estate, AI chatbots become invaluable assets for lead generation and customer engagement. These chatbots guide users through property searches, schedule viewings, and offer insights into market trends. By providing personalized interactions and efficient responses, they generate high-quality leads and streamline the property search process.</p><h3>Real-Life Use Case: AI Chatbot in Real Estate</h3><p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.squirrel.co.nz/mortgage-broker/chatbot\">Alan is a friendly AI chatbot from Squirrel</a>, dedicated to helping first home buyers. His main purpose is to <strong>assist users in figuring out how much they can afford to borrow for their first home</strong>. Alongside providing practical information on topics like getting a deposit together and understanding mortgages, Alan adds a touch of humor to brighten users' days. Users can ask him about the latest interest rates, seek guidance on buying a house, or inquire about common mistakes to avoid. Alan is designed for first-time home buyers and learns more with each interaction.</p><h2>Finance: Empowering Financial Operations</h2><p>In the finance sector, AI chatbot assistants play a crucial role in optimizing financial operations by managing routine queries and streamlining processes. These chatbots assist users with financial inquiries, simplify transaction procedures, and offer information about financial policies and services. By automating repetitive tasks, these tools contribute to a more efficient and responsive financial environment.</p><h3>Real-Life Use Case: AI Chatbots in Finance</h3><p>HSBC, in collaboration with Google Cloud's customer engineering team, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.finextra.com/newsarticle/37662/hsbc-taps-google-cloud-for-call-centre-ai\">developed the Operational Resilience and Risk Application (ORRA)</a>, a chatbot equipped with FAQ and document search capabilities. ORRA is another example of <strong>an AI assistant dedicated to employees rather than end customers</strong>. Powered by Google Cloud Dialogflow, ORRA enables dynamic document searches and engages in natural conversations, offering a cost-efficient solution for large-scale conversational FAQ flows. Accessible to all HSBC employees via the intranet, ORRA addresses queries on internal policies and framework areas throughout the bank. The chatbot combines a knowledge base created with Dialogflow, small talk for a human touch, and an in-house document search function using Natural Language Processing, providing rapid and precise access to information while fostering learning and development.</p><h2>Conclusion: A Tailored Approach for Every Industry</h2><p>In conclusion, the transformative capabilities of <strong>AI chatbot assistants</strong> are tailored to meet the unique needs of diverse industries. Whether it's providing a seamless shopping experience, enhancing patient support, breaking language barriers, generating leads in real estate, simplifying legal processes, or empowering workplace efficiency, these intelligent assistants are proving to be invaluable assets across the business landscape.&nbsp;<br>Embrace the industry-specific brilliance of AI chatbot assistants to revolutionize your operations and drive sustained success in your sector <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.rumblefish.dev/services/ai-chat-assistant/\">with the help of our AI development team</a>.</p><figure class=\"image\"><a href=\"https://www.rumblefish.dev/services/ai-chat-assistant/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/banner_rumble_fish_ai_development_30f49780e0.png\" alt=\"banner-rumble-fish-ai-development.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_banner_rumble_fish_ai_development_30f49780e0.png 245w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_banner_rumble_fish_ai_development_30f49780e0.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_banner_rumble_fish_ai_development_30f49780e0.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/large_banner_rumble_fish_ai_development_30f49780e0.png 1000w,\" sizes=\"100vw\" width=\"1000px\"></a></figure>","timeToRead":7,"shortContent":"<p>In the rapidly evolving digital innovation landscape, AI chatbot assistants are emerging as powerful catalysts for change across various industries. Let's explore how these intelligent assistants revolutionize operations and drive unparalleled benefits in various sectors.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"ai-chatbot-development-use-cases.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/ai_chatbot_development_use_cases_09ff2dadba.png"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Ai_chatbot_assistants_e1729b8880.png","name":"Ai chatbot assistants.png"}}},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"77","attributes":{"title":"How to make smart contracts upgradeable without Proxy?","slug":"how-to-make-smart-contracts-upgradeable-without-Proxy","pubDate":"2023-11-09","content":"<p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\" id=\"docs-internal-guid-c26cf51d-7fff-e439-aac8-770ce5d86a86\"><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"><strong>The blockchain industry thrives on trustlessness, decentralization, and immutability. These principles are the cornerstones of its rapid growth in recent years. However, like any innovative field, blockchain technology is not without its challenges. One major challenge is the immutability of smart contracts—once deployed, they cannot be changed. But what if a smart contract contains a vulnerability that could lead to funds being lost, or if you simply want to enhance its functionality or optimize gas usage? In this article, I’ll explain the concept of Non-Proxy Upgradeability Pattern.</strong></span></p><h2 style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\" id=\"docs-internal-guid-c26cf51d-7fff-e439-aac8-770ce5d86a86\">&nbsp;<span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">To be (upgradeable) or not to be?</span></h2><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Trustlessness, decentralization, security. Immutability. The beauty of the blockchain. This is why this cutting-edge technology has been growing so rapidly for the last couple of years and surely there are still a lot of new ideas and concepts waiting to be discovered. But there’s no innovation without mistakes and as always new technologies can suffer from infancy problems. For sure those problems should be solved, but how can they be solved once the code is already deployed and can’t be changed (immutability, right?)? Aren’t smart contracts (self-executing programs) immutable by design? And shouldn’t they be as simple as possible? Yeah, but what if the contract is vulnerable and can lead to funds lost? Shouldn’t a bug be fixed? Or what if we simply want to improve functionality or optimize gas usage?</span></p><p style=\"line-height:1.38;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Welcome to the Blockchain.</span></p><h2 style=\"line-height:1.38;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\">&nbsp;<span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Clone vs Proxy</span></h2><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">So many questions, so few answers? Not really! Fortunately, some Big Brains were also thinking about the&nbsp;</span><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Upgradeability Dilemma</span><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">, and some solutions have already been found and developed. I’m not gonna present and explain all of them, but for context let’s take a look at two:&nbsp;</span><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">the Proxy Patterns and the Clones.&nbsp;</span></p><h3 style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\">&nbsp;<span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Proxy Pattern</span></h3><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">In this approach, a smart contract acts as a proxy (storage layer) that delegates all calls to another contract with the logic implementation (logic layer). The address of the logic implementation can be changed, enabling upgradability. The typical structure looks like this:</span></p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/user_proxy_implementation_a369add49e.jpg\" alt=\"user-proxy-implementation.jpg\" srcset=\"https://strapi-staging-aldnr.rumblefish.devhttps://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_user_proxy_implementation_a369add49e.jpg 245w, https://strapi-staging-aldnr.rumblefish.devhttps://strapi-uploads-staging-aldnr.rumblefish.dev/small_user_proxy_implementation_a369add49e.jpg 500w, https://strapi-staging-aldnr.rumblefish.devhttps://strapi-uploads-staging-aldnr.rumblefish.dev/medium_user_proxy_implementation_a369add49e.jpg 750w, https://strapi-staging-aldnr.rumblefish.devhttps://strapi-uploads-staging-aldnr.rumblefish.dev/large_user_proxy_implementation_a369add49e.jpg 1000w\" sizes=\"100vw\" width=\"1000\"></figure><h3 style=\"line-height:1.7999999999999998;margin-bottom:4pt;margin-top:16pt;\" dir=\"ltr\" id=\"docs-internal-guid-e59a9283-7fff-1bbf-17d1-f4d6bd9b95ff\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Clone Factory Pattern</span></h3><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">In this method, each instance of the clone contact has an identical bytecode, so only one instance of the implementation (logic layer) needs to be deployed and all clone instances behave as proxies. This approach, often referred to as the \"minimal proxy,\" is defined in the&nbsp;</span><a style=\"text-decoration:none;\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://eips.ethereum.org/EIPS/eip-1167\"><span style=\"-webkit-text-decoration-skip:none;font-style:normal;font-variant:normal;font-weight:400;text-decoration-skip-ink:none;vertical-align:baseline;white-space:pre-wrap;\">EIP-1167 standard</span></a><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">.</span></p><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Although the Clone Factory Pattern aims to clone contract functionality simply and cost-effectively, it can still raise questions about its \"purity\" since it relies on a \"proxy\" pattern.</span></p><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Hold on, but what’s wrong with that? I assume you know what the gas is and why we need it on the Ethereum blockchain. Notably, the&nbsp;.transfer() and&nbsp;.send() functions, used for ETH transfers, come with a fixed 2300 gas stipend,&nbsp;</span><a style=\"text-decoration:none;\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.soliditylang.org/en/v0.5.11/units-and-global-variables.html#members-of-address-types\"><span style=\"-webkit-text-decoration-skip:none;font-style:normal;font-variant:normal;font-weight:400;text-decoration-skip-ink:none;vertical-align:baseline;white-space:pre-wrap;\">which is non-adjustable</span></a><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">.&nbsp; Furthermore, the&nbsp;delegatecall function, fundamental to proxy patterns, incurs a gas cost of 21,000 (as msg calls in the EVM have an inherent base fee of 21,000 gas, and for proxy cases,&nbsp;delegatecall&nbsp;is treated as a transaction). As a result, if the wallet uses .send() function to send the ETH to the Proxy it is not gonna work!</span></p><h2 style=\"line-height:1.38;margin-bottom:6pt;margin-top:18pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Cloning constructor to the rescue!</span></h2><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Alright, so what can we do about this? Ladies and gentlemen, let me introduce the&nbsp;</span><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"><strong>Non-Proxy Upgradeability Pattern! </strong></span><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">This approach enables you to deploy a contract to a specific address and later, if necessary, replace its logic while preserving the contract's state and balance. Here's how it works in a few simple steps:</span></p><ol><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">You need a factory that deploys contracts. This factory&nbsp;</span><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"><strong>must have a fixed address</strong></span><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">, which can be achieved through deterministic deployment, e.g. via Hardhat extensions.</span></p></li><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">The Factory has a method that deploys static bytecode which is&nbsp;</span><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"><strong>“clone-contract constructor” (CCC)</strong></span><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">. This constructor once deployed asks the deployer (msg.sender) about initial parameters via&nbsp;STATICCALL. To deploy the clone the&nbsp;CREATE2 method is used, which means the address depends only on:</span></p><ol><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">the deployer address - and this is a fixed factory address</span></p></li><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">a random salt&nbsp;</span></p></li></ol></li></ol><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">That means the address of the cloned contract depends only on the salt.</span></p><ol style=\"list-style-type:decimal;\" start=\"3\"><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">The CCC uses&nbsp;EXTCODECOPY to load the contract logic code to the memory and finishes the entire process with&nbsp;RETURN, which points to the freshly cloned code.</span></p></li><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Call from the Factory contract&nbsp;Init() function to use the&nbsp;calldata (which was passed with&nbsp;STATICCALL from step 2) and initialize the&nbsp;contract-clone.&nbsp;</span></p></li></ol><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\" id=\"docs-internal-guid-5371fea3-7fff-86d5-d35c-cfd63a13c38d\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Magic!&nbsp;</span><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"><strong>The code was cloned without a proxy pattern!</strong></span></p><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\" id=\"docs-internal-guid-5371fea3-7fff-86d5-d35c-cfd63a13c38d\">&nbsp;</p><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Alright, so how can we upgrade the contract code if we don’t have a proxy? To achieve this we need two separate transactions because the contract's balance (as a result of the&nbsp;SELFDESTRUCT) is sent at the end of tx. So here it is:</span></p><ol><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Clone-contract uses the&nbsp;SELFDESTRUCT opcode to clear all the contract data and sends the factory address as the contract's balance receiver.</span></p></li><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">The factory finishes the upgrade by calling the&nbsp;finalizeUpgrade() function, which copies the new contract implementation the same way as it was done at the creation step 1 and sends all the native coin amounts received in the previous step.</span></p></li></ol><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">And that’s it!&nbsp;</span></p><h2 style=\"line-height:1.38;margin-bottom:6pt;margin-top:18pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">OPCODES, slots, and EVM Storage</span></h2><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">If you want to learn more, let me show you some code behind the magic explained above.</span></p><ul><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">call&nbsp;templateAddress() on&nbsp;msg.sender and store it under storage slot 0x1234</span></p></li></ul><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\">{{codeSnippet,OPCODES}}</p><ul><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">copy contract's code to memory</span></p></li></ul><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\">{{codeSnippet,memory}}</p><ul><li><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">return and point to the copied code</span></p></li></ul><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\">{{codeSnippet,return}}</p><p><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\" id=\"docs-internal-guid-2b1be57c-7fff-b126-ad81-c3f3ccfaed9d\">In Solidity it can be implemented like this:</span></p><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\">{{codeSnippet,solidity}}</p><h2 style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">Conclusion</span></h2><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"><strong>The Non-Proxy Upgradeability Pattern</strong></span><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\"> offers an alternative path to upgrade smart contracts without relying on a proxy pattern. By addressing gas costs and enabling deterministic deployments, it opens up new possibilities for blockchain developers to enhance contract functionality and security. This approach exemplifies the ever-evolving nature of blockchain technology, where challenges lead to innovative solutions.</span></p><p style=\"line-height:1.7999999999999998;margin-bottom:0pt;margin-top:0pt;\" dir=\"ltr\"><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">I really hope this blog post will help those of you struggling with creating upgradeable contracts. If you have any questions or would like to discuss the methodology - drop us a line at hello@rumblefish.dev. In the meantime, stay </span><span style=\"font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\" id=\"docs-internal-guid-374a426a-7fff-6025-66e4-36b37d78224c\">tuned for more coding stories!</span></p>","timeToRead":10,"shortContent":"<p><span style=\"font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;\">The blockchain industry thrives on trustlessness, decentralization, and immutability. These principles are the cornerstones of its rapid growth in recent years. However, like any innovative field, blockchain technology is not without its challenges. One major challenge is the immutability of smart contracts—once deployed, they cannot be changed.&nbsp;</span></p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"blogpost-non-proxy-contracts-img.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/blogpost_non_proxy_contracts_img_321971ee72.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Upgradeable_smart_contracts_01daa37198.png","name":"Upgradeable smart contracts.png"}}},"category":[{"name":"Code Stories"}],"authors":{"data":[{"attributes":{"Name":"Oskar Karcz","Position":"Blockchain Developer at Rumble Fish","Avatar":{"data":{"id":"391","attributes":{"name":"Oskar.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Oskar_d3c2e86fc3.jpg"}}}}}]}}},{"id":"58","attributes":{"title":"Rumble Fish at Beyond Blockchain Annual Symposium 2023","slug":"rumble-fish-at-beyond-blockchain-annual-symposium-2023","pubDate":"2023-08-31","content":"<p>Once again we’ve partnered with the Swiss-Polish Blockchain Association to co-organize their annual Beyond Blockchain symposium. The event, this time happening in Warsaw, will take place on September 4th, 2023. The focus of this edition is the role of blockchain and AI in finance, the luxury goods market, and sports and entertainment. Rumble Fish is an official partner of the event.</p><p><a href=\"https://swisspolishblockchain.org/\"><u>Swiss-Polish Blockchain Association</u></a>, which we are a member of, is known for the high quality of its conferences. The key to success lies in the exquisite lineup of speakers, thought-provoking panel discussions, and excellent networking. </p><p>This year, the emphasis is put on blockchain and AI and its impact on finance, luxury goods, and sports and entertainment. Attendees can also count on lots of regulatory discussions which are always in high demand as we’re facing a big change in lawmakers&#39; attitudes towards crypto and Web3. With 4 discussion panels packed with industry experts and professionals, Beyond Blockchain Annual Symposium is a must-attend event for all blockchain enthusiasts. </p><h3>Rumble Fish at Beyond Blockchain Annual Symposium</h3><p>Rumble Fish will be proudly represented by our co-founder and CTO, <a href=\"https://www.linkedin.com/in/marek-kowalski-797a438/\"><u>Marek Kowalski</u></a>, and Head of Growth, <a href=\"https://www.linkedin.com/in/sylwia-bien-marketing/\"><u>Sylwia Bień-Chudarek</u></a>. Sylwia and Marek will be making an introduction for one of the discussion panels, which Marek will be also joining afterward. The title of the panel is <i>Beyond the Hype: Blockchain and Digital Technology&#39;s Game-Changing Role in Sports and Entertainment. </i>Marek will be joined by industry experts: Bartosz Błach (<a href=\"https://1liga.org/\"><u>Fortuna 1 Liga</u></a>), Mariusz Gąsiewski (<a href=\"https://www.linkedin.com/in/mariuszgasiewski\"><u>Google</u></a>), Artur Pszczółkowski (<a href=\"https://gg3.xyz/\"><u>GG3</u></a>), Monika Górska (<a href=\"https://wardynski.com.pl/en/\"><u>Wardyński &amp; Partners</u></a>), and Paweł Łaskarzewski (Nomad Fulcrum). </p><p>See you in Warsaw!</p><p>The tickets are still available <a href=\"https://bit.ly/SPBA-III-symposium\"><u>here</u></a>.</p><p>Full info on the event, including the details agenda is available <a href=\"https://swisspolishblockchain.org/iii-beyond-blockchain-annual-symposium/\"><u>here</u></a>. </p><p>\n\n\n</p>","timeToRead":2,"shortContent":"<p>Once again we’ve partnered with the Swiss-Polish Blockchain Association to co-organize their annual Beyond Blockchain symposium. The event, this time happening in Warsaw, will take place on September 4th, 2023. The focus of this edition is the role of blockchain and AI in finance, the luxury goods market, and sports and entertainment. Rumble Fish is an official partner of the event.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"Images_for_blog_posts__1_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Images_for_blog_posts_1_18c1dddcd1.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Beyond_Blockchain_Symposium_9bf69d9c84.png","name":"Beyond Blockchain Symposium.png"}}},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"57","attributes":{"title":"7 DeFi projects to watch in 2023 and beyond","slug":"7-defi-projects-to-watch-in-2023-and-beyond","pubDate":"2023-07-26","content":"<p><strong>Decentralized Finance (DeFi) is disrupting the global financial market in multiple ways. It lets its participants reclaim control of their assets, eliminating the need for intermediaries. By getting rid of traditional financial institutions DeFi allows for more efficient asset management while enabling greater transparency and security. But to actually build a DeFi product that people will love to use is not a piece of cake. Over the last few years, we’ve seen many failed DeFi projects. Today, let’s look at those who overcame the challenges to see what they have in common. Here’s a list of 7 DeFi projects to watch in 2023 and beyond.</strong></p><p>The DeFi space has been rapidly evolving, bringing revolutionary changes to the traditional financial landscape. We’re halfway through 2023, and the <strong>DeFi sector continues to gain momentum</strong>, with new projects emerging and existing ones expanding their offerings. In this blog post, we will explore ten DeFi projects that have shown immense potential and promise to shape the future of finance. Whether you're a DeFi enthusiast or an investor seeking opportunities in this thriving market, keep an eye on these projects as they make waves in 2023 and beyond.</p><h2>Top 7 projects to watch in the upcoming future</h2><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/compound_4f5d9ebe78.png\" alt=\"compound.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_compound_4f5d9ebe78.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_compound_4f5d9ebe78.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_compound_4f5d9ebe78.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_compound_4f5d9ebe78.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Compound website, July 2023</figcaption></figure><h3>1. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://compoundlabs.xyz/\"><u>Compound</u></a> - a permissionless DeFi protocol that allows lenders to learn interest from their crypto assets</h3><p><strong>Compound is an Ethereum-based lending protocol</strong> that lets users earn interest on their cryptocurrency holdings. In 2022 one of their projects called Compound Treasury became the first institutional DeFi offering rated by a major credit rating agency (with a B- rating). Compound Treasury is a crypto cash management solution for institutions. According to their materials <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/compound-finance/compound-treasury-sp-credit-rating-897aff3a6f8c\"><i><u>accredited investors can earn 4% on USD and USDC with daily liquidity</u></i></a><i>.&nbsp;</i></p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/synthetix_82f615340f.png\" alt=\"synthetix.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_synthetix_82f615340f.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_synthetix_82f615340f.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_synthetix_82f615340f.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_synthetix_82f615340f.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Synthetix website, July 2023</figcaption></figure><h3>2. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://synthetix.io/\"><u>Synthetix</u></a> - a decentralized platform for trading synthetic assets</h3><p><strong>What are synthetic assets? </strong>Also known as “synths”, synthetic assets are tokenized representations of real-world assets designed to mimic the price movements of various assets without requiring direct ownership of the underlying resources. In true DAO fashion, Synthetix relies on a decentralized governance model, where their token (SNX) holders have the ability to participate in the decision-making process through on-chain voting.</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/stargate_af876b1ec9.png\" alt=\"stargate.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_stargate_af876b1ec9.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_stargate_af876b1ec9.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_stargate_af876b1ec9.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_stargate_af876b1ec9.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Stargate website, July 2023</figcaption></figure><h3>3. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://stargate.finance/\"><u>Stargate</u></a> - making cross-chain liquidity transfers a reality</h3><p><strong>Stargate Finance is a well-trusted cross-chain bridge</strong> enabling asset transfers between a variety of Layer 1 and Layer 2 networks. Decentralized finance users can swap native assets cross-chain within a single transaction. As an example, users can seamlessly trade USDC on Ethereum for ESDT on the BNB network. Stargate has been very successful so far, gaining a lot of recognition and praise within the industry. It’s definitely worth keeping an eye out for its future endeavors!</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/lido_931410cf09.png\" alt=\"lido.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_lido_931410cf09.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_lido_931410cf09.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_lido_931410cf09.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_lido_931410cf09.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Lido website, July 2023</figcaption></figure><h3>4. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://lido.fi/\"><u>Lido</u></a> - a multi-platform staking solution</h3><p>Introduced in late 2020, <strong>Lido allows its users to access the benefits of staking their crypto assets without fully locking their tokens.</strong> According to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.bitstamp.net/learn/cryptocurrency-guide/what-is-lido-ldo/\"><u>Bitstamp</u></a>, throughout 2022 and into 2023, <strong>approximately 30% of all ETH were staked through Lido</strong>, which returns stETH to users as a liquid token. Lido protocols are governed by the LDO token holders through the Lido DAO.&nbsp;</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/hadouken_52d2dd3ee5.png\" alt=\"hadouken.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_hadouken_52d2dd3ee5.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_hadouken_52d2dd3ee5.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_hadouken_52d2dd3ee5.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_hadouken_52d2dd3ee5.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Hadouken website, July 2023</figcaption></figure><h3>5. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://hadouken.finance/\"><u>Hadouken Finance</u></a> - bringing top class DeFi products to the Nervos ecosystem</h3><p><strong>Hadouken is a DEX platform </strong>on Godwoken (which is a Layer 2 of the Nervos blockchain). It offers a whole array of products for portfolio management, trading, lending, and borrowing. They created a multibridge that allows for bringing funds onto Hadouken from Ethereum, Avalanche, BNB, Polygon, Solana, and more. At Rumble FIsh we’re happy of being a part of the Hadouken story, as we were a team responsible for <strong>developing the stablecoin swapping solution.</strong></p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/frax_1f280c3dbe.png\" alt=\"frax.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_frax_1f280c3dbe.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_frax_1f280c3dbe.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_frax_1f280c3dbe.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_frax_1f280c3dbe.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Frax website, July 2023</figcaption></figure><h3>6.<strong> </strong><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://frax.finance/\"><u>Frax Finance</u></a> - a DeFi ecosystem for stablecoin trading</h3><p>The Frax Protocol has been issuing three stablecoins so far - FRAX (pegged to the US dollar), FPI (Frax Price Index, which is the first stablecoin pegged to CPI - a basket of consumer goods), and frxETH (Frax Ether - pegged to ETH). Frax also develops an entire <strong>infrastructure of subprotocols that integrate their stablecoins.</strong> Their FraxSwap for example, is the first AMM with an embedded TWAMM (time-weighted average market maker) which allows for conducting big trades over long periods of time trustlessly.&nbsp;</p><figure class=\"image\"><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/nexus_b93b38fee5.png\" alt=\"nexus.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_nexus_b93b38fee5.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_nexus_b93b38fee5.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_nexus_b93b38fee5.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_nexus_b93b38fee5.png 245w,\" sizes=\"100vw\" width=\"1000px\"><figcaption>Nexus Mutual website, July 2023</figcaption></figure><h3>7. <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://nexusmutual.io/\"><u>Nexus Mutual</u></a> - an insurance alternative for crypto</h3><p><strong>Nexus Mutual stands as a pioneering DeFi insurance platform</strong>, positioned as a promising contender in the crypto space's insurance sector. By offering on-chain protection, it caters to investors, safeguarding them against a diverse range of risks.&nbsp; The platform demonstrates its commitment to security through certified audits conducted by top-tier cybersecurity firms, instilling confidence in the integrity of its smart contracts. Anticipating further growth, the company is actively developing additional products scheduled to launch in 2024. Nexus Mutual’s development is definitely the one to follow!</p><h2>Conclusion</h2><p>From enhancing interoperability to offering secure lending and crypto insurance options, these innovative DeFi companies are shaping the financial landscape of the future. Investors, users, and enthusiasts alike should keep a close eye on these<strong> top 7 DeFi companies </strong>as they continue to make strides in decentralized finance and beyond.</p><p>&nbsp;</p>","timeToRead":5,"shortContent":"<p>Decentralized Finance (DeFi) is disrupting the global financial market in multiple ways. It lets its participants reclaim control of their assets, eliminating the need for intermediaries. By getting rid of traditional financial institutions DeFi allows for more efficient asset management while enabling greater transparency and security. Let’s look at those who overcame the challenges to see what they have in common. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"7-defi-projects-to-watch.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/7_defi_projects_to_watch_c771fb2281.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/7_De_Fi_projects_to_watch_c89ba82ab3.png","name":"7 DeFi projects to watch.png"}}},"category":[{"name":"Business Stories"},{"name":"Blockchain"},{"name":"Fintech"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"56","attributes":{"title":"How blockchain technology is disrupting the banking industry","slug":"how-blockchain-technology-is-disrupting-the-banking-industry","pubDate":"2023-06-12","content":"<p><b>In the early days of blockchain, many thought the technology will be a major threat to the traditional banking industry. But, as the years went by, it became more and more clear that blockchain adoption, rather than a peril, might be a huge opportunity for banks worldwide if applied wisely. Let’s take a closer look at the current state of blockchain technology adoption in traditional banking. </b></p><p>The crypto industry started with grand ideas of its users ditching the intermediaries (like traditional banks) when dealing with assets, and switching to decentralized exchanges and wallets. But as events of 2022 showed us, it might not always be the safest idea. Traditional banks for a long time were hesitant to join the crypto bandwagon, but as statistics show us, more and more of them are exploring the possibilities that blockchain brings. </p><h2>The rise of CBDCs</h2><p><b>Central Bank Digital Currency (CBDC)</b> is a digital version of the currency issued by the government, that isn’t pegged to any physical commodities. The main difference between CBDCs and cryptocurrencies is that the former is very much centralized - issued and operated by the state. According to <a href=\"https://www.mckinsey.com/featured-insights/mckinsey-explainers/what-is-central-bank-digital-currency-cbdc\"><u>McKinsey’s report,</u></a> there are currently <b>87 countries actively exploring the concept of CBDC. </b></p><h3>The various types of CBDCs</h3><p>Although it may seem that way, CBDCs aren’t always blockchain-based. There are some projects like <a href=\"https://blockworks.co/news/in-historic-move-jamaica-makes-cbdc-akin-to-cash\"><u>Jamaica’s JAM-DEX</u></a> (launched in June of 2022) that do not use a distributed ledger. CBDCs can be issued as stand-alone tokens that are distributed by multiple carriers or held directly at the central bank as account-based assets. They can be fully digital and exist only as a digital book entry, or stored on physical devices (phone wallets, physical cards). </p><p>An example of an account-based model is DCash, which is a CBDC developed by the Easter Caribbean. Its consumers hold deposit accounts with the central bank. The opposite of that is China’s e-CNY which is a pilot project where private banks distribute and maintain CBCDs for their customers. e-CNY was first showcased in 2022, during the Olympics in Beijing where visitors were enabled to make purchases using the currency. </p><p><b>What does the rise of CBDCs mean for traditional banking?</b> Commercial banks need to acquire the necessary skills to efficiently perform KYC procedures and anti-money laundering monitoring for digital currencies. In scenarios where commercial banks issue CBDCs to customers, thereby enabling revenue generation through deposits, these banks will bear the responsibility and associated costs of ensuring KYC compliance. </p><p>The implementation of CBDC has the potential to disrupt the banking industry by reducing the need for intermediaries, enhancing financial inclusion, and increasing competition. </p><h2>Asset tokenization is here to stay</h2><p><b>Asset tokenization</b> is the process of converting physical or tangible assets into digital tokens that are stored and transacted on a blockchain or distributed ledger. It enables representing the ownership or rights to a certain asset in the form of a digital token stored on a decentralized network. What is great about this concept is the possibility of fractionalizing assets, dividing them into smaller units that can be stored and traded individually. What can be tokenized? The real question is - what can’t be? From expensive wine bottles through real estate to <a href=\"https://decrypt.co/57609/this-professor-is-tokenizing-love-is-he-nuts\"><u>love</u></a> (sic). </p><h3>Why banks should look into tokenization</h3><p>The tokenization process typically involves several steps. First, the asset is identified and evaluated. Then, a digital representation of the asset is created on a blockchain platform, assigning a specific number of tokens to represent the asset&#39;s value. These tokens can be fungible or non-fungible, depending on the asset and its characteristics. The benefits of asset tokenization include increased liquidity, fractional ownership, enhanced accessibility, and potential cost savings. By digitizing assets, tokenization eliminates the need for intermediaries, reduces transaction costs, and enables 24/7 trading. It also enables global access to investment opportunities that were previously restricted to certain individuals or institutions. </p><p><b>How can traditional banks tap into the benefits tokenization brings? </b>There are a few examples of how they are doing it now. In 2020, the US financial giant JPMorgan started a project called <a href=\"https://www.jpmorgan.com/onyx/about.htm\"><u>Onyx</u></a>, which is a blockchain-based platform for wholesale payment transactions. One of its most prominent offerings is Tokenized Collateral Network (TCN) which enables investors to utilize assets as collateral. Another one that taps into tokenization is Onyx Digital Assets which is an asset tokenization system that lets financial institutions, fintechs, and asset managers unlock new utility for their financial resources. Onyx is a perfect example of a very established traditional institution not being afraid of technology, but rather utilizing it for a variety of benefits. </p><h2>Regulators need to catch up</h2><p>There is a lot of potential in blockchain for banking. But there is a major obstacle that seems to be keeping a lot of financial institutions wary of getting involved. And that obstacle is the law. There aren’t many regulations at hand when it comes to tokenized assets, cryptocurrencies, or blockchain-based financial solutions. Regulators are of course aware that there is a pressing need for clear policy and Europe seems to be at the forefront of making it happen. The EU’s <b>Markets in Crypto Assets (MiCA) </b>regulation was published in the Official Journal of the EU in early June of this year and will enter into force in the second half of 2024. The document is a regulatory framework for digital assets that use DLT (decentralized ledger technology) and it’s the first and (so far) only legislation of this kind in the world, which makes Europe a very attractive market for crypto-enthusiasts and entrepreneurs. With MiCA published, there is a greater chance of traditional banks getting more into crypto assets.</p><h2>Banks have to learn from IT</h2><p>In order to tap into crypto in the most effective way, banks need to understand the underlying technology of distributed ledgers and the nuances of crypto assets. And the best way to do it is to take advantage of the knowledge and experience of people who’s been doing blockchain projects for years. Training sessions, discovery workshops, and consulting are the way to go. If you work for a traditional bank and need to explore <b>how blockchain can expand your’s bank offering for it to stay relevant</b>, don’t hesitate to <a href=\"mailto:hello@rumblefish.dev\">contact us</a> - we’re here to help.</p>","timeToRead":5,"shortContent":"<p>In the early days of blockchain, many thought the technology will be a major threat to the traditional banking industry. But, as the years went by, it became more and more clear that blockchain adoption, rather than a peril, might be a huge opportunity for banks worldwide if applied wisely. Let’s take a closer look at the current state of blockchain technology adoption in traditional banking. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"Images_for_blog_posts.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Images_for_blog_posts_839dc90d2d.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/How_blockchain_technology_is_disrupting_2783e63fcc.png","name":"How blockchain technology is disrupting.png"}}},"category":[{"name":"Business Stories"},{"name":"Blockchain"},{"name":"FinTech"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"55","attributes":{"title":"Rumble Fish presents EVM Debugger - the ultimate tool for Defi developers","slug":"rumble-fish-presents-evm-debugger-the-ultimate-tool-for-defi-developers","pubDate":"2023-06-12","content":"<p><b>We proudly present our newest tool for all Ethereum and Defi developers that want to write better, more effective, and optimized Ethereum smart contracts. EVM Debugger is a tool that will help you become a master in writing smart contracts. And it’s completely free!</b></p><p>Unexplainable failures of EVM transactions - if you’re a <b>smart contract developer</b> it’s safe to assume you’ve suffered at some point. When this happens, you usually open <a href=\"https://etherscan.io/\"><u>Etherscan </u></a>and try to find where your smart contract went astray. Maybe you can retry your transaction with eth_call and get a useful message? Or maybe <i>trace output</i> will help you? Imagine having a tool that performs these debugging steps for you and presents you with the most detailed information about logs, state changes, storage updates, gas usage, and most importantly, revert messages for each of the internal transactions! Our<b> EVM Debugger collects and showcases all the information about a single Ethereum transaction</b> so you can easily identify its pain points and improve your smart contract writing skills.  </p><h2>How does it work?</h2><p>All you need to start is a transaction hash that you simply paste into the tool, then you choose the network, and click “Process log”. After a couple of minutes, you’ll get a full analysis of the transaction.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/process_logs_evm_debugger_4096c0775e.png\" alt=\"process-logs-evm-debugger.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_process_logs_evm_debugger_4096c0775e.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_process_logs_evm_debugger_4096c0775e.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_process_logs_evm_debugger_4096c0775e.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_process_logs_evm_debugger_4096c0775e.png 181w,\" sizes=\"100vw\" width=\"1000px\"></p><p>\nAll of the data is organized in a very user-friendly and intuitive way. You get 3 main sections: </p><ul><li><p><b>Data Manager</b></p></li></ul><p>From here you can access source codes (if available), bytecode, and ABIs. </p><ul><li><p><b>Transaction Screen</b></p></li></ul><p>Shows you the trace information (address, status, type, block number, passed gas, gas cost, and value), trace tree, call-specific data, events data, and storage data </p><ul><li><p><b>Structlog Explorer</b></p></li></ul><p>Displays the trace, EVM steps, disassembled bytecode, and step information. </p><p>The visual graph on the transaction screen lets you know how the gas consumption was divided, and which step was the most expensive one. It’s a great tool for optimizing your future smart codes.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/transaction_screen_04d35a0ec5.JPG\" alt=\"transaction-screen.JPG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_transaction_screen_04d35a0ec5.JPG 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_transaction_screen_04d35a0ec5.JPG 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_transaction_screen_04d35a0ec5.JPG 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_transaction_screen_04d35a0ec5.JPG 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p></p><h2>Why should you use it?</h2><p><b>EVM Debugger</b> is a unique and free solution designed specifically for EVM and Defi developers. It makes <b>EVM smart contract</b> analysis easy and user-friendly, providing developers with detailed information about transactions in one simple step. With EVM Debugger, you can smoothly access all the details regarding a single Ethereum transaction, making it the only debugger you’ll need. </p><p>With <b>EVM Debugger</b> you’ll be able to <b>easily find errors in your smart contracts </b>as well as optimize them for lower gas usage. It’s also a great learning tool for less seasoned Defi developers as it gives a lot of insights into how EVM works at its most basic level. </p><p>The tool currently supports networks such as <a href=\"https://ethereum.org/\"><u>Ethereum</u></a>, <a href=\"https://goerli.net/\"><u>Goerli</u></a>, <a href=\"https://polygon.technology/\"><u>Polygon</u></a>, <a href=\"https://www.alchemy.com/overviews/mumbai-testnet\"><u>Mumbai</u></a>, and <a href=\"https://sepolia.dev/\"><u>Sepolia</u></a>, with more on the way. Our team is constantly improving the Debugger, adding new features, and collecting feedback from its users. <b>EVM Debugger</b> is a completely free solution, made for developers by developers. To try it, please visit <a href=\"http://rumblefish.dev/evm-debugger/\">http://rumblefish.dev/evm-debugger/</a>. </p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/rumble_fish_presents_evm_debugger_tool_99e3087335.jpg\" alt=\"rumble-fish-presents-evm-debugger-tool.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_rumble_fish_presents_evm_debugger_tool_99e3087335.jpg 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_rumble_fish_presents_evm_debugger_tool_99e3087335.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_rumble_fish_presents_evm_debugger_tool_99e3087335.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_rumble_fish_presents_evm_debugger_tool_99e3087335.jpg 156w,\" sizes=\"100vw\" width=\"1000px\"></p><h2>Why did we create it?</h2><p>At Rumble Fish, we constantly expand our blockchain and Defi knowledge, but we do not gatekeep it. We like to share it with broader communities as we believe in the power of open-source projects and the importance of knowledge sharing. That’s why, as blockchain pros, <b>we decided to make EVM Debugger free for everyone.</b> For the same reason, we created another tool called <a href=\"https://www.npmjs.com/package/@rumblefishdev/eth-signer-kms\"><b><u>KMS Signer</u></b></a> that derives addresses and signs transactions using the AWS KMS (Key Management Service) solution. Stay tuned for our future projects!</p><p></p><p>{{blogPost,Privatizing the private key in blockchain development with KMS Provider}}</p><p>\n\n\n</p>","timeToRead":4,"shortContent":"<p>We proudly present our newest tool for all Ethereum and Defi developers that want to write better, more effective, and optimized Ethereum smart contracts. EVM Debugger is a tool that will help you become a master in writing smart contracts. And it’s completely free!</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"header-for-blog-evm-debugger.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/header_for_blog_evm_debugger_19ed3c770c.png"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/EVM_Debugger_post_ab84532e90.png","name":"EVM Debugger post.png"}}},"category":[{"name":"Code Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Marek Kowalski","Position":"CTO / Co-Founder","Avatar":{"data":{"id":"101","attributes":{"name":"Marek-Kowalski-CEO-Rumble-Fish.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Marek_Kowalski_CEO_Rumble_Fish_fdc397497a.png"}}}}}]}}},{"id":"54","attributes":{"title":"Building a multichain Web3 system for the music industry","slug":"building-a-multichain-web3-system-for-the-music-industry","pubDate":"2023-06-01","content":"<h5>an interview with the development team</h5><p><b>Today, we talk with part of the team working with Revelator, one of our awesome customers, to understand the struggles, challenges, and joys of building a blockchain and cloud-based system that helps record labels, distributors, and music publishers manage their catalogs and assets.  </b></p><h5><b>Marek, you played a crucial role in this project, being a technical team leader and an advisor for the entire team. What’s your way of approaching those kinds of tasks?</b></h5><p>[Marek]: The first step towards a successful outcome is to ensure that you understand exactly what your customer needs. They might not describe it in technical jargon or be very specific at first, but after working with customers for as long as I have, you certainly get a grasp of how to communicate well. So, the first step is to understand the vision and then translate them into technical specifications. Also, at Rumble Fish when we commence a new project we like to bring added value by proposing new features, introducing tools that might perform better than the ones our customers are used to, and generally by being a partner, not just a software vendor. </p><h5><b>What were the key objectives and requirements of the development process with Revelator?</b></h5><p>[Marek]: Revelator’s team was looking for an IT partner to help them enhance their Web3 features. They needed a dedicated NFT tool and blockchain royalty payments mechanism. They also knew that they didn’t want to be dependent on just one chain, so we had to refactor their backend to be compatible with multiple EVM blockchains - at this point, users can choose between Binance, Polygon, and Ethereum Mainnet, and we’re working to onboard more.</p><p>As for the NFT feature, the concept behind it was to enable record labels and music distributors to easily create NFTs to enhance fan engagement and introduce an additional revenue stream for music creators. So we wrote a set of smart contracts working together that transformed the digital art pieces into NFTs, listed them in the marketplace, and managed the process of purchasing them. </p><h5><b>Were there any significant challenges or obstacles you encountered during the project? If so, how did the team overcome them?</b></h5><p>[Marek]: When we first started, the codebase was a big monolithic API that we knew wouldn’t be able to perform on a bigger scale. What we had to do first, was to switch to microservice architecture and implement industry standards like AWS Lambdas, Subgraph, or separate different environments. It was quite a bit of work, but it paid off. Now the system is reliable, safe, and scalable.</p><p>Another challenge was the issue of encouraging traditional Web2 users, not familiar with crypto and without crypto wallets, to also sell/buy and manage the NFTs. To tackle this issue our team created Smart Wallet. It’s a really cool piece of software that enables non-crypto folks to take full advantage of Revelator’s Web3 features. In <a href=\"https://www.rumblefish.dev/case-studies/revelator/\"><u>our case study</u></a>, we describe how it works in more detail.</p><p>{{linkImage,Revelator Case Study}}</p><h5>\n<b>Kuba, can you provide an overview of the project and your specific role in it?</b></h5><p>[Kuba]: As Marek mentioned, it was a very broad and complex set of microservices, integrated with the blockchain layer. I was responsible for various backend tasks, focused on microservices, cloud, and blockchain integration. As a team, we had to separate multiple parts of a monolith and create proper communication between microservices, Web2, and Web3 parts. In order to do so we came up with a few unique and highly scalable ideas. One of them, called &quot;Operator Wallets&quot; makes it possible for operators like Spotify or YouTube to perform transactions on a blockchain without owning a crypto wallet. That makes the whole system more accessible and UX-friendly for potential clients. It’s a great solution, which we’re very proud of. The team and I created a swift, safe, and transparent system in which the microservices combined with other AWS cloud tools and smart contracts work seamlessly and are integrated with all the best practices in mind.</p>","timeToRead":8,"shortContent":"<p>an interview with the development team</p><p><b>Today, we talk with part of the team working with Revelator, one of our awesome customers, to understand the struggles, challenges, and joys of building a blockchain and cloud-based system that helps record labels, distributors, and music publishers manage their catalogs and assets.  </b></p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"Images_for_blog_posts_1_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Images_for_blog_posts_1_75a00b8e09.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Building_a_multichain_Web3_fc23895f1c.png","name":"Building a multichain Web3.png"}}},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Marek Kowalski","Position":"CTO / Co-Founder","Avatar":{"data":{"id":"101","attributes":{"name":"Marek-Kowalski-CEO-Rumble-Fish.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Marek_Kowalski_CEO_Rumble_Fish_fdc397497a.png"}}}}},{"attributes":{"Name":"Jakub Hajduk","Position":"Blockchain Developer","Avatar":{"data":{"id":"91","attributes":{"name":"Kuba-Blockchain-Developer-Rumble-Fish.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Kuba_Blockchain_Developer_Rumble_Fish_2a1acbb0c6.png"}}}}}]}}},{"id":"53","attributes":{"title":"Rumble Fish joins Polish Blockchain Association","slug":"rumble-fish-joins-polish-blockchain-association","pubDate":"2023-05-15","content":"<p>We’re beyond proud to announce that Rumble Fish joined Polish Blockchain Association as a member. It’s yet another blockchain community we’ve joined recently, the previous one being the Swiss-Polish Blockchain Association. </p><p><a href=\"https://bit.ly/rf-partners-pba\"><u>Polish Blockchain Association</u></a> was established in 2018 in an effort to <b>drive knowledge and experience exchange in the area of blockchain technology</b> in Poland, and also to establish international relations with global blockchain players. <b>Rumble Fish, a first-choice blockchain development company in Poland, was a natural fit for the organization. </b>Our partnership aims to explore, share, and exchange experiences in building blockchain-based projects, as well as discuss new concepts and ideas and establish new professional relations with fellow blockchain aficionados. Our knowledge of various blockchain protocols and experience in developing web3 and defi products enables us to be a trustworthy partner and advisor for companies who wish to jump on the blockchain bandwagon.</p><p>At Rumble Fish, we are <b>experts in custom blockchain development,</b> defi &amp; fintech development, and smart contracts development. Our engineers are amongst the best blockchain developers you can find, due to their drive and constant training. As a company, we are always looking to expand our horizons, establish new connections, and exchange our knowledge with other industry experts. Being a member of the Polish Blockchain Association will allow us to do just that and to be even more active in the European blockchain market. </p>","timeToRead":2,"shortContent":"<p>We’re beyond proud to announce that Rumble Fish joined Polish Blockchain Association as a member. It’s yet another blockchain community we’ve joined recently, the previous one being the Swiss-Polish Blockchain Association. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"rumble-fish-joins-polish-blockchain-association.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/rumble_fish_joins_polish_blockchain_association_a802cd9629.jpg"}}},"thumbnail":{"data":{"attributes":{"caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Rumble_Fish_joins_SPBA_24ee9ba552.png","name":"Rumble Fish joins SPBA.png"}}},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"52","attributes":{"title":"Advantages of using blockchain in 10 unexpected industries","slug":"advantages-of-using-blockchain-in-10-unexpected-industries","pubDate":"2023-03-27","content":"<p>Blockchain technology has gone far beyond its original purpose of powering cryptocurrencies. Today, it has become a versatile tool that can be applied to a wide range of industries and use cases. <b>Blockchain-based product development</b> has entered a plethora of industries and has proven to be extremely helpful and efficient. In this article, we explore <b>10 unexpected industries that benefit from deploying blockchain. </b></p><p><b></b></p><h3>Decentralized Social Media Platforms</h3><p>Social media platforms have become an integral part of our lives, but they have also faced criticism for their centralized and data-hungry nature. <b>Decentralized social media platforms</b> built on blockchain technology offer an alternative approach, where users have control over their data and are incentivized for contributing to the platform. Examples include <a href=\"https://steemit.com/\"><u>Steemit</u></a> and <a href=\"https://www.minds.com/\"><u>Minds</u></a>.</p><p></p><h3>On-chain Voting Systems</h3><p><b>Blockchain-based voting systems</b> have the potential to increase transparency and security in elections. Invaluable <b>advantages of using blockchain technology</b> in elections are that they can reduce the risk of tampering and fraud, and provide a more efficient and accurate way of counting votes.</p><p><b>Voting systems built on blockchain</b> can securely and transparently record and tally votes.  Each vote is recorded as a transaction on the blockchain, and each block of transactions is cryptographically linked to the previous block, creating an immutable chain of records. The system can be designed to allow only authorized people to cast their votes, and each voter can only do it once. Because of the <b>transparency and security of the blockchain</b>, the results of the vote can be publicly audited and verified, reducing the potential for fraud and ensuring the accuracy of the results. <b>Blockchain-based voting systems</b> also have the potential to reduce the cost and complexity of traditional voting systems, such as paper ballots and manual vote counting. A good example of an on-chain voting platform is <a href=\"https://www.agora.vote/\"><u>Agora</u></a>, which provides a secure and transparent voting system that <b>benefits from using blockchain technology.</b></p><p><b></b></p><h3>Blockchain for Supply Chain Management</h3><p>Blockchain technology can be used to improve supply chain management by providing a transparent and secure way to track goods from their origin to their destination. <b>The advantages of using blockchain</b> in logistics are: reduced fraud, increased transparency, and ensured authenticity of products. </p><p>One of the companies that saw a huge opportunity in deploying blockchain to manage their supply chain was Walmart. They have been one of the early adopters of blockchain technology in the retail industry. In 2018, <a href=\"https://hbr.org/2022/01/how-walmart-canada-uses-blockchain-to-solve-supply-chain-challenges\"><u>Walmart announced implementing a </u><b><u>blockchain-based system for tracking food products</u></b><u> through its supply chain</u></a>. The Walmart Food Traceability Initiative system uses <b>blockchain technology</b> to track the movement of food products from farm to store. In addition to the food traceability initiative, Walmart has also filed several patents related to <b>blockchain technology for the supply chain management.</b> These patents include systems for managing product warranties, authenticating product information, and tracking the delivery of products. Other examples of utilizing blockchain in supply chain management include<a href=\"https://www.ibm.com/products/supply-chain-intelligence-suite/food-trust\"><u> IBM&#39;s Food Trust</u></a> and Provenance. </p><p></p><h3>Digital Identity Management with blockchain</h3><p>Blockchain technology also provides a decentralized and secure way to manage digital identities. <b>Digital Identity Management (DIM) with blockchain</b> can help individuals and organizations to control their digital identities and provide secure access to their information.</p><p>Blockchain-based DIM systems use a distributed ledger to record and store user data in an immutable and tamper-proof way. Each user has a unique digital identity that is verified and validated through cryptographic methods. This ensures that the user&#39;s identity is secure and cannot be forged. One of<b> the key advantages of blockchain-based DIM systems</b> is that they provide users with complete control over their identity data. Users can choose what information to share with third-party service providers and can revoke access at any time. </p><p>Blockchain-based DIM systems can also streamline identity verification processes and reduce the risk of identity theft and fraud. With a secure and immutable ledger, it becomes much more difficult for bad actors to steal or manipulate user data. Examples of companies that<b> take advantage of blockchain</b> within the DIM industry are <a href=\"https://www.civic.com/\"><u>Civic </u></a>and <a href=\"https://veramo.io/\"><u>Veramo</u></a>.</p><p></p><h3>Blockchain-based Energy Trading Platforms</h3><p><b>Blockchain-based energy trading platforms</b> have emerged as a promising solution to many of the challenges faced by traditional energy trading systems. These platforms leverage the decentralized and immutable nature of blockchain technology to create a more efficient and transparent energy trading process.</p><p>One of the key <b>advantages of blockchain-based energy trading platforms</b> is their ability to facilitate <b>peer-to-peer (P2P) energy trading.</b> With these platforms, individuals and organizations can buy and sell energy directly to each other, without the need for intermediaries such as utilities or energy retailers. This can lead to more efficient pricing and reduce costs for both buyers and sellers. </p><p>Moreover, these platforms can help to promote the use of renewable energy sources by creating a market for decentralized energy production. For example, individuals or businesses with solar panels or wind turbines can sell excess energy generated back to the grid through the platform.</p><p>Several blockchain-based energy trading platforms have already been developed and deployed, and we also contributed to introducing the advantages of blockchain to energy trading with <a href=\"https://www.rumblefish.dev/case-studies/solar-generation-a-global-energy-online-trading-platform-mvp/\"><u>Solar Generation</u></a>. Other examples include <a href=\"https://www.powerledger.io/\"><u>Powerledger</u></a> and <a href=\"https://electron.net/\"><u>Electron</u></a>.</p><p></p><h3>Property Rights Management using blockchain</h3><p><b>Blockchain technology can be used to create a decentralized and transparent property rights registry, </b>providing a secure way of recording and managing property rights. This can help reduce disputes and increase efficiency in property transactions. </p><p>Using blockchain, a digital record of property ownership can be created, securely stored, and easily accessible to authorized parties. <b>The advantages of using blockchain </b>in this scenario are reduced fraud, corruption, and errors, which are common problems in traditional property management systems. It can also increase transparency, allowing all parties to see the history of a particular property.</p><p>There are several companies that have already started using blockchain for property rights management, including <a href=\"https://propy.com/browse/\"><u>Propy </u></a>and <a href=\"https://ubitquity.io/\"><u>Ubitquity</u></a>. These entities are working to make the process of buying, selling, and transferring property faster, more efficient, and more secure using blockchain technology.</p><p></p><h3>Blockchain-based Cloud Storage Platforms</h3><p><b>The benefits of blockchain technology</b> can be used to create decentralized cloud storage platforms, where users can securely store and share their data without relying on centralized providers. Unlike traditional cloud storage services, blockchain-based cloud storage platforms use a distributed ledger to store data across a network of nodes, which ensures that data is tamper-proof, immutable, and secure.</p><p>One of the<b> key advantages of blockchain-based cloud storage platforms</b> is that they offer greater privacy and security. Unlike centralized cloud storage services, which are vulnerable to cyber-attacks and data breaches, blockchain-based cloud storage platforms use cryptographic methods to encrypt and secure data. This ensures that only authorized parties have access to the data.</p><p>Another <b>benefit of blockchain-based cloud storage platforms</b> is that they can provide more affordable storage options. By leveraging a decentralized network of nodes, these platforms can reduce the cost of storing and sharing data.</p><p>Several blockchain-based cloud storage platforms have already been developed, such as <a href=\"https://sia.tech/\"><u>Sia</u></a>, <a href=\"https://www.storj.io/\"><u>Storj</u></a>, and <a href=\"https://filecoin.io/\"><u>Filecoin</u></a>. </p><p></p><h3>Web3 Gaming Platforms</h3><p>Web3 gaming platforms, also known as <b>blockchain gaming platforms</b>, use blockchain technology to create decentralized gaming ecosystems that enable players to own, trade, and exchange in-game assets. These platforms provide a new way of playing and engaging with games, allowing players to participate in a more open and transparent gaming experience.</p><p><b>The advantage of using blockchain</b> in gaming platforms is that they enable players to truly own their in-game assets. These assets are represented as unique digital tokens on the blockchain, which means that players have complete control over them. This allows players to trade, exchange, and use their assets across multiple games and platforms.</p><p>Additionally, <b>web3 gaming platforms</b> can provide new ways for players to earn rewards and participate in the game economy. Players can earn rewards for participating in game activities, such as completing quests, winning battles, or acquiring rare items. These rewards can be used to purchase in-game assets, which can be traded or used in other games and platforms.</p><p>Several <b>web3 gaming platforms</b> have already been built, including <a href=\"https://axieinfinity.com/\"><u>Axie Infinity</u></a>, <a href=\"https://decentraland.org/\"><u>Decentraland</u></a>, and <a href=\"https://www.sandbox.game/en/\"><u>The Sandbox</u></a>. </p><p></p><h3>Blockchain-based Digital Art Marketplaces</h3><p>Blockchain technology can be used to create a transparent and secure digital art marketplace, where artists can authenticate and sell their work as unique digital assets. Blockchain has created a new era in the art world by providing an innovative solution to the long-standing problem of provenance and authenticity of art pieces. Digital art, in particular, has emerged as a thriving market in recent years, with <b>blockchain-based marketplaces</b> offering artists and collectors a new way to buy and sell digital artwork.</p><p>Here are some popular <b>Web3 digital art marketplaces</b>:</p><ul><li><p><a href=\"https://www.niftygateway.com/\"><u>Nifty Gateway</u></a>: a popular marketplace for buying and selling limited-edition digital art and NFT collectibles. It uses the Ethereum blockchain to verify ownership and authenticity of art pieces and also offers a secondary market for reselling art.</p></li><li><p><a href=\"https://superrare.com/\"><u>SuperRare</u></a>: SuperRare is another popular NFT marketplace that uses blockchain technology to verify ownership of art pieces. It also uses a unique auction system, where collectors can bid on and buy exclusive, one-of-a-kind digital pieces.</p></li><li><p><a href=\"https://opensea.io/\"><u>OpenSea</u></a>: OpenSea is the largest decentralized marketplace for buying and selling NFTs, which are unique digital assets that can represent anything from digital art to virtual real estate. OpenSea supports a wide range of blockchain networks, including Ethereum and Polygon.</p></li><li><p><a href=\"https://rarible.com/\"><u>Rarible</u></a>: Rarible is an NFT marketplace that allows artists to create, sell, and collect digital assets. It offers a simple and user-friendly interface, as well as a unique governance token system that allows users to vote on platform upgrades and changes.</p></li><li><p><a href=\"https://knownorigin.io/\"><u>KnownOrigin</u></a>: KnownOrigin is a blockchain-based art marketplace that allows artists to sell their unique digital artwork as NFTs. It uses the Ethereum blockchain to verify ownership and authenticity of the pieces and also offers a range of features for artists, including royalties and commission fees.</p></li></ul><p>Overall, <b>blockchain offers a plethora of advantages</b> when it comes to buying, selling, and authenticating art. These Web3 marketplaces are likely to play an increasingly important role in the art world.</p><p></p><h3>Blockchain-based Microfinance Platforms</h3><p>What is more, <b>the advantages of blockchain technology</b> can be used to create microfinance platforms that enable peer-to-peer lending and borrowing, allowing people without access to traditional banking services to access credit. Microfinance is a type of financial service that provides small loans, savings, and insurance products to low-income individuals and businesses who lack access to traditional banking services. Blockchain technology has the potential to transform microfinance by providing a secure, transparent, and decentralized platform for lending and borrowing.</p><p>Overall,<b> blockchain-based microfinance platforms</b> have the potential to revolutionize the way financial services are delivered to underserved communities around the world. By providing secure, transparent, and decentralized platforms for lending and borrowing, these platforms can help to reduce poverty, increase financial inclusion, and support economic development. Examples of such Web3 microfinance platforms include <a href=\"https://www.kiva.org/\"><u>Kiva</u></a> and <a href=\"https://humaniq.com/\"><u>Humaniq</u></a>.</p><p></p><h3>Conclusion</h3><p><b>Blockchain technology is a versatile tool with a whole range of benefits</b> that can be applied to a wide variety of industries and use cases. From supply chain management to social media platforms, the possibilities are endless. As the technology continues to evolve, it will be exciting to see what other uncommon blockchain applications emerge in the years to come. If you&#39;re looking to build your own blockchain project, Rumble Fish Software Development can help. Our team of experienced developers can assist you in<b> building a custom blockchain solution</b> that meets your specific needs. <a href=\"mailto:hello@rumblefish.dev\"><u>Contact us today to learn more!</u></a></p>","timeToRead":10,"shortContent":"<p>Blockchain technology has gone far beyond its original purpose of powering cryptocurrencies. Today, it has become a versatile tool that can be applied to a wide range of industries and use cases. Blockchain-based product development has entered a plethora of industries and has proven to be extremely helpful and efficient. In this article, we explore 10 unexpected industries that benefit from deploying blockchain. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"advantages-of-using-blockchain.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/advantages_of_using_blockchain_3689f4ec40.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"51","attributes":{"title":"Rumble Fish recognized by Clutch as Top Web3 and Top Blockchain Company","slug":"rumble-fish-recognized-by-clutch-as-top-web3-and-top-blockchain-company","pubDate":"2023-03-10","content":"<p>We’re proud to be recognized by Clutch once again! This time we’ve been acknowledged as a Top Web3 and Top Blockchain Company in Poland. It’s particularly important and valuable to us, as those are core areas of our expertise. </p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Images_for_blog_posts_9038d4570a.png\" alt=\"Images_for_blog_posts.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_Images_for_blog_posts_9038d4570a.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Images_for_blog_posts_9038d4570a.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Images_for_blog_posts_9038d4570a.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Images_for_blog_posts_9038d4570a.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p>Since 2017 we’ve been involved in various <b>blockchain-based software development projects</b> for industry-recognized customers like <a href=\"https://www.rumblefish.dev/case-studies/makerdao/\"><b><u>MakerDAO</u></b></a> or <a href=\"https://www.rumblefish.dev/case-studies/the-ocean-a-cryptocurrency-exchange-platform-with-a-dedicated-team-of/\"><b><u>The Ocean</u></b></a>. Our <b>development services in the Web3 area</b> contain <b>NFT platform development, NFT collections development, crypto exchange development, smart contracts development,</b> and many more. It’s also crucial for us to keep our engineers up to date with the newest tools and technologies in the blockchain development industry - that’s why we constantly improve our skills and knowledge by attending blockchain-related events, external and internal training, and knowledge-sharing sessions. </p><p>We are also proud to <b>train our own blockchain developers</b> in <a href=\"https://www.rumblefish.dev/blockchainhub/\"><u>a unique 4-week training course</u></a> designed by our CTO and blockchain connoisseur, Marek Kowalski. During the course, we share our invaluable smart contract, NFT, and crypto protocols knowledge with trainees to give them all the tools they need to become<b> top-notch blockchain professionals. </b></p><p>Rumble Fish delivers <b>state-of-the-art blockchain development services</b> to companies of all sizes - we have experience working with start-ups, mid-sized companies, and huge global corporations. Our strength lies in our passion for technology - RF engineers simply enjoy their job, combined with great communication skills - our customers can vouch for that! We understand the intricacies of <b>blockchain development </b>and know the technology which makes us a perfect partner and advisor in any <b>Web3</b> endeavor. </p>","timeToRead":3,"shortContent":"<p>We’re proud to be recognized by Clutch once again! This time we’ve been acknowledged as a Top Web3 and Top Blockchain Company in Poland. It’s particularly important and valuable to us, as those are core areas of our expertise.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"Images_for_blog_posts.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Images_for_blog_posts_839dc90d2d.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"50","attributes":{"title":"Blockchain for Banking and Enterprises","slug":"blockchain-for-banking-and-enterprises","pubDate":"2023-02-21","content":"<p>Although decentralized marketplaces have experienced a hiccup or two in recent months, the foundation for blockchain-based applications is quickly expanding. According to<a href=\"https://www.blockdata.tech/blog/general/the-top-100-public-companies-using-blockchain-in-2022\"><u> Blockdata</u></a>, 44 out of the top 100 public firms in six key industries currently use blockchain in some capacity. These corporations range from massive financial institutions like Bank of America to companies like McDonald&#39;s and Walmart. But how can the blockchain industry get more than those 44  organizations to join?</p><p>A <a href=\"https://www2.deloitte.com/insights/us/en/focus/signals-for-strategists/emergence-of-blockchain-consortia.html#endnote-7\"><u>Deloitte study</u></a> showed that out of executives who are familiar with blockchain, 18% are already part of an <b>enterprise blockchain consortium</b>, 45% are likely to join, and 14% are considering forming one.</p><p>Attention-grabbing cryptocurrency headlines tend to hide the potential of blockchain, its underlying technology. But a signal is emerging among the noise, hinting at the massive ramifications of the new technology and its potential to produce ground-breaking applications. This attracts the attention of other business executives from a variety of industries thanks to the leadership of blue-chip technology and financial firms like IBM, Microsoft, Bank of America, and Barclays. </p><p>What does <b>the rise of blockchain</b> imply for the banking sector and enterprises in general? Let’s take a closer look at how<b> blockchain-based applications and products</b> are disrupting the enterprise space today.</p><p></p><h2>Crypto transactions and products at the enterprise level</h2><p></p><p>Cryptocurrency transaction costs have been a big barrier to entry since the emergence of crypto exchanges. There is already ample evidence showing that these fees are deterring newcomers from joining. This issue touches on the crucial tenet of <b>blockchain-based applications</b>: decentralization. High fees go against it since, as demand increases, miners prioritize transactions with the highest fees. Many are turned off by higher costs because they’re unable to pay them. This is just one of the many issues that inspire enterprises to question whether it is worthwhile to enter the market. The leaders in the cryptocurrency industry are aware of this, and efforts are already being made to reduce expenses. <b>Rollups </b>are one of the alternatives that have gained traction; they function by grouping transactions and processing them outside of the layer 1 network. More and more systems adopt <b>sharding</b>, which guarantees that each transaction takes up less space. Some newly developed trading systems enable transactions with no fees. </p><p></p><h2>What makes an enterprise crypto project successful?</h2><p></p><p>Top decision-makers might be more likely to implement crypto solutions if the user experience is great and the barrier to entry is low. There’s no denying that blockchain is a jargon-heavy business, which many might find difficult to understand. Instead of concentrating on explaining the technology in detail, solution creators should put user requirements first, using a universal, easy-to-understand language.</p><p>Another issue is a lengthy onboarding procedure, which might easily discourage a business decision-maker who doesn’t have much free time available. Crypto initiatives need to simplify the onboarding flow and quickly fix any errors. </p><p>Finally, there’s the matter of transactional speed. Despite the fact that <b>blockchain technology is continually expanding</b>, we see reports of slow transaction rates — slower than those of conventional financial institutions. It’s essential that crypto initiatives let consumers know how long a certain procedure will take using countdown clocks and reassure them that everything is operating correctly. Enterprise product owners need to be aware that emerging blockchains such as Solana, Fantom, and Cardano increase transaction speed significantly.</p><p></p><h2>Regulations are a key consideration</h2><p></p><p>The implementation of<b> blockchain technology</b> continues to be hampered by regulatory complexity. Both regional and federal governments have indicated an interest in regulating the cryptocurrency market over the last several years, but they frequently run into obstacles due to the ecosystem&#39;s complexity. Most countries have by now released some crypto-related legislation, often based on more general financial rules already in place.</p><p>The way different countries handle crypto varies greatly. Some have even gone so far as to declare cryptocurrency trading a legitimate activity. Others have let cryptocurrency platforms operate without a license but have not provided authorities with a comprehensive model.</p><p>However, clear legislation is bound to encourage the acceptance of cryptocurrency, as potential adopters would feel safer managing their assets in licensed institutions. Some experts believe that <b>centralized exchanges must lead any legislative reform before the rest of the ecosystem can follow.</b> This would make it possible for business customers to enter the crypto realm safely. </p><p>Bermuda and Liechtenstein are examples of nations where centralized cryptocurrency exchanges collaborated with local authorities to enact favorable rules.</p><p></p><h2>Real-world enterprise blockchain applications</h2><p></p><h3>Supply chain transparency</h3><p></p><p>To be competitive, manufacturing businesses rely on extensive, worldwide supply networks. Quality assurance and traceability are crucial objectives, particularly with items that directly affect the health and safety of customers. As businesses grow, their supply chains become more complex, often relying on a sizable supplier base and several handoffs before components reach their facilities.</p><p>Numerous examples demonstrate the negative effects of opaque supply chains. A 2015 e.coli outbreak at Chipotle affected 55 customers, forced the restaurant&#39;s closure, and resulted in the loss of $8 billion in stock value in only three months. Due to a defective gas pedal, Toyota had to recall 4 million vehicles in 2009, which caused a $2 billion revenue loss and a 15% decline in the share price.</p><p>Even if Chipotle and Toyota&#39;s disasters couldn&#39;t have been avoided, root cause analysis may have taken less time, money, and effort if blockchain had been used. Both companies could have avoided expensive recalls if they had used blockchain to keep track of their supply chains and quickly find the companies that made the defective products. </p><p></p><h3>Example case study: Walmart </h3><p></p><p>Walmart’s <b>blockchain application</b> enhances the transparency of its Chinese pork supplier. Setting the groundwork for their blockchain experiment was a recent recall of 100,000 tons of tainted Chinese goods, followed by Walmart&#39;s global initiative to enhance food safety. The company used Hyperledger to connect the digital records of each RFID-tagged animal to the blockchain in collaboration with IBM and Tsinghua University. The application showed all partners in the supply chain, the chain of custody for each animal by keeping track of important information like the farm where the animal came from, the batch number, the factory and processing data, the expiration date, the storage temperature, and the details of the shipment.</p><p>The pilot&#39;s blockchain program allowed the enterprise to confidently confirm whether a product is genuine and safe, and when it expires. The company knows which items to recall and which may be safely left on the market in the event that a farm or factory has a food contamination concern.</p><p></p><h3>Faster financial transactions for trading</h3><p></p><p>Trade finance provides a particularly attractive use case for <b>blockchain technology</b> since it’s typically document-intensive and dependent on bank middlemen. Trade finance is significant for enterprises participating in complicated transactions with substantial counterparty risk. Trillions worth of products cross international boundaries each year, which is made possible by trade finance in the form of credit, insurance, or guarantees. Trade finance includes a range of actions intended to reduce risk between trading partners, particularly those who haven&#39;t traded before. For example, the letter of credit guarantees that the seller will be paid when the items are received, especially if the buyer experiences financial difficulty. The intricacy of a typical trade finance transaction is shown by a sample trading situation and the necessary paperwork and cash flows.</p><p>Global corporations&#39; treasury divisions oversee these transactions using centralized and ineffective procedures. One of the most important international banking networks, SWIFT, alone facilitates 40 million transactions a year between counterparties.</p><p>In contrast to that, <b>blockchain technology enables a rapid flow of payments, reduces costs and risks (credit and liquidity), and increases process transparency.</b> These solutions give the corporate treasurer more peace of mind and more time to focus on activities that add value instead of dealing with the hassles of settlement and reconciliation that come with older systems. </p><p></p><h3>Example case study: Bank of America, HSBC, and IDA</h3><p></p><p>Bank of America collaborated with HSBC and the Infocomm Development Authority of Singapore (IDA) to <b>use Hyperledger for streamlining and accelerating the trade financing process.</b> All participants in a trade finance transaction can communicate information on a permissioned ledger rather than sequentially transferring letters of credit as trade partners currently do. When an importer publishes a letter of credit to the ledger, a series of conditional events occur that are all automatically recorded on the blockchain and lead to a completed deal.</p><p>The pilot initiative demonstrated blockchain’s potential to automate the manual processing of import/export documentation, enhance security by lowering errors, improve convenience for all parties through mobile interaction, and increase the predictability of companies&#39; working capital.</p><p></p><h2>What does the future of business crypto hold?</h2><p></p><p>When it comes to enterprise adoption, <b>blockchain applications</b> are still in their infancy, as evidenced by the number of newly formed consortiums and enterprise pilot programs.</p><p>Undoubtedly, companies from all industries will continue <b>utilizing blockchain technology in 2023.</b> Business executives are aware of the advantages that blockchain technology can provide, from accelerating the introduction of new goods to enhancing supply chain network transparency. </p><p> As businesses build on such early achievements, the examples we mentioned above are likely to chart a line of rapid expansion over the next few years. And take-up rates are probably going to increase exponentially if we see lower transaction costs, better user experiences, and new regulations.</p><h2>Wrap up</h2><p>Similar to the PC or internet,<b> blockchain carries the potential to revolutionize enterprises,</b> allowing for a step-function increase in productivity and revolutionizing transactional processes between people, businesses, and governments.</p><p>Blockchain is on its way to significantly altering ownership, transparency, and security for shared records like contracts, increasing the records&#39; value and the processes they regulate. Technology has changed the way people think about trust by making it about a shared record or contract. This has opened the door to another change in banking and other business sectors.</p><p></p>","timeToRead":8,"shortContent":"<p>Although decentralized marketplaces have experienced a hiccup or two in recent months, the foundation for blockchain-based applications is quickly expanding. According to<a href=\"https://www.blockdata.tech/blog/general/the-top-100-public-companies-using-blockchain-in-2022\"><u> Blockdata</u></a>, 44 out of the top 100 public firms in six key industries currently use blockchain in some capacity. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"blockchain_for_banking_and_enterprises.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/blockchain_for_banking_and_enterprises_19664600df.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"},{"name":"FinTech"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"49","attributes":{"title":"Serverless vs. Server Computing: Detailed Comparison","slug":"serverless-vs-server-computing-detailed-comparison","pubDate":"2023-02-17","content":"<p>Serverless computing is gaining steam, so you’re bound to wonder what makes it better than other cloud-based back-end models. It’s not like serverless doesn’t use servers at all - it does, but the developer is not responsible for handling them. Today, you can outsource this to a cloud vendor and focus on mission-critical activities like building new features. This is one of the top reasons behind the rise of serverless computing.</p><p>So, what makes serverless computing so appealing? In this article, we compare server-based vs. serverless computing models, explore their benefits and drawbacks, and evaluate when it is best to employ one or the other.</p><h2>Serverless model - what is it and how does it work? </h2><p><b>Serverless computing</b> is a type of cloud computing where the backend or infrastructure of your application is controlled by the cloud service provider. The term might be a bit misleading because it implies that no servers are involved in the process at all. But you almost always need a server, and in this case, you don’t need to manage it. </p><p><b>Serverless applications</b> use virtual server resources to scale on demand. The approach allows developers to focus on writing code rather than maintaining and handling servers. The entire responsibility for the complex and time-consuming server administration activities lies with the cloud vendor. </p><h2>Pros of serverless computing </h2><h3><b>Reduced costs</b> </h3><p>Server provisioning and management can quickly get expensive. Based on the pay-as-you-go model, <b>serverless architecture</b> has become a popular alternative for many teams. It makes sense to only pay for the server resources that your business really uses, right? When you must provide your own servers, you’re likely to pay for more computing power - and get more of it than you actually need. </p><p>Moreover, when handling servers on your own, you always need to be prepared for a sudden surge in server demand. This leads many companies to invest in more resources than they need and overprovision their applications just in case.  </p><p><b>Serverless computing</b>, on the other hand, uses automated scaling - so, when demand increases, your company gains access to capacity that matches the current demand as well as its future fluctuations. </p><h3><b>Greater developer productivity</b> </h3><p><b>Serverless</b> enables developers to create apps without having to design, configure, and manage the underlying infrastructure. Because of this, teams have more time to work on innovative technological solutions and make user experiences that are more immersive. By removing time-consuming infrastructure maintenance duties, <b>serverless systems boost developer productivity</b>. Just think about all the things your development team could do if its members had more time to focus on functionality and app design. Serverless lets you leave all of the time-consuming infrastructure maintenance responsibilities to the cloud vendor and spend more time developing state-of-the-art products. </p><h3><b>Faster time to market</b> </h3><p>A more productive development team helps you get your software to market faster. And we all know that being the first product to market builds a massive competitive advantage. Your company&#39;s app can hit the market faster because developers won&#39;t have to spend time managing and maintaining the infrastructure underneath it.</p><h2>Challenges of serverless computing </h2><p>That said, <b>serverless computing</b> comes with its unique challenges that might become serious drawbacks if your devs team doesn’t know how to set it up. Gaining a competitive edge with <b>serverless computing</b> requires understanding, predicting, and planning for these potential obstacles. </p><h3><b>Delays</b> </h3><p><b>Serverless computing</b> accelerates application development, but the framework itself might cause delays. To understand why, we need to look at response latency - the time between a request and a response from the application. </p><p><b>Serverless cloud computing </b>shuts down between queries, and starting with inactive serverless code might delay the response. Spin-up and code processing can take a few seconds, which could be a problem if your app needs to work quickly. </p><p>Still, Netflix and Prime Video on Amazon use serverless because AWS tools let them slash the delay to the minimum. These examples show that the choice of the right tools eliminates the risk of delays successfully.</p><h3>Expert team is required</h3><p>\nServerless is an approach deeply rooted in the toolkit of a particular cloud service provider. To develop optimal applications, you need a specialized team that has in-depth knowledge of that vendor’s serverless offer.</p><h2>Serverless providers: an overview </h2><p>Amazon Web Services (AWS), Google Cloud Platform, and Microsoft Azure dominate the serverless industry. Each vendor provides a variety of services and virtual machines, but AWS is the industry leader since it offers the greatest number of options. AWS Lambda is the most popular <b>serverless service</b>.  </p><p>There are, of course, alternatives to the top three providers. IBM Cloud is another major serverless service provider with which organizations collaborate. One thing to be careful about here is vendor lock-in. Since your company will not have the physical gear to supply computer resources for the back-end of its application, it’s all too easy to employ the same vendor for all services. The more services you add, the harder it is to switch providers - and the more vulnerable your applications are to vendor issues such as outages. However, an experienced team knows how to eliminate this risk.</p><h2>Server computing models - what are they? \n</h2><p><b>Server computing</b> is basically any type of computing that involves the provisioning and management of a server. That server can be located on-premises in a data center or in the cloud as a <b>virtual machine.</b> Things may get a bit complicated since cloud providers also offer serverless solutions. If you look at Amazon Web Services, a serverless service is AWS Lambda, while products like EC2 offer server-based computing.</p><p><b>Cloud computing</b> delivers technological resources and services over the internet - and server administration is one such service. Others include storage, the underlying operating system, software, and networking. </p><p>By using servers in the cloud, organizations can use services on demand, become more flexible, and lower their IT operational costs. </p><h2>Pros of server computing</h2><h3><b>Greater control</b></h3><p><b>Cloud-based virtual machines</b> are maintained by the vendor, but you’re the one who has the power to manage and scale them. You can choose from a lot of different options and find VMs that give you the performance you need at the best price. This is a good way to keep your infrastructure costs as low as possible.</p><h3><b>Enhanced security</b></h3><p>This topic is frequently brought up when discussing servers vs. serverless. Considering the increase in frequency and severity of data breaches and hacker attacks, data protection is a key component of any IT activity. And <b>serverless </b>has a wider attack surface than <b>server computing</b>.</p><h2>Challenges of server computing  </h2><p><b>Provisioning and managing virtual machines</b> take a lot of your valuable time. And when your cloud footprint grows, you’re bound to see your engineers spend lots of time managing the infrastructure. The time it takes to properly configure your cloud infrastructure directly translates into costs. </p><h2>When to use server-based computing? </h2><p>If you have internal resources for <b>managing the cloud infrastructure</b> and need to have more control over the virtual machines used by your applications (for example, via services such as dedicated hosting), server-based computing is a good choice.  </p><h2>When to use serverless? </h2><p>Scalability is one of the main advantages of <b>serverless computing</b>. Serverless is a great option for teams that anticipate growth and need a setting that can accommodate the changing demands.</p><h2>Wrap up </h2><p><b>Serverless</b> is an alternative to cloud-based service computing that saves time and money by letting developers focus on writing code instead of managing servers. <b>Serverless computing</b> is likely to see its usage grow in the future. If you’d like to check if your application requirements are a good match for <b>serverless</b>, our experts can help you create a software development strategy with the serverless architecture in mind. Get in touch with us to stay on top of this growing trend and prepare your application for the future.</p>","timeToRead":5,"shortContent":"<p>Serverless computing is gaining steam, so you&#39;re bound to wonder what makes it better than other cloud-based back-end models. It&#39;s not like serverless doesn&#39;t use servers at all - it does, but the developer is not responsible for handling them. Today, you can outsource this to a cloud vendor and focus on mission-critical activities like building new features.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"serverless-computing-vs-server-based.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/serverless_computing_vs_server_based_4df560a24c.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Software development"},{"name":"AWS"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"48","attributes":{"title":"“Local-first approach is the future of software” - an interview with Holmes Wilson","slug":"local-first-approach-holmes-wilson-quiet","pubDate":"2023-02-07","content":"<p><b>In one of our previous posts, we described how to build an app without servers and used </b><a href=\"https://tryquiet.org/\"><b><u>Quiet </u></b></a><b>as a perfect example. Today, we talk with Holmes Wilson, the Founder of Quiet, to divę into the topic of mesh infrastructure, peer-to-peer apps, and internet freedom a bit deeper.</b></p><p><b>You’re the co-founder of both Fight for the Future and Quiet. Let’s start with the former. Can you please tell us more about its goal?</b></p><p>We started <a href=\"https://www.fightforthefuture.org/\"><u>Fight for the Future</u></a> because we saw an opportunity to change the course of the laws and policies that affect the internet and to guide the development of the internet in a better direction by engaging large numbers of people in the process through which those laws and policies get made by organizing large scale activism campaigns. And so the first thing we did at Fight For the Future was that there were two proposed laws or bills in the US that would have would have given any copyright holder including some of the big media companies the power to essentially censor any site on the internet in the United States. Those laws were written so broadly that sites could be censored not just for stuff that they posted, but even for content posted by users. So a single copyrighted photo or a meme or a video of someone singing a song, you know by a pop star that was technically under copyright could have potentially been grounds for taking down an entire site like Reddit or Tumblr or Twitter, for example. So it was these laws would have really damaged the development of the internet because they would have made it so that the sites people love to just be taken down randomly and then in order to defend themselves against that prospective user sites that allowed users to post things would have had to become so strict about what users posted that you wouldn&#39;t be able to have the kind of open spaces for expression and discussion that are what the most fun part of the internet. So we organized people to fight these laws in the US by giving them tools they could use on their websites to join in protests and organizing a day of protests where people would all take some step to alert the world about the fact that this was happening and then to get people to call their members of Congress in the US.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_04499_212e7ffa05.jpg\" alt=\"DSC04499.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_DSC_04499_212e7ffa05.jpg 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_DSC_04499_212e7ffa05.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_DSC_04499_212e7ffa05.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_DSC_04499_212e7ffa05.jpg 180w,\" sizes=\"100vw\" width=\"1000px\"></p><p><b>So the first step is to create awareness of the threatening policies to come, and then let people know how they can fight back?</b></p><p>Yes! Usually what we would do is find a way to explain these issues which are often very complicated in a way that people would be able to understand and then motivate people to take some kind of action to do something and give them an action that they could take, whether they were a website or an individual or a business or whatever, give them something meaningful they could do that actually exerted some kind of power over the system that had a plausible chance of actually achieving the result people wanted. If you can explain an issue to people in a way that&#39;s clear and meaningful to them and give them a path and motivate them to move down that path together, then you can achieve really surprising victories In this case in the US these bills were proposed for internet censorship and they had the support of some of the biggest lobbies in the US - drug companies, large movie or music production companies, even some tech corporations. The drug companies&#39; angle was they wanted to be able to censor websites that were selling generic medicines from countries outside of the US.</p><p>But the problem is whenever you start down that road, there are all kinds of collateral damage that you&#39;re doing because you&#39;re building a censorship machine that could get used for all kinds of things and it&#39;s unpredictable what it will get used for. So despite these bills having massive support from these huge industry lobbies that were extremely well connected and they have the support of both parties and everyone expected the bills to sail through, we were able to organize the part of the public that really understood and cared about the internet to stop these bills alongside organizations and tech companies and public intellectuals and this whole raft of voices. Because we were able to organize them so well, we stopped the bills, and not only do we stop the bills, but we stopped them so effectively that they never came up again. And we made the idea of censoring the internet in that way so unpalatable that 13 or 11 years later still has not come up again.</p><p><b>Okay, censorship is one thing but what are other threats that come with the development of the internet?</b></p><p>Another big issue we worked on was net neutrality. Which is a set of policies that guarantee that the companies or institutions providing your internet access do not have the power to decide what sites you visit, what apps you use, and what apps work. This was a fight both in the US and the EU where internet providers like telecom companies and cable television companies wanted to be able to make some sites go faster than others and charge websites or app developers for the privilege of being one of those non-throttled.</p><p>Another thing that they wanted to do was to be able to block competing services. For example, if a cable company has an internet television service they might want to make that work really well and at the same time, make let’s say Netflix work poorly. In the US cable providers were intentionally not upgrading the routers and or the interconnection points that were serving traffic from Netflix just to let Netflix service degrade in order to push people to use their services that they made money off.</p><p>To give you another example, when Facetime first came out for the iPhone, the mobile operators in the US said ‘okay fine but you can&#39;t use that on our networks’. And they blocked Facetime and they also blocked Skype for a while because it was over the internet and they wanted people to use phone minutes and not use internet calling.</p><p>So we were able to get strong net neutrality rules in the US and then later and we helped with the effort in the UE. And the net neutrality rules in the EU are actually now better than the ones in the US.</p><p><b>It all ties in with what you guys are doing in Quiet. Let’s talk about this a bit.</b></p><p>So Quiet is a peer-to-peer communication app that syncs messages between users directly, there is no need for a server, we’re using Tor instead. What Quiet does is it lets people control their own data and communicate and work together without depending on a server at all. We build private networks for people in a given community which could be a workplace, it could be a group of friends or it could be some type of organization, or just some type of online or offline community.</p><p>We create a private network for them where their devices are connected to each other&#39;s devices. We connect those devices together over Tor and then we use some cool technology from a project called IPFS and OrbitDB to sync all the data relevant to their communication and collaboration between their devices in real time. And so for example when you&#39;re in a quiet community and you send a message it&#39;s getting added to a database and it&#39;s getting broadcasted out to the devices of other people in your community.</p><p>Quiet is an example of a local first and peer-to-peer app and I think this approach is going to become the new open source.</p><p><b>You decided to build Quiet with Rumble Fish’s team. Can you tell me a little bit about our cooperation?</b></p><p>We&#39;ve been working together since the very beginning of 2019 or the end of 2018. And at the beginning when we started, it was kind of a research project of mine where I wanted to make progress on it, and investigate, but I wasn&#39;t working on it full time. And when we were in that mode, my relationship with Rumble Fish was very much like, okay, this is a dev team. But over the past few years and this has happened in some leaps, but mostly just gradually it&#39;s become more like we&#39;re a team working together and I&#39;m working on this full time. I&#39;m the product manager and in more of a full-time founder role and then Rumble Fish is a team of colleagues and the management team., They are very technical and bring senior-level development guidance. They are also being a technical adviser to me in terms of what decisions make sense or don&#39;t make sense at different stages in the project.</p><p>To get a closer look at what we’re building together with Holmes,<a href=\"https://www.rumblefish.dev/case-studies/a-tale-of-a-decentralized-communication-app-development/\"><u> see our case study</u></a>. </p>","timeToRead":10,"shortContent":"<p>In one of our previous posts, we described how to build an app without servers and used <a href=\"https://tryquiet.org/\"><u>Quiet </u></a>as a perfect example. Today, we talk with Holmes Wilson, the Founder of Quiet, to dive into the topic of mesh infrastructure, peer-to-peer apps, and internet freedom a bit deeper.\n\n</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"-F97F02.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/F97_F02_263100f0d4.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"47","attributes":{"title":"What Are Serverless Examples? 8 Real-World Use Cases Of Serverless Technology","slug":"what-are-serverless-examples-8-real-world-use-cases-of-serverless-technology","pubDate":"2023-02-01","content":"<p>Why should you care about serverless architecture when the industry is buzzing with new approaches all the time? There are a couple of reasons why the serverless framework is a serious disruptor in software development. Serverless quickly delivers direct business value. By letting developers concentrate on what they excel at, you can boost their productivity and happiness. The technology also comes with a beneficial pricing strategy - cloud providers charge you for the execution time, as opposed to the 24/7 server maintenance cost in traditional architectures. Serverless architectures are on the rise, but how are companies implementing them? Keep reading to discover inspiring real-world applications of serverless and how to get started. </p><h2>Quick recap: how does a serverless architecture work?</h2><p><b>Serverless is an application delivery architecture</b> where a cloud provider intercepts user requests and compute events to dynamically distribute and scale compute resources, helping teams to execute applications without installing, configuring, monitoring, or maintaining server infrastructure. </p><p>Serverless opens the door to developing applications that are:</p><ul><li><p>hostless - apps aren’t hosted on a server, </p></li><li><p>stateless - interactions and data are not stored, </p></li><li><p>elastic - resources are scaled up and down without any restrictions, </p></li><li><p>distributed - you can connect many services for seamless operation, </p></li><li><p>event-driven - resources are allocated only when triggered by an event.</p></li></ul><p>Here’s a typical <b>serverless application flow</b>:</p><ul><li><p>The engineer creates an application with a function that determines how it responds to specific user activity. Cloud service providers offer pre-packaged <b>FaaS solutions</b> to help in writing code thanks to pre-built backend pieces.</p></li><li><p>Next, the developer specifies a <b>function event</b>. It describes how and when the function will be triggered. When a user starts an HTTP request, the application may want to fetch and provide specific data. This &quot;if-then&quot; mechanism is an event.</p></li><li><p>Now it’s time to deploy the application and make it available to users. Sooner or later, the event is triggered by a user action.</p></li><li><p>The application communicates the event to the cloud provider, which dynamically allocates the resources required to respond to the action in line with the preset function.</p></li><li><p>The function returns the data or any other output to the user.</p></li></ul><p>\nThis flow clearly shows why<b> serverless is so cost-efficient.</b> When the application doesn’t receive any user requests, the cloud provider won’t assign any resources to it and no data will be stored in any interim stage. This guarantees that up-to-date data reaches the user keeping your application real-time while saving storage expenses.</p><h2>8 real-world serverless examples that showcase its benefits</h2><p></p><h3>1. Coca-Cola&#39;s smart vending machines powered by IoT</h3><p>In 2016, Coca-Cola converted to serverless and cloud-based vending machines called Freestyle, <b>which led to thousands of dollars saved annually.</b> Customers can order a drink, pay online, receive their order, and get a confirmation message on their mobile phones using the company&#39;s smart vending machine. \nCoca-Cola Freestyle underwent an <b>AWS Properly-Architected Review </b><a href=\"https://aws.amazon.com/solutions/case-studies/coca-cola-freestyle/\"><u>following a successful prototype in April 2020</u></a>. The prototype was made available to customer testing sites in early June, and the web app was made public a month later. Within 100 days of conceptualization, 500 machines were running the new web app by mid-to-late July, and 10,000 were operating by the end of August. </p><p>Before transitioning to serverless, Coca-Cola paid roughly $13,000 per machine annually. Serverless deployment reduced that bill to $4,500, cutting roughly 66% of the cost. During the pandemic, Freestyle systems handled roughly 80 million queries per month via a completely touchless experience (way beyond the 30 million projected).</p><h3>2. Equinox Media&#39;s serverless infrastructure and analytics</h3><p>As shown in the 2020 AWS re:Invent talk &quot;Serverless analytics at Equinox Media: Handling expansion during disruption,&quot; Equinox Media <a href=\"https://www.techtarget.com/searchcloudcomputing/feature/Learn-from-these-real-world-AWS-serverless-examples\"><u>launched a new fitness service VARIS</u></a> and a stay-at-home SoulCycle cycle using a data lake strategy and serverless resources.\nEquinox designed these solutions from the bottom up, using <b>Amazon Kinesis</b> for real-time data streaming, <b>AWS Lambda</b> for event-driven architecture, <b>AWS Glue </b>for data loading, <b>Amazon DynamoDB</b> for data storage, and <b>Amazon Athena</b> for data analysis.</p><p>Equinox went down the <b>serverless </b>road for its scalability and low cost. When dealing with a dynamic use pattern, serverless is more cost-effective as it eliminates the need to predict and build infrastructure that may not be used. VARIS depends on machine learning suggestions to drive its user experience, so serverless was the ideal match for data analytics. </p><h3>3. Major League Baseball Advanced Media and real-time data updates</h3><p>Major League Baseball is one of the US’ biggest and oldest-running professional sports leagues. Statcast, a product of MLBAM, offers customers accurate and real-time sports stats. </p><p>You can carry out complicated searches on the Statcast website based on variables like pitch velocity, pitch type, season type, and individual player names. The service delivers accurate data and guides the analysis of baseball games <u>by utilizing </u><b><u>serverless computing</u></b><b>.</b></p><h3>4. BMW event-driven analytics</h3><p>\nGlobal enterprises such as BMW often struggle to preserve and consolidate all of the data they obtain. BMW&#39;s ConnectedDrive backend server handles approximately 1 billion car requests every day. Whether in Germany or Japan, analysts require access to this data for modeling or use cases. </p><p>To address this demand, <a href=\"https://www.techtarget.com/searchcloudcomputing/feature/Learn-from-these-real-world-AWS-serverless-examples\"><u>BMW developed Cloud Data Hub</u></a> - a centralized data lake that collects, orchestrates, and analyzes data. The solution is used by BMW&#39;s worldwide IT organization, as well as data scientists and analysts who create use cases and machine learning models.\nBMW ingests data via <b>AWS Glue</b> and <b>Kinesis Data Firehouse</b>, organizes it with <b>Amazon S3</b> and Glue, and analyzes it using <b>Amazon SageMaker, Athena, and Amazon EMR.</b> Such a multi-tiered account structure implies that each data producer or consumer has their own AWS account – a total of over 500. </p><h3>5. Autodesk&#39;s fast application development and deployment</h3><p>\nAutodesk develops <b>cutting-edge software</b> for the construction, design, and engineering sectors. It recently released a tool called Tailor, which allows businesses to swiftly build custom Autodesk accounts with all of the necessary specifications. </p><p>Autodesk was able to launch Tailor in only two weeks by <a href=\"https://aws.amazon.com/solutions/case-studies/autodesk-serverless/\"><u>utilizing </u><b><u>a serverless architecture</u></b></a><b>, </b>with only two FTEs accountable for the solution. The company quickly achieved its aims of saving time, lowering costs, and enhancing security by building Tailor on the <b>AWS serverless platform.</b></p><p>Before Tailor, the cost of provisioning an account was around $500 in staff time. With Tailor, it&#39;s around $6 per account, meaning Autodesk can generate almost 10 times as many accounts for the same cost. AWS Lambda and a <b>serverless design reduce the operational costs of installing security updates and maintaining configuration management of the servers</b> too, leading to other cost savings. </p><h3>6. Dynamic and responsive Slack chatbots</h3><p>\nServerless works well for single-function applications such as chatbots that receive many requests of various complexity. Since chatbot user demands are unexpected, allocating a static server to them may result in underused bandwidth or a capacity crisis. As a result, Slack employs a <b>serverless, cloud-based architecture based on AWS Lambda.</b></p><p><a href=\"https://thorntech.com/serverless-slack-chatbot/\"><u>Thorn Technologies</u></a> shared an interesting example of a serverless Slack chatbot the company developed for easier settling up of team lunches. The team used a spreadsheet and updated it manually. But this approach turned out to be error-prone and unscalable, so the team developed the &quot;iowe&quot; chatbot that adds a Slack slash command to the virtual chip system. </p><h3>7. Netflix&#39;s scalable on-demand media delivery</h3><p>Netflix has long advocated for <b>serverless computing.</b> The company has been using serverless from 2017 and prior, building a platform capable of handling thousands of modifications every day. The <b>serverless architecture</b> at the heart of <a href=\"https://dashbird.io/blog/serverless-case-study-netflix/\"><u>Netflix&#39;s unique Dynamic Scripting Platform</u></a> handles real platform modifications, provisioning, and end-user delivery.</p><p>Publishers submit hundreds of files to Netflix every day. Each file needs to be encoded and categorized before being broadcast to the consumer. When files are uploaded to S3, Amazon initiates an event calling an <b>AWS Lambda function</b>, which breaks the movie into 5-minute pieces encoded into the 60 parallel streams required by Netflix. Once the last segment of the video gets analyzed, it’s aggregated and disseminated using a set of rules and triggers.</p><p>Netflix also makes use of AWS Lambda for its backup mechanism and to ensure that every single instance is built and configured in compliance with the system&#39;s rules and regulations. </p><h3>8. IDEXX&#39;s data-driven clinical decision-making </h3><p>IDEXX is a global corporation that produces animal husbandry, water, and dairy-related products. <a href=\"https://cloud.google.com/customers/idexx-laboratories\"><u>VetConnect PLUS</u></a>, the company&#39;s latest solution, was launched using <b>Google serverless technologies.</b> It retrieves diagnostic summaries from over 1 billion test results across 30,000 veterinary offices globally. The product can hold 30 TB of data and save up to $500,000 in annual IT expenditures because of the serverless design.</p><p>IDEXX also aims to consolidate data collected across its offerings and mine it for insights. <a href=\"https://aws.amazon.com/solutions/case-studies/idexx/\"><u>AWS lets the company iterate</u></a> on its data-lake architecture to find the best solution for analyzing massive data volumes: over 250 million pets, 6 billion invoice items, and 600 million medications on file.</p><h2>How do you get started with serverless?</h2><p>What are the key tools that help teams put together <b>a smoothly running serverless application?</b></p><p><b>Serverless framework</b></p><p>The framework brings a standard abstraction layer to <b>developing serverless solutions</b> on top of major cloud service providers. It comes with additional CLI tools to enhance the developer experience like monitoring, secrets management, testing tools, and more. </p><p><b>Serverless offerings from the top three cloud providers</b></p><ul><li><p><a href=\"https://aws.amazon.com/lambda/\"><u>Amazon Web Services (AWS) Lambda</u></a> — The most well-known service for building serverless apps.</p></li><li><p>Google Cloud Platform — Look for <a href=\"https://cloud.google.com/functions/\"><u>Cloud Functions</u></a> and <a href=\"https://cloud.google.com/run/\"><u>Cloud Run</u></a>.</p></li><li><p><a href=\"https://azure.microsoft.com/en-us/services/functions/\"><u>Microsoft Azure Functions</u></a></p></li><li><p><a href=\"https://workers.cloudflare.com/\"><u>Cloudflare Workers</u></a></p></li></ul><p>You can also go for open-source, self-hosted solutions:</p><ul><li><p><a href=\"https://kubeless.io/\"><u>Kubeless</u></a></p></li><li><p><a href=\"https://www.openfaas.com/\"><u>OpenFaaS</u></a></p></li><li><p><a href=\"https://openwhisk.apache.org/\"><u>Apache OpenWhisk</u></a></p></li></ul><h2>Wrap up</h2><p>Serverless is evolving at a breakneck speed, with cloud providers regularly launching new products and addressing new use cases. The main issue around this approach is the ability to deliver full-scale, multi-function systems using this technique. Trying to orchestrate the atomic deployment of every element of such complicated meshes is a real DevOps challenge.</p><p><b>Serverless architectures</b> are ideal for creating lightweight, flexible apps that you can swiftly scale or upgrade. If reducing your go-to-market time matters to you, serverless is a good choice. The same goes for projects that demand lots of computing power in a short period of time, with peak periods alternating with calmer periods. Examples include data integration pipelines and machine learning model training. Stateless operations like email senders and push notification agents are a great use case for serverless as well. </p><p>At Rumble Fish, we’re fluent in AWS Cloud tools and know how to build serverless products from scratch. See the scope of our AWS expertise <a href=\"https://www.rumblefish.dev/services/aws-cloud-solutions/\"><u>here</u></a>.</p><p>\n</p>","timeToRead":10,"shortContent":"<p>Why should you care about serverless architecture when the industry is buzzing with new approaches all the time? There are a couple of reasons why the serverless framework is a serious disruptor in software development. Serverless quickly delivers direct business value.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"serverless-architecture.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/serverless_architecture_ab3cfbc3ef.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"46","attributes":{"title":"How DeFi Protects Users And Fosters Transparency ","slug":"how-defi-protects-users-and-fosters-transparency","pubDate":"2023-01-27","content":"<p>Decentralized finance (DeFi) is undergoing constant evolution triggered by dynamic changes in global economies, new regulations, and changes in the technological landscape. Current financial regulations were crafted based on the idea of separate financial jurisdictions, so DeFi’s borderless transaction capabilities present a challenge to this type of regulation.</p><p>Many businesses and consumers who assess <b>DeFi products</b> are worried about who would investigate a financial crime that happened across borders, protocols, and DeFi apps. What would enforcing the regulations look like in this context? These issues arise together with other concerns around system stability, energy requirements and carbon footprint, system upgrades or maintenance, and possible hardware failures.</p><p>\nAdd to those recent PR fiascos like<b> the collapse of FTX</b>, and you can see why many start doubting whether DeFi and blockchain have a solid place in the future of financial services.  Despite the FTX story, <b>DeFi has a bright future ahead of it</b>. We’re seeing several exciting initiatives taking place in the blockchain world, with work carried out around digital ledgers, <b>new blockchain solutions</b> for pricing carbon emissions, and the rapidly expanding world of Web 3.0. This makes <b>blockchain and its DeFi applications</b> likely to become even stronger. </p><p>Keep reading to learn more about DeFi’s advantages over Centralized Finance and why its future is brighter than you may expect.</p><h2>What does Decentralized Finance (DeFi) do exactly?</h2><p><b>Decentralized finance (DeFi)</b> refers to a cluster of applications, services, and approaches that aim to replicate certain functions of the traditional financial system in an open, decentralized, permissionless, and autonomous way, based on blockchain. As any distributed ledger technology (DLT)-based application, DeFi promises to offer efficiencies driven by automation and disintermediation coming from blockchain and smart contracts. At the same time, DeFi gives rise to several risks for markets and their participants and calls into question the actuality of the current financial regulations.</p><p>An increasing number of investors are looking for opportunities that bring high returns, leading to an increase in the popularity of crypto-assets. The growing application of DeFi and its increasing interconnectedness with traditional markets presents an urgent challenge for policymakers seeking to maximize DeFi’s potential efficiencies while managing risks. </p><p>According to OECD, stablecoins issued by the largest issuers exceeded <a href=\"https://www.oecd.org/daf/fin/financial-markets/Why-Decentralised-Finance-DeFi-Matters-and-the-Policy-Implications.pdf\"><u>$150 billion</u></a> at the end of 2021. This is a nearly 500% increase over the last year. During the same period, <b>DeFi applications</b> recorded a 50-fold increase as well. This trend reflects the rise of stablecoins in <b>DeFi protocol</b>s employed by institutional investors interested in these markets for fear of missing out.</p><p>DeFi is growing dynamically because it offers advantages to both users and the market as a whole. It can improve liquidity, mitigate fraud risk, and increase the security of crypto assets over time. The risks it presents are comparable to ones associated with more traditional financial structures. For example, inflation is not an issue for DeFi, unlike in more conventional financial systems. </p><p>Control over <b>DeFi applications</b> is also distributed among network participants rather than centralized with a central authority - what we call the Centralized Finance (CeFi) model. In fact, the <b>FTX exchange collapse</b> highlights just how important it is for cryptocurrencies to remain decentralized to protect user funds from theft or other malicious activity. DeFi needs to rely on a more secure financial system if users and businesses want to face fewer incidents like that in the future.</p><h2>Why centralization is a weakness</h2><p>Over the past year, we have seen the downfall of FTX, Celsius, BlockFi, and Voyager Digital. These were all centralized exchanges (CEXs) or centralized finance (CeFi) platforms. You can probably tell where we’re going with this - the common denominator is the centralized nature of these solutions. </p><p>In both cases, operations are overseen by a central governing body. Some users consider CEXs almost as banks - they enable coin deposits and offer loans and a host of other financial services. Though CEXs are very friendly to newcomers and have high liquidity, they faced a lot of criticism in the past as going against the true spirit of crypto.</p><p><b>Cryptocurrency-enabled decentralized finance (DeFi) projects</b> are designed to preserve the perks that were introduced by crypto-enabled technologies. Such benefits are the permissionless nature of these applications, fee elimination, widespread access, operational transparency, and self-sovereignty over assets. </p><p>As a result of the FTX fallout, DeFi saw a growth spurt as users moved their crypto assets to DeFi solutions. Volumes on decentralized exchanges were up <a href=\"https://www.bloomberg.com/news/articles/2022-11-18/billions-of-dollars-flee-ftx-woe-to-crypto-s-decentralized-roots\"><u>by almost 11%</u></a> that month. An <a href=\"https://www.bloomberg.com/opinion/articles/2022-11-09/ftx-s-unraveling-may-allow-defi-to-grow\"><u>opinion piece in Bloomberg</u></a> speculates that FTX’s collapse may in fact cause DeFi to grow in the short term, as the event will tighten the need for regulation while boosting longer-term interest from venture capitalists.</p><h2>DeFi needs to repair its industry reputation</h2><p>The value of tokens locked within <b>DeFi-related smart contracts</b> (total value locked or TVL) reached around <a href=\"https://defillama.com/\"><u>$180 billion in November 2021</u></a> from next to zero just a few months before, as investors got attracted to opportunities. This was primarily thanks to the fabulous annualized yield many <b>DeFi projects</b> offered. Another aspect was quick monetization via the early listing of tokens at the token generation event (TGE).</p><p>By the middle of 2022, things started to slow down. Popular projects such as Celsius Networks have struggled to maintain their initial momentum as regulatory uncertainty slowed down adoption by big-name partners. Tornado Cash, a <b>decentralized finance application</b> that processed anonymous financial transactions for around $7 billion in illegal activities, was sanctioned by US authorities for providing a platform for money laundering.</p><p>The cryptocurrency industry has since experienced a sharp decline in public interest and investment. Investor attention has shifted to other new hot topics, such as <b>decentralized autonomous organizations (DAOs)</b> and <b>Web3 technology</b>.</p><p>While many <b>DeFi projects</b> may fail or be abandoned, others will stand the storm and emerge as legitimate industry leaders. MakerDAO, Uniswap, and Aave still reach billion-dollar market capitalizations and are today positioned to become the backbone of the financial services industry of the future. </p><p>Many of these ventures are aware of the industry’s reputation problem as well as the perceived loss of a sense of purpose, so they’re busy working to find the next wave that will drive growth and restore legitimacy.</p><h2>Blockchain has a bright future ahead of it</h2><p>Despite the collapse of FTX, <b>blockchain technology will continue to thrive</b>. There are several initiatives taking place in the blockchain world, including <b>new blockchain solutions for pricing carbon emissions and Web3</b>. The failure of FTX underscores the need for more severe regulation in the cryptocurrency sector to ensure investor safety and encourage expansion. Transparency is essential to building trust, so the industry needs to do a better job of providing it if it hopes to attract more traditional investors.</p><p></p>","timeToRead":6,"shortContent":"<p>Decentralized finance (DeFi) is undergoing constant evolution triggered by dynamic changes in global economies, new regulations, and changes in the technological landscape. Current financial regulations were crafted based on the idea of separate financial jurisdictions, so DeFi’s borderless transaction capabilities present a challenge to this type of regulation.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"20230130_101606_0000.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/20230130_101606_0000_98a6a3144c.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"},{"name":"FinTech"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"45","attributes":{"title":"What Is AWS Serverless Development?","slug":"what-is-aws-serverless-development","pubDate":"2023-01-19","content":"<p>A serverless architecture opens the door for IT teams to build and run applications and services without having to manage any of the underlying infrastructure. Sounds like a dream, doesn’t it? </p><p>Serverless computing lets developers focus on the core product instead of worrying about managing and operating servers or runtimes, either in the cloud or on-premises. This reduced overhead allows them to reclaim time and energy they can invest in developing great products that scale in a reliable way.</p><p>Naturally, the largest public cloud provider Amazon Web Services (AWS) has a bunch of offerings addressing the serverless computing demands. What are they and how to use them? Here’s an in-depth guide to AWS serverless development.</p><h2><b>Before we get started: what does “serverless architecture” mean?</b></h2><p>Serverless refers to a broad range of technologies that prioritize scalability. Serverless applications can be developed with cloud-based services that scale automatically and are maintained by third-party vendors. </p><p>While serverless architectures seem like a significant change for some developers, they don’t have to become a binary choice. Serverless technologies can easily complement traditional application models. For many developers, their first serverless application augments or integrates with a traditional application.</p><h2><b>Why is serverless development on the rise?</b></h2><p>Many engineers face the challenge of producing valuable output from data. The process of creating this output, which involves processing data, is called business logic. Traditional (non-serverless) applications require that developers prepare several generic, tedious tasks before they can start creating business logic: provisioning databases and servers, setting up backup and restore systems, and so on. Serverless technologies, on the other hand, help to solve these challenges by abstracting away many such repetitive tasks related to setting up infrastructure. </p><p>As applications grow, increasing levels of traffic may cause scalability challenges. Solving these challenges can be costly because of additional architecture or personnel needs. Serverless technologies address this challenge by scaling automatically as needed to meet increasing demand. They often do so horizontally rather than vertically.</p><p>Applications that rely on traditional infrastructure often required developers to overprovision them - leaving additional capacity sitting idle. With serverless technologies, teams pay only for the resources their application consumes. The horizontal scaling model means that applications can scale up and down with demand, making serverless a cost-effective model for applications that experience variable levels of traffic.</p><h2><b>A serverless use case</b></h2><p>A common use of serverless technologies is connecting features of two or more applications together. For instance, a team can quickly develop endpoints to operate inbound webhooks, run business logic on the webhook payload, and output the result to a different service. </p><p>A good example of this is an application that uses GitHub’s webhook integration capability to notify people about changes via Slack - for example, when a repository gets a new star. </p><p>If developers decide to build this application using a traditional technology stack, they must provision a server to receive the inbound webhook. To do that, they need to raise a ticket with operations and justify its existence. The team needs to configure the server with enough spare capacity to handle traffic spikes or get replicated using a load balancer. Also, it needs access to the public internet with additional authorization for the inbound GitHub webhook.</p><p>But that’s not the end of it. The operating system, runtime, and security updates also need to be maintained with regular patching, and security updates. </p><p>A serverless implementation of such an application means that you no longer have to worry about as many of these traditional stack operations. You can start directly with the business logic, and deploy it into your public cloud account with a single command. </p><p>Every major public cloud provider offers many tools to streamline the process - such as AWS Lambda functions, Azure Functions, and Google Cloud Functions.</p><h2><b>What is AWS serverless development?</b></h2><p>The biggest public cloud provider AWS provides several solutions for running code, managing data, and integrating applications without forcing developers to manage the underlying server infrastructure. Such serverless technologies eliminate infrastructure management tasks like capacity provisioning, patching, or updating. </p><p>AWS offers a variety of serverless computing frameworks, solutions, and serverless functions to simplify the development and deployment of serverless apps:</p><ul><li><p><b>AWS Lambda</b> - this event-driven compute service is natively integrated with over 200 AWS services and SaaS applications. A serverless application includes one or more AWS Lambda functions, one or more event sources, and other resources such as APIs, databases, and event source mappings.</p></li><li><p><b>AWS Serverless Application Model (AWS SAM)</b> - an open-source serverless framework for building serverless apps. It offers simple syntax to express functions, APIs, databases, and event source mappings. </p></li><li><p><b>AWS Cloud Development Kit (AWS CDK)</b> - an open-source software development framework that lets you define your cloud application resources using familiar programming languages. </p></li><li><p><b>Serverless Framework</b> - it consists of an open-source CLI and a hosted dashboard. Together, they deliver full lifecycle management capabilities. </p></li><li><p><b>Chalice</b> - a framework for writing serverless apps in Python that allows you to quickly create and deploy applications that use AWS Lambda functions.</p></li><li><p><b>Arc.codes</b> - a serverless platform that lets devs build massively scalable applications with low code, clear and terse configuration, and zero ceremonies. </p></li><li><p><b>Claudia.js</b> - this handy tool lets you deploy Node.js projects to AWS Lambda and API Gateway.</p></li></ul><h2><b>What is the AWS Serverless Application Model (AWS SAM)?</b></h2><p>AWS Serverless Application Model (AWS SAM) is open-source serverless framework development teams use to build serverless applications on AWS. It consists of the following components: </p><p>AWS SAM template specification - devs use this specification to define the serverless application. It offers developers a simple syntax to describe the functions, APIs, permissions, configurations, and events that all make up a serverless application. </p><p>AWS SAM command line interface (AWS SAM CLI) - it allows developers to quickly create and deploy applications defined by AWS SAM templates. </p><p>Here are some of the things you can do with it:</p><ul><li><p>Verify that AWS SAM template files are written in line with the specification, </p></li><li><p>Invoke Lambda functions locally, </p></li><li><p>Go through debug Lambda functions, </p></li><li><p>Package and deploy serverless applications to the AWS cloud, </p></li></ul><h2><b>Benefits of using AWS SAM</b></h2><p>AWS SAM is a serverless application model that integrates really well with other AWS services. You can easily organize related components and resources and operate on a single stack. </p><p>Another benefit is that AWS SAM lets you share configurations such as memory and timeouts among resources, and deploy all related resources together as a single, versioned entity. </p><p>AWS SAM is an extension of AWS CloudFormation, so you get the reliable deployment capabilities of AWS CloudFormation. You can define your resources by using AWS CloudFormation in your template, which allows you to use the full suite of resources, intrinsic functions, and other features that are available in AWS CloudFormation.</p><p>The solution accelerates the software development process by allowing you to define your architecture as code. It also provides a configuration file that allows you to use and enforce best practices, such as code reviews. In addition, you can enable safe deployments through CodeDeploy and enable tracing by using AWS X-Ray by writing a few lines of code. </p><p>Local debugging and testing are easy with the AWS SAM CLI, which lets you build, test, and debug serverless applications locally. The CLI provides a Lambda-like execution environment locally so you can catch issues upfront by providing parity with what happens in the cloud. </p><p>With toolkits from AWS like the AWS Toolkit for JetBrains, AWS Toolkit for PyCharm, AWS Toolkit for IntelliJ, or AWS Toolkit for Visual Studio Code it is possible to further tighten the feedback loop.</p><p>AWS SAM is deeply integrated with a suite of development tools coming from the cloud provider. The AWS Serverless Application Repository is an online catalog of applications that run on serverless architectures. </p><p>Cloud9 IDE provides authoring, testing, and debugging capabilities to use with AWS SAM–based projects. CodeBuild and CodeDeploy help deploy your code changes, while CodePipeline automates the process of building, testing, and releasing your code into production. You can also use AWS CodeStar to get started with a project structure and deployment pipeline automatically configured for you.</p><h2><b>Summary</b></h2><p>Serverless architecture offers a new way to design and run applications. With serverless architectures, you don&#39;t have to manage infrastructure, provision, scale, and maintain servers to run your applications. </p><p>When you use serverless computing, you can concentrate on building your core product rather than worrying about the overhead involved in operating servers or runtimes - either in the cloud or on-premises. </p>","timeToRead":6,"shortContent":"<p>A serverless architecture opens the door for IT teams to build and run applications and services without having to manage any of the underlying infrastructure. Sounds like a dream, doesn’t it?</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"cloud-native-serverless-computing.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/cloud_native_serverless_computing_1621519667.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"AWS"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"44","attributes":{"title":"Blockchain data analytics in a nutshell","slug":"blockchain-data-analytics-in-a-nutshell","pubDate":"2022-12-13","content":"<p>As blockchain technology is still evolving, with multiple new products, chains, and start-ups established daily, blockchain data analytics is in high demand.<b> Because of how the data on the chain is structured, analyzing what’s been going on within a blockchain platform or dApp might be a tricky and complex challenge. Blockchain analytics requires specific skills and tools and is not easy to perform. To understand it better, let’s dive into the basics of on-chain data analytics.</b></p><p>In today’s post, we look into the complex world of big data mixed with blockchain technology. Here’s the content breakdown:</p><ul><li><p>What is blockchain analytics?</p></li><li><p>Why is blockchain analytics important?</p></li><li><p>What are the challenges of blockchain analytics?</p></li><li><p>How to execute blockchain data analysis?</p></li></ul><h3><b>What is blockchain analytics?</b></h3><p>In the broadest of definitions, data analytics is the art of drawing conclusions from raw information sets. In today’s world, where data is king, it’s hard to imagine a company that wouldn’t take advantage of its power. The same applies to analyzing data stored on the blockchain. <b>Blockchain data analytics</b> is the process of identifying, analyzing, and clustering data stored on the chain. It helps in understanding information about users and also in <b>preventing fraud and money laundering</b> by identifying anomalies. </p><h3><b>Why is blockchain analytics important?</b></h3><p>Amongst many reasons for the benefits of <b>blockchain data analytics</b>, safety is probably the most crucial one. As blockchain becomes more and more popular, a growing number of businesses look into trading and accepting cryptocurrencies as a form of payment and investment. Currently,<a href=\"https://bankrate.com/investing/cryptocurrency-statistics/\"><u>the total value of all existing cryptocurrencies is estimated at around $919 billion</u></a> with<a href=\"https://www.grandviewresearch.com/industry-analysis/crypto-wallet-market-report\"><u>84 million crypto wallets registered</u></a>. And we&#39;ve all heard cautionary tales of Terra, Luna, or FTX and wondered if, and how, those could&#39;ve been prevented. One of the ways of improving the safety of crypto transactions is to use <b>the power of blockchain data analytics</b> to our advantage. Crypto regulatory compliance is another field that benefits from <b>blockchain data analysis </b>greatly. Due to learning how users operate using <b>blockchain financial platforms</b> lawmakers can make accurate decisions when creating much-needed cryptocurrency policies. It&#39;s something that already exists in the world of traditional finance but is still very fresh and uncharted when it comes to blockchain transactions. Analytics is the best way of learning and predicting the shape of future cryptocurrency systems and making them safe and reliable.</p><h4><b>Benefits of blockchain data analytics</b></h4><ul><li><p>fraud protection</p></li><li><p>criminal activities detection</p></li><li><p>crypto risk management</p></li><li><p>money laundering prevention</p></li><li><p>regulatory compliance support</p></li><li><p>a better understanding of users&#39; behavior and needs</p></li><li><p>dApp improvement</p></li></ul><h3><b>What are the challenges of blockchain analytics?</b></h3><p>While the benefits of <b>on-chain data analysis</b> are undeniable, the whole process is difficult and complex. There are a couple of major challenges awaiting blockchain aficionados who wish to make use of the generated data:</p><ol><li><p><b>Lack of standardization:</b> There is no standardized data format or schema for blockchain data, which makes it difficult to analyze and compare across different blockchain networks.</p></li><li><p><b>Data privacy:</b> blockchain networks are designed to be secure and protect user privacy, which can make it challenging to access and analyze data.</p></li><li><p><b>Data volume:</b> blockchain networks generate vast amounts of data, which can make it difficult to manage and analyze efficiently.</p></li><li><p><b>Data quality:</b> on-chain data can be incomplete, inaccurate, or inconsistent, which can impact the accuracy and reliability of the analysis.</p></li><li><p><b>Scalability:</b> blockchain analytics tools and systems must be able to handle large volumes of data and transactions in real time.</p></li><li><p><b>The decentralized nature of the blockchain:</b> Since the blockchain is decentralized, there is no central authority or organization that owns or controls the data, making it difficult to obtain a complete and accurate picture of the network.</p></li><li><p><b>How to execute blockchain data analysis?</b></p><p>Now that we&#39;ve covered the basics, let&#39;s look into the process of analysis itself, taking the <b>Ethereum network</b> as an example. To perform <b>blockchain data analytics</b> on Ethereum, developers use <b>block explorers (</b><a href=\"https://etherscan.io/\"><b><u>Etherscan</u></b></a><b>,</b><a href=\"https://www.etherchain.org/\"><b><u>Etherchain</u></b></a><b>,</b><a href=\"https://ethplorer.io/\"><b><u>Ethplorer</u></b></a><b>, or</b><a href=\"https://blockchair.com/ethereum\"><b><u>Blockchair</u></b></a><b>) </b>which enable insight into real-time data on blocks, miners, accounts, transactions, etc. To be able to use the data efficiently, blockchain engineers need<b> to index and query the data.</b> One of the most popular indexing tools for Ethereum is <b>The Graph</b>, which is a decentralized protocol made for organizing on-chain data. Before using The Graph, development teams used to develop their own proprietary indexing servers, which were resource intensive and broke the basic rules of decentralization.</p><p>The most common open-source tool for Ethereum data analytics is<a href=\"https://ethereum-etl.readthedocs.io/en/latest/\"><u>Ethereum ELT</u></a> which converts the data into more convenient formats, like CSVs. Another popular analytics tool used to convert <b>blockchain data</b> into relational database tables, and then to query it using SQL is<a href=\"https://dune.com/\"><u>Dune Analytics</u></a>. Its most valuable feature is that even a non-technical person after some basic learning should be able to create a custom dashboard allowing them to display the required information.</p><h3><b>The summary</b></h3><p>With the rise of the demand for<b> blockchain analytics</b>, the list of available tools is ever-growing. Keeping up with them is a must if you wish for your blockchain product to succeed. Without analytics, your dApp won&#39;t address the needs and requirements of its users properly. Overall, the goal of <b>blockchain data analytics</b> is to use it to gain insights and make informed decisions about the use of blockchain technology. It&#39;s important for everyone interested in blockchain product development, but also for lawmakers. In order for them to be able to create policies that actually accelerate blockchain business growth, they first need to analyze the data that is available. </p></li></ol><p></p>","timeToRead":5,"shortContent":"<p>Blockchain analytics requires specific skills and tools and is not easy to perform. To understand it better, let’s dive into the basics of on-chain data analytics. As blockchain technology is still evolving, with multiple new products, chains, and start-ups established daily, blockchain data analytics is in high demand.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"blockchain-analytics.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/blockchain_analytics_083d0fc254.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"43","attributes":{"title":"Rumble Fish joins Swiss-Polish Blockchain Association","slug":"rumble-fish-joins-swiss-polish-blockchain-association","pubDate":"2022-12-05","content":"<p>We’re proud to announce that Rumble Fish Software Development joined Swiss-Polish Blockchain Association as a member. Being at the forefront of blockchain technology since the founding of the company, we gladly look for new connections and blockchain-oriented partnerships. </p><p><a href=\"https://swisspolishblockchain.org/\">Swiss-Polish Blockchain Association</a> was founded in 2018. Since then SPBA has been making a great effort to connect entrepreneurs from both countries and create a networking space for blockchain visionaries and enthusiasts alike. Rumble Fish, being a <b>first-choice blockchain development company</b> is a natural fit for the association and its members. Our partnership is set to explore, discuss, and share the latest blockchain trends and policies, and inspire entrepreneurs to delve into business opportunities that blockchain brings. Our knowledge of technology and various blockchain protocols is a valuable asset to the organization, and we’ll gladly act as a mentor and technology advisor for every party involved in SPBA and beyond. </p><p>At Rumble Fish, we specialize in fields like <b>custom blockchain software development</b>, DeFi &amp; Fintech development, or <b>smart contracts development</b>. We’ve been actively involved in the design and development of various blockchain products, and successfully completed projects for both start-ups and established global corporations. Our engineers are known to be t<b>he most talented and skilled blockchain experts</b> one can find due to the constant training and involvement in what’s currently going on in the industry. Being a member of the Swiss-Polish Blockchain Association will allow us to create new connections and be even more active in the European blockchain market. </p><p>Stay tuned for more info on our involvement in Swiss-Polish Blockchain Association.</p>","timeToRead":3,"shortContent":"<p>We’re proud to announce that Rumble Fish Software Development joined Swiss-Polish Blockchain Association as a member. Being at the forefront of blockchain technology since the founding of the company, we gladly look for new connections and blockchain-oriented partnerships. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"important"}}},"image":{"data":{"attributes":{"name":"rumble-fish-joins-_spba.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/rumble_fish_joins_spba_bba1207930.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"42","attributes":{"title":"Web3 in action: 10 best real-life Web3 project examples","slug":"web3-in-action-10-best-real-life-web3-project-examples","pubDate":"2022-11-04","content":"<p>Web3 is amongst the most used IT buzzwords of 2022 for a reason. We’ve entered an era of decentralized digital services that give power back to their users, are permissionless and trustless, and use native payment methods. To understand the concept of Web3 better, let’s look at the products that embrace its core principles in the best way possible. </p><h2>What is Web3 and how is it different from its previous iterations?</h2><p>The <b>concept of Web3</b>, although might seem complex, is not that difficult to grasp when we look at it through the lens of its evolution. When we first started using the World Wide Web, it was mainly static sites owned by companies and/or government agencies. It didn’t really allow any interaction between its users, and it wasn’t easy for an average Joe to publish their own content there; therefore we know this Web1 era of the Internet as read-only. </p><p>Then, social media entered the picture and changed the way we used the WWW. Before that, we could go online and read whatever content was published there by publishers who could afford servers, and the whole infrastructure and that was mostly huge corporations. With the emergence of Web2 we could now become not only the readers but also the creators - publish our own videos on YouTube, thoughts and inspirational images on Tumblr, or personal profiles on MySpace. Internet forums also became a huge thing. But while users could now create and publish their own content on those platforms, they didn’t own them and rarely could benefit from their monetization.</p><p>That’s where <b>Web3 makes a difference</b>. Taking advantage of blockchain technology, Web3 tries to give ownership back to people. But it’s not its only principle. According to <a href=\"https://ethereum.org/en/web3/\"><u>Ethereum.org</u></a>, the 4 core ideas of Web3 are:</p><ol><li><p><b>decentralization </b>(meaning that the internet and its products should be controlled and owned by its users and not Big Tech companies)</p></li><li><p><b>cryptocurrency-first</b> (instead of relying on traditional banking, Web3 users use native payments to spend, send, and exchange money)</p></li><li><p><b>trustlessness </b>(instead of relying on trust for the third party to fulfill their responsibility towards the users, it operates on incentives and economic mechanisms)</p></li></ol><p>The tweet below, written in 2020, perfectly sums up the differences between Webs 1-3. </p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/image_17_41daace549.png\" alt=\"image_17_.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_image_17_41daace549.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_image_17_41daace549.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_image_17_41daace549.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_image_17_41daace549.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p><a href=\"https://twitter.com/himgajria/status/1266415636789334016\"><u>Source</u></a></p><h2>10 Web3 products to watch in 2023 and beyond</h2><p>Amongst many projects that could be described as <b>Web3 projects</b>, there are a couple that stand out due to the originality of their concept, or the amount of public attention they received. Let’s look at 10 of them.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Web3_application_areas_1_52aa7d36d8.png\" alt=\"Web3_application_areas__1_.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_Web3_application_areas_1_52aa7d36d8.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Web3_application_areas_1_52aa7d36d8.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Web3_application_areas_1_52aa7d36d8.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Web3_application_areas_1_52aa7d36d8.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><h3>Ocean Protocol: turn your data into an asset</h3><p>Ocean Protocol was built on the Ethereum chain and its main purpose is to facilitate data exchange among businesses and individuals. The protocol gives people control over their own data by enabling them to monetize it by turning it into an asset. Taking advantage of blockchain technology and <b>Web3 principles</b>, Ocean Protocol has been awarded the Technology Pioneer title by the World Economic Forum in 2021.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/oceanprotocol_99524cfcc2.JPG\" alt=\"oceanprotocol.JPG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_oceanprotocol_99524cfcc2.JPG 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_oceanprotocol_99524cfcc2.JPG 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_oceanprotocol_99524cfcc2.JPG 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_oceanprotocol_99524cfcc2.JPG 227w,\" sizes=\"100vw\" width=\"1000px\"></p><h3>Polkadot: built to enable Web3 development</h3><p>Another great example of a <b>Web3 project</b> is the Polkadot network. It enables multiple blockchains to seamlessly talk to each other in order to make them interoperable. This growing ecosystem of blockchains is a perfect environment for <b>Web3 app development</b>, where developers don’t have to worry about security as Polkadot introduced “shared security” which is a plug-and-play safety mechanism. Overall, the Polkadot network is a great enabler of broader <b>blockchain and Web3 development</b> adoption.</p><h3>Harmony: a perfect balance of security, scalability, and decentralization</h3><p>Blockchain technology although very powerful and future-proof has 3 main challenges to overcome, which are referred to as <b><u>T</u></b><a href=\"https://medium.com/certik/the-blockchain-trilemma-decentralized-scalable-and-secure-e9d8c41a87b3\"><b><u>he Blockchain Trilemma</u></b></a>. The term, coined by  Vitalik Buterin - one of the Ethereum founders, addresses the biggest issues that blockchain developers face when <b>creating Web3 apps</b>. And those are that the blockchains should be scalable, decentralized, and secure. Harmony has been built to address all 3 of those challenges. It’s a great <b>example of a Web3 project</b> that uses proof of stake and decentralized randomness for <a href=\"https://medium.com/@cindy_50972/the-state-of-sharding-ffab3a2632e5\"><u>state sharding</u></a>.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/harmony_cfbc8dc4b7.JPG\" alt=\"harmony.JPG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_harmony_cfbc8dc4b7.JPG 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_harmony_cfbc8dc4b7.JPG 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_harmony_cfbc8dc4b7.JPG 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_harmony_cfbc8dc4b7.JPG 245w,\" sizes=\"100vw\" width=\"1000px\"></p><h3>Axie Infinity: where gaming meets Web3 principles</h3><p>Moving on to <b>examples of Web3 use cases in entertainment</b>, let’s take a closer look at Axie Infinity. The game is built on the Ronin Network, which is a sidechain of the Ethereum blockchain, and its main purpose is to collect and battle small creatures called Axies. The whole virtual world of Axe Infinity is known for its in-game NFT economy. Users can trade their Axies, buy virtual land within the game metaverse, and purchase other in-game assets as NFTs. </p><h3>Calvaria: a play-to-earn video game</h3><p>Staying in the gaming business, let’s move on to another <b>Web3 use case</b>. Currently in phase 3 of pre-sale, Calvaria is a strong contender for the blockchain gaming space champion. Calvaria is a play-to-earn (P2E) game that is said to focus more on the gaming aspect itself, while other <b>Web3 games</b> on the market right now are often criticized for focusing too much on the cryptocurrency factor. The hype around Calvaria might be related to its excellent story-like theme. Currently, it reached a milestone of $10 million capital raise. It’s worth keeping an eye on this exciting <b>Web3 project</b>.</p><h3>API3: introducing decentralized APIs</h3><p>API3 is a <b>Web3 project</b> aiming to develop a blockchain-native, decentralized version of APIs. The API3 Alliance works towards making <b>Web3 solutions</b> easier to access for traditional businesses by introducing Web3 APIs. API3 is the native currency for the network acting as a governance token that serves its DAO community to manage the project. </p><h3>Livepeer: a decentralized network built for cost-effective streaming</h3><p>Livepeer is an answer to a growing demand for video infrastructure better scalability and cost-effectiveness. The solution is a blockchain-based protocol that aims to deliver a broadcasting service that is cheaper, more scalable, and more decentralized than any of the traditional, existing platforms. The network is built for 3 types of users: developers who wish to build apps with live or on-demand video functionality, users who consume video content, and broadcasters (such as YouTube or Twitch) who have enormous audiences and very high streaming and infrastructure costs and need to reduce both of those.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/livepeer_8f28d7f643.JPG\" alt=\"livepeer.JPG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_livepeer_8f28d7f643.JPG 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_livepeer_8f28d7f643.JPG 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_livepeer_8f28d7f643.JPG 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_livepeer_8f28d7f643.JPG 245w,\" sizes=\"100vw\" width=\"1000px\"></p><h3>IMPT.io: a Web3 pro-sustainability project</h3><p>IMPT.io is a blockchain-based carbon offset affiliation program that helps individuals and businesses offset their carbon footprint easily and safely. IMPT.io curates a list of impactful environmental projects from all around the world and connects them with users. Within the platform, users acquire carbon credits while online shopping. The project has gotten approvals from over 10k companies to help them in their carbon emission offset journey to make the blockchain market as environmentally friendly as possible.</p><h3>Theta: Web3 infrastructure for entertainment</h3><p>Theta aims to be the go-to blockchain for the Web3 versions of streaming and entertainment services such as Netflix, YouTube, Ticketmaster, or even Google. Its ecosystem consists of THETA tokens, TFUEL tokens, and a Theta wallet. In December of 2022 its next evolution of blockchain, called Theta Metachain, is supposed to go live. It’s certainly a project with lots of potential as its creators are the perfect mix of the traditional media and entertainment world and <b>Web3 development experts</b>. </p><h3>Basic Attention Token: Web3 for digital advertisment</h3><p>Another ambitious and creative way of utilizing <b>Web3 principles</b> is BAT (Basic Attention Token) which is a token of the Brave Ads ecosystem. The concept idea behind it is that it tokenizes user attention, connecting publishers with advertisers while eliminating the intermediaries. Content viewers can monetize their attention by viewing ads and getting BAT rewards. The publisher earns their share of the revenue, while advertisers get what they need the most which is users’ attention. Brilliant!</p><h2>Web3 development is the future </h2><p>As the examples above show, there is a huge potential in using <b>Web3 solutions</b> and principles in digital product development. The future of the internet is user-centric and focused on ownership and privacy. And there is no better technology to apply for that purpose than <b>Web3-based technology</b>. </p><p>If you’re not sure whether or not your industry could benefit from <b>Web3 application</b>, contact us to discuss your concept in more detail. It could be done in a form of a discovery workshop where we jointly establish your business goals with the roadmap of how to reach them, define the <b>Web3 technology stack</b>, and guide you all the way up to the successful product launch. A discovery workshop is the most efficient way to verify your business idea, especially in a situation where there is no footprint of how to operate. And that’s the current state of affairs when it comes to <b>Web3 product development</b>. Having the knowledge of tech stack, tools, and all of the tips and tricks of creating decentralized products, Rumble Fish is your perfect IT partner for any Web3-related project. If you have a <b>Web3 product concept</b> in mind, don’t hesitate <a href=\"http://hello@rumblefish.dev\"><u>to let us know</u></a>.</p>","timeToRead":6,"shortContent":"<p>Web3 is amongst the most used IT buzzwords of 2022 for a reason. We’ve entered an era of decentralized digital services that give power back to their users, are permissionless and trustless, and use native payment methods. To understand the concept of Web3 better, let’s look at the products that embrace its core principles in the best way possible.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"shubham-dhage-Bz9mvCmlBjs-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/shubham_dhage_Bz9mv_Cml_Bjs_unsplash_4e21b72d58.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"41","attributes":{"title":"What do we use Apache Flink/Kinesis at Rumble Fish for?","slug":"what-do-we-use-apache-flink-kinesis-at-rumble-fish-for","pubDate":"2022-10-24","content":"<p>Software developers are often faced with the challenging task of managing large datasets in real-time. Modern apps often require some serious big data processing and many of them (like Spotify or Zalando, for example) use Apache Flink to get the job done. Flink is an excellent choice for any event-driven application, due to its extensive feature set that can support stream and batch processing, event-time processing, or even more sophisticated state management. In today’s article, we’ll explain how we use Apache Flink (mixed with Amazon Kinesis Analytics) at Rumble Fish, and showcase a relevant use case with the code lines so you can start using Flink too. Let’s jump right in!</p><p>In short, at Rumble Fish we use Apache Flink to process large amount of real-time data and aggregate it in appropriate ways, depending on the need. One of them is to process chunks of data in a tumbling time window. Next, this data is aggregated by, for example, taking the largest value of a given field from a given piece of data. Thanks to this procedure <b>we reduce a potentially huge stream of data to a stream that has defined throughput and can be processed by slower components</b> (like updating the database/frontend, etc).</p><p>Another nice feature unlocked by Flink is that data processing can be stateful, without the need for an external database. Thanks to this, <b>we can easily process information in the context of its previous state</b>. Without this feature, we would have to call an external database for each processed record and this would definitely not be fast enough for the datasets we work with.</p><p>Finally, Apache Flink provides developers with a large number of connectors, such as Kafka, FileSystem, Kinesis, etc. At Rumble Fish, we use an AWS service, Kinesis Analytics. The Kinesis connector gives us access to Amazon Kinesis Data Streams which allows us to further simplify our real-time data processing work. It is easy to use, as we can create an Amazon Kinesis Stream in seconds, and the service is highly reliable. Kinesis Analytics offers a standard way of deploying Flink applications at scale. </p><h2><b>What systems is Apache Flink a good choice for?</b></h2><h3><b>Handling massive amounts of data made simple</b></h3><p>Apache Flink allows us to process large amounts of data while offering high fault tolerance. The secret sauce here is the consistent recording of the application state, unlocked by generating consistent snapshots of a distributed data stream and operator state. In the event of a system failure, Apache Flink automatically recovers data from these snapshots.</p><h3><b>Real-time processing unlocked</b></h3><p>Flink also supports real-time processing of bounded or unbounded data streams. We can freely aggregate the data, process it, or divide it into appropriate time windows. How does it work in a real-life scenario? Let’s say we need to design a lottery with a set number of prizes, in which the player has 1o seconds to redeem the reward and after that time window, the next prize is shown. Apache Flink is an ideal solution for this use case. All you need to do is create some kind of data stream accepting all the prizes, then create a 10-second tumbling window and draw a random (pseudo-random) coupon associated with a particular user and a particular prize. Done!</p><h3><b>Statefulness achieved</b></h3><p>Flink also allows us to hold the state without using a database, so we can make decisions in real-time based on historic data. Let&#39;s go back to our lottery use case. We want to check whether the user who has placed a lottery ticket for an auction has any coupons at all. Below is an example illustrating state holding for the described situation:</p><p>{{codeSnippet,JAVA 1}}</p><p>In the example above, we’ve checked whether the user who wants to click on a lottery has redeemed coupons. Next, we’ve updated the status by reducing the number of coupons and sent the action for further processing.</p><h2><b>Benefits of using AWS Kinesis Analytics</b></h2><p>As mentioned earlier Apache Flink has a wide variety of connectors. Today, we focus on the tool provided by Amazon - AWS Kinesis. One drawback of Apache Flink is that it doesn’t have an autoscaling feature. And this is where Kinesis comes in handy. It’s a serverless, fully managed service that allows users to process data continuously in real-time. What’s more, it enables the autoscaling of computing resources and volumes of incoming data to avoid processing delays.</p><h3><b>How to setup infrastructure for the Kinesis Analytics application?</b></h3><p>Let&#39;s now take a moment to analyze Apache Flink&#39;s connection to AWS Kinesis from the Cloud Formation level. To start, let&#39;s create a file named<i> template.yml</i> where our configuration will be placed and see how our streams are defined.</p><p>{{codeSnippet,YAML1}}</p><p>As we can see the whole procedure is not too complicated and pretty self-explanatory. All we need to do at the beginning is to declare our streams and then define them with the appropriate types and provide basic properties. Next, we define Policy for our streams, we just need to give all of them the same permissions i.e. write and read.</p><p>{{codeSnippet,YAML2}}</p><p>Finally, let’s define the Kinesis Analytics Application, which shouldn’t be more complicated than what we already did above. </p><p>{{codeSnippet,YAML3}}</p><p>As we can see above, the first step was to specify a couple of variables: the type of our application, basic properties such as name, AWS S3 configuration where our Flink application will be stored, and in what format (in our case it was ZIP). At the end, we’ve set the environment variables. And, as the French say: voilà.</p><p>That&#39;s all it takes to make our application work on AWS.</p><h2><b>Our recommendation for the structure of the Flink app</b></h2><p>As we already know, Apache Flink offers multiple connectors, but what if we want to have more than one of them in our application? For example, we’d like to implement Kafka for testing, and Kinesis for production. We can easily do that by configuring two connectors and controlling them with, for example, input arguments of our program. It is enough that both connectors implement the same interface. Below is a code snippet that demonstrates this:</p><p>{{codeSnippet,JAVA2}}</p><p>- starting place of the application</p><p>{{codeSnippet,JAVA3}}</p><p>- common interface</p><p>{{codeSnippet,JAVA4}}</p><p>- Kafka configuration</p><p>For the implementation of this interface for AWS Kinesis, the situation looks very similar. Of course, we need to use another connector. In addition, we will need the names of the predefined streams and basic configuration. You can find all of this in the repository that is linked below.</p><h3><b>Apache Flink in action: the testing</b></h3><p>Now let&#39;s move on to testing our application. We will cover both unit tests and integration tests. It is worth mentioning that Flink provides us with very useful tools for this purpose. All we need to do is to pull the appropriate dependencies into the project and we are done.</p><p>{{codeSnippet,XML1}}</p><h4><b>Unit tests</b></h4><p>Let’s start with unit tests. In our application, we use the so-called <i>KeyedCoProcessFunction</i>. This means that we can separately process events dropping into our application from Kafka or Kinesis. In our case, these are events related to the user (buying coupons, clicking on a lottery) and events related to the lottery itself (launching a specific lottery). In addition, buying coupons is an event that we need to pass on for further processing because we will be choosing a winner based on these coupons.</p><p>Next, we move on to writing the first test, which will throw an exception if the user tries to click on an inactive lottery.</p><p>First of all, we initialize our <i>TestHarness</i>, which came to us with a previously pulled dependency.</p><p>{{codeSnippet,JAVA5}}</p><p>It’s a kind of wrapper for our class that we will test. Then, on such a prepared instance, we can execute processing methods.</p><p>{{codeSnippet,JAVA6}}</p><p>As we can see, before processing the event of clicking on lotteries there is no activation of lotteries and for this reason, we get an exception. But what if we need to check whether the event of clicking on a particular lottery will actually be processed further? This is also possible thanks to our harness. </p><p>{{codeSnippet,JAVA7}}</p><p>So first we activated our lottery, then a particular user bought coupons so that he could click on a particular lottery. Finally, the user clicked on the lottery and this event should be further processed. It was enough to execute the <i>extractOutputValues()</i> method and compare its result with the expected one.</p><h4><b>Integration tests</b></h4><p>Now we swiftly move on to the integration testing. Of course, we can run Kafka as a Docker container and test the whole flow manually, but why should we when Flink provides us with a ready-made mini Cluster on which we can work? Let&#39;s assume that we have already prepared the output events, which in our case is about clicking on a particular lottery. And now we need to draw the winner. This is where the previously mentioned time windows will come in handy.</p><p>{{codeSnippet,JAVA8}}</p><p>The above code is actually the heart of our application. First, we prepared our events for processing, that is, we turned them from Strings into concrete objects and combined them into one <i>ConnectedStream</i>. Then we processed them as described above for unit testing. Next, we created a 10-second time window, and based on the data from this window, we selected the winner using <i>GetWinnerWindowFunction</i>. At the very end, we added our Sink, to which we passed the information about the winner. </p><p>Now let&#39;s see what an integration test for this could look like.  First, let&#39;s create an instance of our Flink cluster and annotate it with <i>@ClassRule</i> to make it run before testing.</p><p>{{codeSnippet,JAVA9}}</p><p>Now we need some test Sink to see who won.</p><p>{{codeSnippet,JAVA10}}</p><p>As you can see, you just need to implement the <i>SinkFunction</i> interface and override the invoke method. The principle is simple, the win information is added to the static list using the invoke method.\nLet&#39;s see our test:</p><p>{{codeSnippet,JAVA11}}</p><p>As a first step, we created our execution environment. Next, we built our input streams using the intuitive<i> fromElements(...)</i> method. Note that our <i>UserClickEvent</i> has a timestamp, based on which we&#39;ll be able to further choose the winner. Then, we executed the static method that created our pipeline and, at the very end, we fired up our environment. After all of those operations, we were able to easily check the data from Sink, pulling it from the static list and comparing it with the expected result.</p><h3><b>Flink checkpointing</b></h3><p>Let&#39;s say that new events flood our application all the time and we have to process them in real-time. What if suddenly for some reason an exception is thrown and our application stops working? What about the events that didn’t have the time to be processed? This is when checkpointing comes to our aid, which provides the application with fault tolerance. </p><p>{{codeSnippet,JAVA12}}</p><p>We’ve activated checkpointing and set the appropriate interval.</p><p>Checkpointing is nothing more than saving our events in some specific place. It could be S3 in the case of AWS, or some file on our local computer. Now at the moment of an exception, the app will recreate the data and start from the place when the application was still running.</p><h2><b>The conclusion</b></h2><p>In this article we’ve shown how to use Apache Flink for real-time data processing, having the lottery application as an example. We’ve also showcased how Flink helps to store state and how to connect and configure various connectors, which definitely makes devs’ work easier. This is of course just a fraction of what Apache Flink is capable of. Those passionate about the subject of Big Data will certainly draw something for themselves from the above text and the case we used as an example. The entire lottery application with tests and infrastructure can be found on <a href=\"https://github.com/rumblefishdev/flink-lottery-app\"><u>Rumble Fish’s Github</u></a>.</p>","timeToRead":10,"shortContent":"<p>Software developers are often faced with the challenging task of managing large datasets in real-time. Modern apps often require some serious big data processing and many of them (like Spotify or Zalando, for example) use Apache Flink to get the job done.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"richard-horvath-cPccYbPrF-A-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/richard_horvath_c_Pcc_Yb_Pr_F_A_unsplash_5770dbb9d3.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"AWS"}],"authors":{"data":[{"attributes":{"Name":"Kamil Serafin","Position":"Software Engineer","Avatar":{"data":{"id":"90","attributes":{"name":"Kamil_Serafin.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Kamil_Serafin_da8bebf509.jpg"}}}}}]}}},{"id":"40","attributes":{"title":"Top 5 software development trends in 2022 ","slug":"top-5-software-development-trends-in-2022","pubDate":"2022-09-01","content":"<p>After a pandemic that fundamentally altered the shape of global society and the war in Ukraine that shook economies worldwide, we find ourselves at an interesting moment in the history of software development. Organizations have come to rely on digital infrastructure, and practically every company that wants to achieve its key business goals needs to invest in some form of software development today.</p><p>To address these needs, software engineers must combine technical skills with an innovative mindset. Luckily, software engineering as a domain is developing in ways that help them do that - and capture business value in the form of software products.</p><p>Where is software development going this year? Which trends are driving it? Keep reading to discover the key trends in software development in 2022.</p><h3>Table of contents:</h3><ol><li><p>Cloud computing expansion</p></li><li><p>API providers are growing</p></li><li><p>Microservice architecture is a go-to</p></li><li><p>Custom middleware is still here</p></li><li><p>Process automation advances</p></li><li><p>Wrap up</p></li></ol><h2>1. Cloud computing expansion</h2><p>COVID-19 caused a massive shift in the business world. Cloud computing technologies were there to support businesses forced to downsize or expand their remote work capabilities. More than <a href=\"https://www.flexera.com/blog/cloud/cloud-computing-trends-2021-state-of-the-cloud-report/\"><u>90% of respondents</u></a> in one survey said that their cloud usage increased due to the pandemic. </p><p>That period also showed how useful the cloud could be when businesses need to downscale. For example, the travel industry took a hit due to decreased activity during the pandemic, and companies using cloud services didn&#39;t need to maintain expensive data centers when teams didn&#39;t need them anymore. Even though global IT spending <a href=\"https://www.sam-solutions.com/blog/software-development-trends/\"><u>decreased in 2020</u></a>, cloud spending grew by more than 6% to a total of over $258 billion that year alone. And the future looks bright for the market.</p><p>As cloud spending continues to increase and <a href=\"https://www.gartner.com/en/newsroom/press-releases/2022-02-09-gartner-says-more-than-half-of-enterprise-it-spending\"><u>overtakes half of all IT spending</u></a>, we will see more and more companies adopt virtualized infrastructures and tooling, which offers a more agile solution to many needs. The idea of cloud-hosted, dynamic virtual machines was powerful, but it was just the first brush stroke on a rapidly evolving canvas. </p><p>PaaS and serverless functions are the next steps in this advancement. We can also see diversification and specialization of solutions happening today - a vertical and horizontal development. Virtualized infrastructure allows innovative actors to develop higher-order solutions in areas such as API hosting and API providers.</p><p>And speaking of APIs…</p><h2>2. API providers are growing</h2><p>State-of-the-art API hosting providers offer a serverless infrastructure hosted on top of the Infrastructure-as-a-Service (IaaS) and Platform-as-a-Service (PaaS) layers. They represent a new level of specialization of that infrastructure, targeted at a certain universe of use cases. </p><p>Modern virtual infrastructure provides a high degree of abstraction, enabling organizations to harness powerful tools with relatively little effort. Using an API in conjunction with code integration support and a web-based management console makes it easy for developers to integrate such tools into their applications. We can see that the age of cloud platforms has paved the way for something new, at least around hosting and providing APIs. </p><h2>3. Microservice architecture is a go-to</h2><p>The shift toward microservice architectures will continue to grow as they become better understood. The amonolithic architecture paradigm clearly didn&#39;t work. It prevented teams from fully capitalizing on the potential inherent in cloud computing, and microservice architectures imply removing a DevOps burden that is definitely far from trivial. </p><p>Microservices act as a process-scaling enabler and a complexity magnifier at the same time. Any innovations that look to encompass new directions in technology - such as APIs as a service, frontend evolution, and custom middleware - will have to account for the complexity of microservice architectures.</p><h2>4. Custom middleware is still here </h2><p>Much of the work in the cloud world today involves integrating existing tools and uniting APIs, which will always require some amount of custom programming at a middleware level. Luckily, automation is here to help developers address this rapidly-changing tooling landscape. Server-side languages such as Rust and frameworks like JHipster are exciting developments in this area.</p><p>Existing solutions like Java, Node.js, and Python (and their related frameworks) work well in the environment and are constantly evolving to help teams face real-world demands. Just as infrastructure-as-a-service continues to be a vital layer in serverless computing, middleware code will be important for the foreseeable future.</p><h2>5. Process automation advances</h2><p>Automating software processes is becoming increasingly important for its ability to package and deliver best practices. In this scene, we can see a clear focus on customized solutions. Every organization has something unique about it, so there is value in distilling what works well for tech giants like Google and Microsoft and capturing it in solutions that work for teams of all sizes and types. </p><p>CI/CD solutions and testing frameworks are good examples of where process automation tools are zeroing in on developer activities. Version control services like GitHub also fall into this category. Process automation will play a crucial part in the future of software.</p><h2>Wrap up</h2><p>Each of the software development trends we described above is a force for change. Together, they paint a compelling picture that promises a new kind of developer experience. While the future direction of software development isn&#39;t clear, there&#39;s one thing we can be sure of: it&#39;s an exciting time to be a software engineer!</p>","timeToRead":5,"shortContent":"<p>After a pandemic that fundamentally altered the shape of global society and the war in Ukraine that shook economies worldwide, we find ourselves at an interesting moment in the history of software development. Organizations have come to rely on digital infrastructure, and practically every company that wants to achieve its key business goals needs to invest in some form of software development today.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"carlos-muza-hpjSkU2UYSU-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/carlos_muza_hpj_Sk_U2_UYSU_unsplash_f66e44e605.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"39","attributes":{"title":"How to speed up software development - top 9 best practices  ","slug":"how-to-speed-up-software-development-top-9-best-practices","pubDate":"2022-08-25","content":"<p>In cutting-edge software development, time is of the essence - the sooner you can showcase your MVP to the world, the better. Development teams are used to deadlines and tight schedules as organizations are pressured to reduce time-to-market and maintain their market share. Unless you have a significant market dominance like Microsoft or Apple, you need to move faster than your competitors. </p><p>Unfortunately, there is a price to pay for overwhelming task loads. Regular burnouts and high turnover rates have become a norm for many software development companies, but this isn&#39;t the way to go. </p><p>In this article, we&#39;re sharing a few tips on how to speed up software development and optimize the overall workflow in a tech company. These simple changes can make a massive difference for your team.</p><h3>Table of contents:</h3><p>What does software development speed depend on?</p><p>How to accelerate the software development process without annoying your dev team</p><ol><li><p>Create a roadmap and stick to it</p></li><li><p>Set your KPIs</p></li><li><p>Minimize scope creep</p></li><li><p>Limit your work in progress</p></li><li><p>Divide the project into smaller components</p></li><li><p>Avoid frequent alterations and implement change management</p></li><li><p>Eliminate technical debt</p></li><li><p>Use automation</p></li><li><p>Expand your team</p></li></ol><p>Wrap up</p><h2>What does software development speed depend on? </h2><p>Estimating the speed of software development is tricky. But there&#39;s one certainty: the process can slow down due to many factors. One of them is the complexity of the project&#39;s technical side, where every developer has to deal with various challenges during the work with complex software architecture, third-party integrations, innovation, and so on. </p><p>Another important factor relates to unclear goals and objectives or unreasonable deadlines (for example, when the estimated time for work completion doesn&#39;t match the actual scope). Structural mismatches and problems within a company may also slow down software production.</p><p>Writing quality code is a time-consuming process. Developers can do it well or fast, but not both. Although deadlines are not going away, cutting corners will only cause issues, in the long run, creating the so-called technical debt. Fixing these errors is difficult and expensive. </p><p>Another common issue that slows software development projects down is mismatched team size. The success of a project depends on the efficiency of internal communication. According to Scrum Guide, finding common ground becomes challenging if there are more than nine people in the team. The optimal team size for most productive cooperation is up to five people. Larger projects can be divided into smaller groups based on project components that each group works on.</p><p>The performance of all members depends on the level of commitment, experience, and skills. When everyone is motivated to succeed and has the skills to complete their tasks, the job will be done faster. Although less-skilled workers may eventually become an important asset to the organization, they will need time to develop their expertise before they can immediately impact the project.</p><p>Now that you know which factors impact software development speed, let&#39;s take a look at what you can do to make your next project blazing fast (and successful).</p><h2>How to accelerate the software development process without annoying your dev team</h2><h3>1. Create a roadmap and stick to it</h3><p>To speed up the development process, your team needs to understand the project requirements thoroughly. If everyone knows what to do, you&#39;re bound to save a lot of time. </p><p>The next step is to meet with the development team and create a project roadmap. This includes choosing the language or framework to lead your technology stack, dividing the project into several parts, and assigning the right team members for each component.</p><h3>2. Set your KPIs</h3><p>Another key task is to set realistic and measurable Key Performance Indicators (KPIs) for your team. It&#39;s not uncommon for developers to work on large projects that have strict deadlines. If a project manager decides to monitor the amount of code written by developers to measure their productivity, prepare for trouble. </p><p>For example, if a developer writes 1000 lines of code in 12 hours and this code doesn&#39;t execute more than a few real operations, productivity is almost nonexistent. </p><p>However, you can monitor speed by measuring performance metrics such as: \nvelocity (value of work completed within a period), \ncycle time (the time it takes to finish a task), \nand work in progress (a measure of pending within a period).</p><h3>3. Minimize scope creep</h3><p>Minimizing scope creep is an effective way to speed up the development process. To do this, break all solutions into smaller phases that allow the more critical elements to be addressed first and the long-term requirements to wait for development. Incremental solutions satisfy stakeholders as quickly as possible without alienating any group.</p><h3>4. Limit your work in progress</h3><p>Some team members can combine multiple tasks, but others might not be that efficient when juggling numerous work items. If you don&#39;t adequately monitor your team&#39;s workload, the number of unfinished tasks will increase, and productivity will drop. </p><p>A simple way to reduce your work in progress is to use a Kanban board, which limits the total number of tasks per column that marks the stage in the process (for example, To do, In Review, Done). This way, your team will clear pending jobs quickly.</p><h3>5. Divide the project into smaller components </h3><p>Planning is important when it comes to building software. A large team of developers can take longer to complete a project than a small team with competent developers. Still, if you need a large team, break them into smaller units and entrust each one with different areas of the project. This will ensure that every unit stays on track and integrates its work at appropriate times. It&#39;s still crucial to meet up regularly and update each other on the progress of every team.</p><p>Consider assigning the most experienced developers to the most complex parts of the project and less experienced ones to simpler tasks to increase efficiency and reduce the overall turnaround time. This will also ensure that everyone on the team can utilize their skills more effectively. </p><p>Have your dependencies clear here - some tasks may need to be completed before others can be started. Make sure high-priority tasks are completed before starting with other low-priority ones.</p><h3>6. Avoid frequent alterations and implement change management</h3><p>Every software project involves three factors: scope, resources, and time. Changing any of these elements will affect the other two. Increase the scope without increasing resources or time, and the development process will slow down. Limit resources without decreasing the scope or time, and you&#39;ll get the same effect. Effectively manage all three factors, to minimize the risk of your product taking longer than expected to complete.</p><p>A large project may require multiple alterations as the work progresses. But too many changes during the development process can significantly affect the project completion time. Sometimes, you may think a small change will have little impact on your work, but it can become a huge mess and cripple the whole system. </p><p>It&#39;s impossible to avoid changes as the work progresses. Documenting all modules, scenarios, and factors before starting the project will reduce the number of changes and accelerate the development process.</p><p>Conducting a Discovery Workshop before taking off with the project will likely reduce the number of changes required when in progress. Learn more about the value of the Discovery Workshop in our report.</p><h3>7. Eliminate technical debt</h3><p>\nTime is a critical factor in the software development process, and engineers sometimes must choose between an ideal solution and a quicker one to meet deadlines. Technical debt - the result of cutting corners - can slow down future work by causing developers to spend extra time correcting errors and flaws. This happens when companies make strategic sacrifices to save time but later realize that doing so causes more problems than it solves. \n \nThe best approach is not to compromise code quality unless there is no alternative. And if you do so, make sure you correct those issues as soon as possible.</p><h3>8. Use automation</h3><p>\n While it is impossible to automate all processes in software development, you can still streamline some parts of the process. You can accelerate the testing phase by automating tests, thus reducing the time spent on development. </p><p>Continuous integration allows developers to automatically merge their changes into a central repository, increasing their productivity. Another way to facilitate communication among team members is by using an automation tool for task management and workflow discussions among team members.</p><h3>9. Expand your team</h3><p>Project complexities and deadlines must align with available human resources. It can be challenging to meet a deadline for some projects when you have a small team at your disposal. The solution is to hire more developers for the project, but the recruitment process takes time and costs a lot of money (we’ve written more about it here), especially if you&#39;re hiring experienced developers. This is why outsourcing makes sense. Software development is a specialized activity that requires skilled human resources, tools, and infrastructure. When you outsource software development work, you can attain high-quality work while focusing on other aspects of your business growth. </p><h2>Wrap up</h2><p>In today&#39;s competitive digital products market, speed is a deciding factor in attracting customers. However, managing development speed is a complex process with no shortcut. We showed you the most effective ways to speed up the software development process that are based on proven industry best practices. Sometimes, your best option is to hire a few more developers to take your project off the ground. Get in touch with us if you&#39;re looking for talented experts available to become part of your team on a short- or long-term basis.</p><p></p>","timeToRead":8,"shortContent":"<p>In cutting-edge software development, time is of the essence - the sooner you can showcase your MVP to the world, the better. Development teams are used to deadlines and tight schedules as organizations are pressured to reduce time-to-market and maintain their market share. Unless you have a significant market dominance like Microsoft or Apple, you need to move faster than your competitors.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"mohammad-rahmani-8qEB0fTe9Vw-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/mohammad_rahmani_8q_EB_0f_Te9_Vw_unsplash_2143834343.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"38","attributes":{"title":"Is mesh infrastructure the future of software development? A case of Quiet","slug":"is-the-serverless-approach-the-future-of-software-development-a-case-of","pubDate":"2022-08-23","content":"<p>HOPE (Hackers On Planet Earth) is a unique event where IT professionals from around the world discuss the current state of the industry and come together to inspire, transform and share their highly innovative ideas. One of the concepts showcased during the last edition of the conference was a project we’re heavily involved in, Quiet - a local-first peer-to-peer communication app presented by its creator Holmes Wilson. What is so groundbreaking about Quiet and why does it matter? Keep on reading to find out!</p><p>Amongst many threats that await Internet users, privacy breaches and giving away personal data to big tech are probably one of the most worrying. We’ve basically agreed to sell our sensitive information to GAFAM (Google, Amazon, Facebook, Apple, Microsoft) in exchange for their services - Messenger, Whatsapp, Gmail, Instagram, etc. And they can easily disconnect the users from the service, while still owning and storing their data. The power imbalance is undeniable here. Luckily for us, human rights activists and fans of software freedom are actively looking for ways of giving power back to people. One of the organizations that strive to do that is <a href=\"https://www.fightforthefuture.org/\"><u>Fight for the Future</u></a>, a collective of artists, engineers, and technologists that campaign for a future where technology is empowering humans, not oppressing them. Fight for the Future co-founder, <a href=\"https://twitter.com/holmesworcester\"><u>Holmes Wilson</u></a>, is now building a <b>peer-to-peer communication app</b> that people can use without giving ANY of their personal info away. And we are helping him along the way!</p><h2><b>What’s the issue with the communicators we use right now?</b></h2><p>There are two main problems with messengers we use on a daily basis - firstly, there is a huge risk of potential breaches, phishing attacks, and data leaks. When privacy is of the essence, using big tech apps is simply not a way to go. Secondly, those apps all rely on servers which is a problem on its own. Servers belong to corporations, so you depend on a third-party vendor not only for the quality of the service but also entrust them not to censor you in any way. Server dependence is obviously a major threat to the <b>freedom of software</b>. As Wilson pointed out during his HOPE2022 presentation, in areas that don’t depend on servers, like web browsers, media players, or document readers we don’t see high prices, almost any advertising, or massive data collection. And in areas that rely on servers heavily, like social media, e-commerce, or collaboration tools we observe high pricing, very few privacy protections, and an unhealthy amount of advertisement.</p><p>Two of the world’s most popular communication apps as of May 2022 were <a href=\"https://www.similarweb.com/corp/blog/research/market-research/worldwide-messaging-apps/\"><u>WhatsApp (31%) and Messenger (7%)</u></a> both owned by Meta (previously Facebook). There are also other communicators that gained recognition recently and were praised for their superior privacy properties, but when we look closer, we see the holes in their performance. For example, although Signal tried to eliminate server dependency, it still remains powerful, and to use the app you need to log in with your phone number which is a potential data breach risk. In a perfect world, <b>you shouldn’t be forced to give any of your personal data away</b> to use an app as simple as a communicator.</p><p>Another possible angle when analyzing available messengers and group chats is their <b>forkability</b>. If you’re not satisfied with the way Slack works, there’s little you can do about it without losing access to your contacts that use the app. A fully forkable product allows its users to take its code, upgrade it as needed, and still be able to communicate with others who use the original version of the app. There are some messengers that are fully forkable, Quiet included.</p><h2><b>What is Quiet and how does it work?</b></h2><p>Quiet addresses the risks mentioned above by eliminating server dependency and allowing for full anonymity and privacy when using the app. It’s an <b>encrypted peer-to-peer communicator that doesn’t require a server</b> as all data syncs directly between the users’ devices over <a href=\"https://www.torproject.org/\"><u>Tor</u></a>. It’s a dream come true for fans of software freedom and all of those who value their privacy and wish to be more independent from giant corporations. It’s also entirely forkable and gives its users complete control over how they wish to adapt the code to their needs. Full software freedom!</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/177447638_29d6805c_5458_4f5e_b4ed_7a5d6cb51f6e_1_337931d960.jpg\" alt=\"177447638-29d6805c-5458-4f5e-b4ed-7a5d6cb51f6e_1_.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_177447638_29d6805c_5458_4f5e_b4ed_7a5d6cb51f6e_1_337931d960.jpg 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_177447638_29d6805c_5458_4f5e_b4ed_7a5d6cb51f6e_1_337931d960.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_177447638_29d6805c_5458_4f5e_b4ed_7a5d6cb51f6e_1_337931d960.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_177447638_29d6805c_5458_4f5e_b4ed_7a5d6cb51f6e_1_337931d960.jpg 206w,\" sizes=\"100vw\" width=\"1000px\"></p><p><i>Source: tryquiet.org</i></p><p><b>Quiet syncs messages between devices over Tor, with no server needed.</b> Each community (a group of people communicating via Quiet) gets its own isolated network, and the message synchronization is covered by <a href=\"https://orbitdb.org/\"><u>OrbitDB</u></a>, which is a peer-to-peer database for the decentralized web. The owner of a specific community (i.e. the person who created it) sends out the invitation code (which is basically a Tor onion address - unguessable, lasts forever, and is end-to-end encrypted by Tor) to their peers who then can join said community without the need of giving away any of their personal information. </p><p>Another great aspect of Quiet is that it’s <b>completely forkable</b> - anyone can take the code and adjust it to their needs without the fear of not being interoperable with the official version of Quiet. So teams working on a project, a group of activists, or anyone that likes the privacy and freedom of using Quiet, is able to upgrade the app as needed. That opens a sea of possibilities and releases us from the monopoly of big tech companies. </p><h2><b>What’s next?</b></h2><p>Quiet is still very much a work in progress. The roadmap contains adding features such as:</p><ul><li><p>mobile versions of the app (at the moment Quiet is available on desktop only), </p></li><li><p>sending and receiving files</p></li><li><p>direct messaging (right now one can communicate within a community, not directly with its members)</p></li><li><p>joining multiple communities</p></li><li><p>account recovery</p></li><li><p>and many others. </p></li></ul><p>At the end of our roadmap, we have a completely decentralized, private, and secure communication platform independent of big tech influence, able to replace traditional messengers like Slack or Discord. </p><p><u>Please note that Quiet hasn’t been audited yet, so it shouldn’t be used when security or privacy is critical. </u></p><h2><b>That’s a wrap!</b></h2><p>Over the years, software became more and more dependent on company-owned servers which is a major threat to the free software movement. In order to hold power accountable, we need to think of new ways of using technology to the advantage of humans, not big tech companies. One of the methods to do so is to <b>create brilliant serverless software products using mesh infrastructure</b> to compete with those that collect and sell our data, use heavy advertising, and make us dependent on third parties. That’s why we’re involved in creating Quiet - an encrypted p2p team chat that gives the power back to people!</p><p><a href=\"https://www.rumblefish.dev/case-studies/a-tale-of-a-decentralized-communication-app-development/\"><u>Check out the case study</u></a> to see the technical details of what we do in Quiet.</p>","timeToRead":8,"shortContent":"<p>HOPE (Hackers On Planet Earth) is a unique event where IT professionals from around the world discuss the current state of the industry and come together to inspire, transform and share their highly innovative ideas. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"decentralized-communication-app.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/decentralized_communication_app_9e9c3abf84.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}},{"attributes":{"Name":"Emilia Marczyk","Position":"Software Engineer","Avatar":{"data":{"id":"20","attributes":{"name":"20220823_153618_2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/20220823_153618_2_5e2e873519.jpg"}}}}}]}}},{"id":"37","attributes":{"title":"The true cost of software development: outsourcing vs. in-house","slug":"the-true-cost-of-software-development-outsourcing-vs-in-house","pubDate":"2022-08-11","content":"<p>The everlasting dilemma of outsourcing vs. hiring is particularly mind-boggling when it comes to software development. Various different factors come into play and cause the decision-making process to be a daunting task. Wanting to make it a little bit easier, we studied the available data and prepared a comprehensive analysis of the true cost of in-house vs. outsourced software development. No sugar coating!\n</p><p>While there are tons of articles and blog posts related to the topic of in-house development vs. hiring your own team, we decided to take a more analytical approach, and study the available data to see what is <b>the true cost of software development</b>. </p><h2><b>Three approaches to the software development process</b></h2><p>There are three main approaches to the software development process:</p><ol><li><p>Hiring own developers</p></li><li><p>Outsourcing to an external IT company</p></li><li><p>Doing a mix of the above - enhancing own team with outsourced experts\n</p></li></ol><p>There is no one right answer to the question <i>“which is best?”</i> - it all depends on your project, budget, roadmap, etc. The total cost of software development consists of much more than just the salary itself. There are aspects like the recruitment process, talent availability, flexibility, or legal issues that can sway the total project cost one way or another. </p><h2><b>The recruitment costs</b></h2><p>Let’s start with the obvious - no matter if you outsource or hire, people need to get paid. And salary is just one aspect of hiring costs. First off, you need a great HR team able to handle technical recruitment - that’s a huge expense already as IT recruiters&#39; average salary in the US is almost $55k base pay per year (1). Another $27k comes in the form of additional pay and benefits. Then we have all the other fees that come with hiring own devs; sometimes it requires a relocation fee as<b> the talent pool is undeniably smaller than the demand</b> for great IT workers and hiring from abroad is a necessity. Travel expenses, employer branding costs, the time of your experienced staff to handle the technical interview and coding task - all of those must be included in the budget. According to devskiller.com, it costs $50k to hire a software engineer (2). Another aspect is time, and we all know time is money, right? There are various reports and studies that state that <b>the time to recruit an engineer is somewhere between 39 and 95 (!) days</b>. And each of those days loses you money, according to Inside HR in IT projects is something around $500 (3). So, being optimistic and assuming our time to hire would be closer to 40 days than 100, we would still waste $20 000 in lost productivity. </p><p>If you decide not to use an internal HR team and go with the recruitment agency instead, the cost to hire might be lower - a typical agency fee is 20% of the yearly salary of the recruited person, but the time to recruit might likely be the same. Assuming an average software developer in the US makes $108k a year (4), the agency fee would be around $21,600. The drawback of that solution is that those recruitment agencies do not always understand your company’s technical requirements and may have trouble getting the essence of your project. After all, they are HR experts, not necessarily technologically savvy. </p><p>Now, let’s take a look at the average outsourcing recruitment cost. <b>You don’t really pay anything besides your/your employees’ time to interview candidates</b> and negotiate rates and contracts. What is more, there is a really good chance that the software house you hire will already have <b>a talented team ready to join your project in a short time</b>. As opposed to a recruitment agency, using a software development company will almost certainly guarantee that they understand your technical requirements and may be able to advise you on what skills will enhance your product development<b>. They are experts in what they do</b> so depending on your project scope, be sure to look for a company with a portfolio relevant to your needs. Additionally, when going with a trusted and reputable software house, <b>along with a highly skilled team you get the guarantee of top-notch performance</b>. You don’t just get a developer and then worry about their time management and onboarding yourself - <b>a solid and professional IT partner, like Rumble Fish, will take care of supervising and managing their developers after they join your team</b>. The entire operation is transparent so that you always know what’s going on in the development process - depending on your needs you can arrange for the team to meet daily, weekly, or whenever necessary. You just sit back, relax, and enjoy how the project is progressing while focusing on your business. </p><h3><b>CONCLUSION</b></h3><p>When it comes to recruitment costs, outsourcing your project might be the way to go if time is of the essence. If you need a solid and trusted team fast, don’t hesitate to reach out to an external partner.</p><h2><b>The salary</b></h2><p>Here’s where things get a bit more complicated. IT professionals&#39; salary varies greatly depending on their skills, seniority level, but most importantly - their location. It is no secret that<b> developers located in North America are usually the most expensive ones </b>(see Image 2 below for reference). Other parts of the world are definitely more competitive in that regard, with European devs’ salaries being perceived as the best value for money. </p><p>Naturally, the salary is just the starting point, as <b>there are other costs to add on top of it - insurance, health care, 401k, taxes, employee training, hardware, office space,</b> etc. Additionally, software houses take really good care of their employees&#39; qualifications and usually have additional <b>budgets for courses, conferences, and other types of training</b>, which in the IT world tend to be really expensive. <b>That’s another cost that you don’t have to worry about when outsourcing. </b></p><p>It is estimated that in the US the real cost that employer pays for a worker is 1.25 to 1.4 times the salary (5). So, if a lead developer makes $145,000 a year (6), the total cost for the employer would be between $181,250 and $203,000. Of course, the more benefits your company offer, the higher the total cost is. </p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/cost_of_benefits_2765964236.png\" alt=\"cost-of-benefits.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_cost_of_benefits_2765964236.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_cost_of_benefits_2765964236.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_cost_of_benefits_2765964236.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_cost_of_benefits_2765964236.png 214w,\" sizes=\"100vw\" width=\"1000px\"></p><p><a href=\"https://beebole.com/blog/how-to-calculate-the-real-cost-of-an-employee/\"><u>Image 1: Typical cost of US employee benefits. Based on: How much does an employee really cost? </u></a></p><p><b>When outsourcing your team, the cost is plain and simple</b> - you agree on the hourly rate for each developer with the software house you partner with, and that is the total amount you’ll pay. <b>You don’t need to worry about the hardware, the office space, benefits, and other expenses you have when you hire in-house.</b> The hourly rate of, for example, Polish engineers is usually 30-50% lower than the US ones, which makes Europe worth considering when outsourcing your IT team. According to HackerRank, <b>Polish developers are in the top 3 of the best developers in the world</b> leaving countries like Israel, Singapore, India, or the US far behind.\n</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/salaries_range_in_the_us_2874ad3246.png\" alt=\"salaries-range-in-the-us.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_salaries_range_in_the_us_2874ad3246.png 740w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_salaries_range_in_the_us_2874ad3246.png 370w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_salaries_range_in_the_us_2874ad3246.png 555w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_salaries_range_in_the_us_2874ad3246.png 115w,\" sizes=\"100vw\" width=\"740px\"></p><p>Image 2: Yearly US salary range. Based on Glassdoor reports</p><h3><b>CONCLUSION</b></h3><p>The winner here is clear - when looking at the salary expenses it is much cheaper to outsource than to hire in-house. </p><h2><b>Which software development approach suits your project the best?</b></h2><p>When we look at the cost taking into account all of the add-ons and unexpected expenses, it is clear that going with the outsourced team is a better approach. There are of course other benefits of using an external partner, like their curated expertise, shorter time to hire, or ability to self-organize.<b> If you pick the right partner for your project, you’ll gain a lot more than budget savings. </b></p><p>Contact us for your software development needs, let’s see if we’re a good match! → <a href=\"https://bit.ly/rf-contact\"><u>https://bit.ly/rf-contact</u></a> </p><h3><b>REFERENCES:</b></h3><p>\n1) <a href=\"https://www.glassdoor.com/Salaries/technical-recruiter-salary-SRCH_KO0,19.htm\"><u>Technical Recruiter Salary, July 2022, Glassdoor</u></a> </p><p>2) <a href=\"https://devskiller.com/true-cost-of-recruiting-a-developer-infographic/\"><u>True cost of recruiting a developer, last updated on January 10, 2022, Devskiller.com</u></a> </p><p>3) <a href=\"https://www.insidehr.com.au/3-critical-steps-speeding-hiring-time/\"><u>3 critical steps to speeding up the time to hire, July 2015, Inside HR</u></a> </p><p>4) <a href=\"https://www.glassdoor.com/Salaries/software-engineer-salary-SRCH_KO0,17.htm\"><u>Software Engineer Salary, July 2022, Glassdoor</u></a> </p><p>5) <a href=\"https://www.sba.gov/blog/how-much-does-employee-cost-you\"><u>How Much Does an Employee Cost You, August, 2019, U.S. Small Business</u></a><a href=\"https://www.sba.gov/blog/how-much-does-employee-cost-you\"><u> Administration</u></a> </p><p>6) <a href=\"https://www.glassdoor.com/Salaries/san-francisco-lead-developer-salary-SRCH_IL.0,13_IM759_KO14,28.htm\"><u>Lead Developer Salary, July 2022, Glassdoor</u></a></p>","timeToRead":8,"shortContent":"<p>The everlasting dilemma of outsourcing vs. hiring is particularly mind-boggling when it comes to software development. Various different factors come into play and cause the decision-making process to be a daunting task. Wanting to make it a little bit easier, we studied the available data and prepared a comprehensive analysis of the true cost of in-house vs. outsourced software development. No sugar coating!</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"software-development-in-house-vs-outsourcing.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/software_development_in_house_vs_outsourcing_55cb09676e.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"36","attributes":{"title":"IaC tools clash. CloudFormation vs. Terraform","slug":"iac-tools-clash-cloudformation-vs-terraform","pubDate":"2022-07-07","content":"<p>Choosing the right tools is one of the most common challenges that DevOps engineers face in their daily work. In today&#39;s entrance, we will focus on comparing the two most popular infrastructure management tools on AWS – the native CloudFormation and the open-source Terraform. Both allow you to automate the processes related to defining the infrastructure configuration in accordance with the Infrastructure as Code methodology. How do they rank against each other? Let&#39;s check it out!</p><h2><b>\nInfrastructure as Code - the modern approach to infrastructure management</b></h2><p>Let&#39;s start with explaining the basics, i.e. what are CloudFormation and Terraform basically used for and why they are (or at least should be)<b> indispensable tools in the tech stack of every DevOps engineer</b> dealing with a more complex cloud project. Less technical people sometimes mistakenly assume that migrating to the cloud means completely eliminating operational costs associated with infrastructure management. Meanwhile, the cloud application&#39;s service infrastructure also needs to be set up - and it can be a task as laborious as manually configuring physical servers. To automate repetitive tasks, DevOps specialists use the <b>Infrastructure as Code (IaC)</b> methodology, which allows you to define service configurations in the form of configuration forms.</p><p>The dilemma regarding the selection of tools or methods for setting up the cloud is a challenge faced by many <b>DevOps engineers interested in Infrastructure as Code</b>. There are a lot of tools, and the knowledge available on the Internet is even wider - so how do you manoeuvre in this mass of information? At Rumble Fish we meet such challenges and offer DevOps specialists comprehensive course enriching their knowledge and skills. Under the watchful eye of experienced mentors, you will learn all the secrets of cloud orchestration and more. In our tool comparison, the technology expert is Marcin - our Tech Lead.</p><h2><b>Beyond automation - the advantages of IaC</b></h2><p>In addition to the obvious benefit of saving time related to the automation of certain processes, the use of infrastructure as a code has a number of other advantages. Configuration files can act as documentation, and if written correctly, they can be run anywhere - in a public or private cloud, or on your own server. The communication in the team is also significantly more transparent - any changes in the infrastructure configuration files can be easily traced, which allows us to identify possible configuration errors faster. IaC also allows you to return to any previous version of the code in the repository, which allows you to seamlessly switch between individual versions.</p><p>Setting up IaC can be extremely complicated, therefore the selection of appropriate tools, tailored to our needs and capabilities, is vital. Let&#39;s take a closer look at the most popular cloud infrastructure management solutions.</p><h2><b>AWS CloudFormation vs. Terraform - what to choose?</b></h2><p>In our analysis, we will take into account a number of the most important factors affecting the capabilities of the two compared tools. We will also look at the ease of work, flexibility \nand the level of security that each of them provides. Let&#39;s get started!</p><h2>\n<b>The supplier and the language</b></h2><p>CloudFormation is a tool created and maintained by Amazon, so its focus is on <b>orchestrating the AWS cloud resources</b>. Terraform enables cooperation with many suppliers \nand technologies, which at the very outset makes it more flexible than the competitor. CloudFormation is a proprietary solution, so it doesn’t offer the possibility of submitting pull requests, which means that we are, in a way, stuck with Amazon. This provider, obviously, offers the appropriate support, as long as we have purchased the appropriate support plan. In the case of Terraform, an open-source tool, <b>a thriving community</b> is available, and anyone willing can contribute, report bugs and requests.</p><p>In terms of the supported language - CloudFormation gives you the ability to create in YAML, which is a great help when you hand write the code, with this language you do it faster. Terraform, on the other hand, supports its own language called HCL (HashiCorp Configuration Language), which includes all JSON functionalities, can be compiled into JSON, \nand additionally, has several built-in abstractions, such as loops or conditional statements. Thanks to this, with the help of HCL, we can create configurations more expressively, intentionally.</p><h2><b>The tools</b></h2><p>To start working on Terraform, it’s necessary to download the TF binaries and plugins that will allow us to connect to the selected cloud, database or other resource that we want to manage from the TF level. Therefore, it’s the DevOps engineer who’s responsible for versioning and managing individual suppliers. In the case of CloudFormation, this problem is solved automatically - because the CF is built into AWS, you don’t need any additional tools to start the configuration. You may find <b>AWS CLI (Command Line Interface)</b> useful, but it’s optional.</p><h2><b>The parameterization</b></h2><p>In Terraform, parameterization has a basic scope - we can define variables and assign them some value. The TF also offers us the possibility to validate and define optional parameters. The same is offered by CloudFormation, but additionally, it enables integration with the AWS services. - <i>For example, we can specify that a given parameter is an SSH key to the instance, and the CF itself will propose one of the available keys that we have on the account. It’s a very useful, intelligent solution that makes configuration extremely easy</i> - says Marcin, our Tech Lead.</p><h2><b>The solutions sharing</b></h2><p>This aspect is particularly important for the beginning DevOps specialists or people who are just starting their adventure with <b>Infrastructure as Code. </b>The ease of sharing developed solutions or tracing the logic of the code is something that will be appreciated by everyone who is learning to manage the IaC. What does it look like when it comes to the tools we’ve analyzed? Terraform is much more “strict” in this respect, and the entry threshold is higher. In TF, we work with modules, the idea of which is that with the help of code, we can generate entire sets of components tied together (both resources and other TF modules). Each module has both input parameters and outputs (for example VPC id from the VPC generated in the module). Modules can be stored locally (as a separate directory in an existing repository), as a separate Git repository path, or in the Terraform Registry where public modules are usually kept. In CloudFormation, things are completely different - modularization is about creating the so-called <b>Nested Stacks</b>, i.e. nested stacks, stored by default on S3. In CloudFormation, things are completely different - modularization is about creating so-called Nested Stacks, i.e. nested stacks, stored by default on S3. We can share such a stack - if, for example, we publish an article, we can create a &quot;Launch Stack&quot; button, which will automatically take us to the appropriate stack and allow us to trace its logic and structure. Such transparency is something that beginner users of CloudFormation appreciate very much. However, these are not all the options that AWS gives us in this regard. Another one is <b>AWS Service Catalog</b>, which allows you to create a whole list of products within a given organization. In this case, the product is a specific CloudFormation form, which we can configure to create a lambda, API gateway, we will define all the required permissions, and then use the Service Catalog to share it to our developers. Such prepared, proven and tested form can be easily found and used without worrying if it will work. This solution works well in large projects or organizations, because it safely allows you to delegate powers to individual team members.</p><h2><b>The rollback</b></h2><p>The rollback is the possibility of withdrawing the introduced changes, which is extremely important when we want to be sure of implementations in production. In Terraform, rollbacks aren’t supported, which doesn&#39;t mean they are impossible to make. A way to get around this limitation is to use, for example, the Git Revert, which returns the environment to the previous commit. The infrastructure person reverts the code back to a previous version (e.g. using Git) and then has to apply it. The downside of this solution is that it’s done by hand, and may fail for many reasons. CloudFormation, on the other hand, tries to roll back the changes if the update fails.</p><h2><b>The multiple AWS accounts support</b></h2><p>Terraform supports all major cloud providers and allows you to define multiple accounts in various configurations. Unfortunately, this has to be done manually. CloudFormation, despite limiting itself to servicing only AWS, has many advantages here. In terms of the Amazon cloud, it allows integration with the AWS Control Tower and AWS Landing Zone, which help in managing an environment consisting of multiple AWS accounts. <i>-These tools check the infrastructure configuration in terms of best practices, and they collect all security-related events on a selected security account. For newly created accounts, they automatically apply the selected form, which greatly improves project management, especially the large ones. Another interesting CF solution is StackSets, which allows you to implement one form for many AWS accounts</i> - says Marcin, who uses AWS resources and tools on a daily basis in his work at Rumble Fish.</p><h2><b>The changes planning</b></h2><p>In CloudFormation, we work with forms and the stack created on their basis, locking is on the part of AWS. In Terraform,  the code versioning is in Git, we also have a shared state that can be accessed by many people. In addition, TF offers the possibility of targeting - if we work in a large environment consisting of hundreds of resources, we can improve and speed up work by targeting only one of them. Thanks to this, we don’t have to wait long for the status to be refreshed and we get almost immediate feedback regarding the changes made.</p><p>Both CF and TF have the option to take a look at what will actually be changed. In CloudFormation, this service is called ChangeSets and it works for all resources except the NestedSets (we can&#39;t see what&#39;s going to happen in nested modules). When it comes to Terraform, we get a scheme that includes all the changes that will arise in the modified environment. We can see absolutely anything, as transparency in Terraform is definitely greater.</p><h2><b>The result of the clash - CloudFormation or Terraform</b></h2><p>As it frequently happens, it’s difficult to clearly indicate the winner of the clash in this case - both CloudFormation and Terraform have their strengths and weaknesses; and the choice of a particular tool should be based on the specifics of each project. Terraform is a more flexible solution, it allows you to control almost every element of the environment. The price we pay for such a high degree of control is the complexity of the tool. TF is definitely more difficult to learn if you are new to DevOps. This difficulty, naturally, decreases with the acquired experience; and people who’ve been working with Terraform for a long time, highly appreciate its rich possibilities and flexibility. CloudFormation, on the other hand, makes it much simpler to share solutions, learning is far easier, and the possibility of integration with various AWS resources is impressive.</p><p>Of course, the key factor when choosing between CF and TF is the type of resources we will use - if our infrastructure is multicloud from many suppliers, it’s better to choose Terraform; while if we use the AWS cloud - CloudFormation gives us a lot more possibilities.\n</p><h6></h6><p><b>REFERENCES:</b></p><ol><li><p><a href=\"https://aws.amazon.com/cloudformation/\"><b><u>AWS CloudFormation Website </u></b></a></p></li><li><p><a href=\"https://www.terraform.io/\"><b><u>Terraform Website</u></b></a></p></li><li><p><a href=\"https://www.cncf.io/blog/2021/04/06/cloudformation-vs-terraform-which-is-better/\"><b><u>CloudFormation vs Terraform by Cloud Native Computing Foundation</u></b></a></p></li><li><p><a href=\"https://www.youtube.com/watch?v=aysJTFbakJE\"><b><u>Terraform vs CloudFormation by SysOps/DevOps Polska (available in Polish)</u></b></a></p></li></ol><p></p>","timeToRead":8,"shortContent":"<p>Choosing the right tools is one of the most common challenges that DevOps engineers face in their daily work. In today&#39;s entrance, we will focus on comparing the two most popular infrastructure management tools on AWS – the native CloudFormation and the open-source Terraform. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"joshua-sortino-LqKhnDzSF-8-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/joshua_sortino_Lq_Khn_Dz_SF_8_unsplash_d4fccba646.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"AWS"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"35","attributes":{"title":"How to optimize your digital product? 5 UX design tips to try out!","slug":"how-to-optimize-your-digital-product-5-ux-design-tips-to-try-out","pubDate":"2022-06-06","content":"<p>Let’s face it - without a great user experience, your product will be a nightmare to use, which in the long run will result in an inevitable business failure. Some people mistake good UX with aesthetically pleasing design or cool animations. Sure, they can be a valuable addition to your digital solution, but UX is so much more than just that. In today’s blog, we show you 5 UX design tips that will enhance your product’s usability. </p><p>UX is all about the art of communication - your app or website is where you communicate with your customers and you should make it a memorable and pleasant experience. Here are some of <b>the best UX design practices</b> to implement into your digital product.</p><h2><b>1. Make your product accessible</b></h2><p>It should go without saying but sadly, it’s not always the case: your digital product should be accessible to people with disabilities. Don’t simply cross out a major group of people from your potential customer list. There is actually a quite simple set of rules to implement and add to your website or mobile app to make it more friendly to people with sight and hearing disabilities. You can add it to your existing product, or keep it in mind while designing a brand new one. Some of them include:</p><ul><li><p><b>Providing good contrast</b></p></li></ul><p>There are certain font and background combinations that are really hard to read even by people without any sight problems. See if the combo you’re thinking about passes the contrast test in this simple <a href=\"https://webaim.org/resources/contrastchecker/\"><u>Contrast Checker</u></a>. </p><ul><li><p><b>Using true text instead of images</b></p></li></ul><p>If possible, avoid placing your text on the image as it makes it unrecognizable for voice assistants and harder to translate. You’ll also make your website load faster by getting rid of unnecessary images. </p><ul><li><p><b>Making your links recognizable</b></p></li></ul><p>Distinguish between body text and links by using more than just underline - try changing the link color or making it bold. Your disabled users will thank you.</p><h2><b>2. Understand that you are not your customer</b></h2><p>This might be particularly hard to achieve as we all tend to get attached to our concepts and ideas. But to make a truly great product with a killer UX you need to put yourself in your client’s shoes and get rid of the idea that you know what they want and need. Trust us - your users will surprise you! That’s why research is a crucial part of the UX design process. You need to not only get to know your customers but also observe how they interact with your product. When designing a website or an app, put aside a decent amount of time and resources for <b>usability testing and prototyping</b> on an actual customer group - it will be super valuable in the long run. </p><h2><b>3. Keep it simple</b></h2><p>Although it’s sometimes tempting to, for example, showcase all of your product’s features and functionalities at once, it’s not always the best idea. People have a really short attention span and you should<b> focus on delivering your core message</b> and making sure it sticks. The same goes for the design itself - keeping it simple will let your users focus more on the content. Don’t bombard your customers with a myriad of options, but rather lead them through the product with intuitive interfaces and a straightforward menu. It’s also worth having <b>theprinciple of least astonishment (POLA)</b> in mind while designing interfaces. It’s a rule used in UI and software design that states that a component or feature should behave in a way that most will expect it to behave. Navigating through your app shouldn’t be a challenge or a surprise for its users.</p><h2><b>4. Let your users know what’s up</b></h2><p>One of the <a href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\"><b><u>10 heuristics of usability by Jakob Nielsen</u></b></a>says that users should always know the current system status through appropriate feedback and within a reasonable time. It builds trust in the product and ultimately in your brand itself. Imagine you’re doing some in-app online shopping and you have no idea which step of the process you’re currently at, and you receive no feedback from the app regarding the status of the payment, for example. It’s not only frustrating but also dramatically decreases the chance of you coming back to the store again. That’s why <b>great UX design always communicates the system state clearly</b> and sends feedback to the user as quickly as possible.</p><h2><b>5. Remember to stay consistent</b></h2><p>The best UX design makes interacting with your product familiar and easy. One of the main rules to follow while designing a digital product is to stay consistent. There are 4 main types of consistency in UX design: </p><ul><li><p><b>visual consistency,</b></p></li><li><p><b>functional consistency,</b></p></li><li><p><b>internal consistency,</b></p></li><li><p><b>external consistency</b></p></li></ul><p>Unless it’s your intentional and justified choice to do so, don’t switch brand fonts, sizes, buttons, or labeling as pleased. Stay consistent so that your brand gets more and more familiar to its users. Your product will also feel much more professional and put together. </p><p>That’s all for today! Applying those simple rules to your design will make it much more user-friendly and professional. Naturally, we’ve got some more UI/UX tips and tricks to share with you, so stay tuned for our future publications!</p>","timeToRead":6,"shortContent":"<p>UX is all about the art of communication - your app or website is where you communicate with your customers and you should make it a memorable and pleasant experience. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"hal-gatewood-tZc3vjPCk-Q-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/hal_gatewood_t_Zc3vj_P_Ck_Q_unsplash_54b06fbcb2.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"UX"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"34","attributes":{"title":"How to perform time-restricted iterations over Big Data with AWS Step Functions","slug":"how-to-perform-time-restricted-iterations-over-big-data-with-aws-step","pubDate":"2022-05-17","content":"<p>Today’s blog post demonstrates the most efficient way of iterating over a huge dataset when every record needs to be updated within a restricted time frame. This requirement might be applied when you rely on calls to an external service and the number of requests per day is capped, or when you’re careful about the number of resources you use in order to prevent a “denial service attack” upon yourself. In any case, it’s good to know which tools work best with big databases and how to use them to save yourself time and resources. </p><h2><b>Let’s set the stage with some base code</b></h2><p>In a very straight-forward way of thinking, when asked to solve the problem we’re facing in this piece, we could write a simple code that looks like this:</p><p>{{codeSnippet,AWS 1}}</p><p>Although the code above does what’s required, it wouldn’t be suitable for processing big sets of data. For the sake of the argument let’s assume that iterating over our dataset would take 2 months given we can process only 1 record every 10 seconds. If we wanted to proceed with the code above for some reason, we could launch it using an EC2 instance. However, there are two shortfalls to this approach:</p><ol><li><p><b>It’s costly</b>. The bigger the dataset, the higher the cost of running the instance. </p></li><li><p><b>There is no way of fixing mistakes</b> while the code is doing its job. And what we would like is the ability to update the code as much as needed and have it resume where it left off. </p></li></ol><p>In order to finish our task in the most efficient way, we have to look for a better solution.</p><h2><b>AWS tools come in handy</b></h2><p>There is an<b> AWS feature called </b><b><i>Step Functions </i></b>that seems to be a very good fit for solving our issue. When implementing it we would create a graph like this one:</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/AWS_Step_Functions_Graph_Scheme_7af0371c6e.jpg\" alt=\"AWS-Step-Functions-Graph-Scheme.jpg\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_AWS_Step_Functions_Graph_Scheme_7af0371c6e.jpg 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_AWS_Step_Functions_Graph_Scheme_7af0371c6e.jpg 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_AWS_Step_Functions_Graph_Scheme_7af0371c6e.jpg 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_AWS_Step_Functions_Graph_Scheme_7af0371c6e.jpg 218w,\" sizes=\"100vw\" width=\"1000px\"></p><p>The complete code for this example is located in the<i> template.yml </i>file in <a href=\"https://github.com/rumblefishdev/step-function-iterator\"><u>this repository</u></a>. Here is the source of the execution flow:</p><p>{{codeSnippet,AWS 2}}</p><p>The code uses<b> two Lambda functions</b>: the first one prepares the iterator object that will be passing along and which will control our process of iteration. It looks like this:</p><p>{{codeSnippet,AWS 3}}</p><p>The idea here is that as long as <i>$.iterator.continue </i>is true, the iteration will keep on going. The second function is the one actually doing the job. Here’s how it looks:</p><p>{{codeSnippet,AWS 4}}</p><p>One can do whatever processing is needed here. As long as this function returns an updated state of the iterator, we’re good to go. It’s important to note that<b> if this function raises an exception, it’s configured to keep on trying</b> until it passes. This part of the configuration (<i>template.yml) </i>is responsible for the behavior:</p><p>{{codeSnippet,AWS 5}}</p><p>If you reach an element that for some reason couldn’t be processed, you can always update the code, redeploy, and it will continue the iteration using the new, updated code lines. \n</p><h2><b>Key takeaways</b></h2><p>After performing the entire iteration process, <b>let’s look a bit closer at the results</b>. From logs in the Cloud Watch, we know that it’s actually one execution environment that’s doing all the processing. Because of that, we have a long-living node.js process, so whatever we cache in memory can be used between the iteration cycles. And AWS only bills us for the execution time of the iteration, not for the time we wait between them.</p><p>As an attentive reader, you probably noticed that in our example we’re passing an entire collection in parameters of the processing function and only select the record to process inside the function. It’s a simplification made for educational purposes and certainly not the right way to proceed if the database in question has over 500k records. The single important bit in the processing is the<b> iterator object</b>. The collection we iterate is usually kept in some sort of database - it doesn’t matter which one is your favorite.</p><p>We hope that our little tutorial and the tools we provide will be useful in your projects. In case of questions, we’re here for you - drop us a line!</p><h2><b>Bonus: Resources that will help you along the way</b></h2><p>When working with <b>Step Functions</b> it&#39;s extremely helpful to use the Simulator:<a href=\"https://us-east-1.console.aws.amazon.com/states/home?region=us-east-1#/simulator\"><u>https://us-east-1.console.aws.amazon.com/states/home?region=us-east-1#/simulator</u></a></p><p>It&#39;s very useful in understanding how the data flows through the state machine and what values to put in:</p><ul><li><p>InputPath\n</p></li><li><p>OutputPath\n\n</p></li><li><p>ResultPath\n\n</p></li><li><p>Parameters</p></li></ul><p></p>","timeToRead":8,"shortContent":"<p>Today’s blog post demonstrates the most efficient way of iterating over a huge dataset when every record needs to be updated within a restricted time frame. This requirement might be applied when you rely on calls to an external service and the number of requests per day is capped, or when you’re careful about the number of resources you use in order to prevent a “denial service attack” upon yourself.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"pietro-jeng-n6B49lTx7NM-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/pietro_jeng_n6_B49l_Tx7_NM_unsplash_e72908a900.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"AWS"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Marek Kowalski","Position":"CTO / Co-Founder","Avatar":{"data":{"id":"101","attributes":{"name":"Marek-Kowalski-CEO-Rumble-Fish.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Marek_Kowalski_CEO_Rumble_Fish_fdc397497a.png"}}}}}]}}},{"id":"33","attributes":{"title":"Towards the Decentralized Future: Blockchain Trends in 2022 - download our report","slug":"towards-the-decentralized-future-blockchain-trends-in-2022-download-our","pubDate":"2022-04-08","content":"<p>In our latest report, we explore and analyze the latest blockchain-related trends and predict which of them are here to stay. We take a look at NFTs, DAOs, the world of DeFi, metaverse, and Web 3.0 to see how those concepts and ideas can be used or augmented in digital product development. </p><p>Blockchain has been our core area of expertise since the very beginning of Rumble Fish. Over the years we’ve successfully completed many<b> DeFi, dApp, and crypto projects</b> and learned how to navigate the ever-changing blockchain landscape. We watch the market carefully and analyze the trends and the technology behind them to know which are worth implementing in our projects. </p><h1><b>Blockchain-based technologies are the future</b></h1><p>Our newest publication <b>“Towards the Decentralized Future: Blockchain Trends in 2022” focuses </b>on 5 major topics: </p><ul><li><p>cryptocurrencies, </p></li><li><p>blockchain consensus mechanisms, </p></li><li><p>NFTs, </p></li><li><p>DeFI, </p></li><li><p>Web 3.0 and the metaverse. </p></li></ul><p>In the first part, devoted to cryptocurrencies we discuss how governments and lawmakers worldwide approach regulating crypto assets. We also dive a bit deeper into the topic of stablecoins and the way they work. Our experts analyze the current situation and predict<b> the future of cryptos in the modern finance world</b>.</p><p>Then we move swiftly to the more technological issue of how consensus on blockchains is achieved. Taking Ethereum as an example, we describe two basic consensus mechanisms - <b>“proof of work” </b>and <b>“proof of stake”</b> and wonder what is the future of blockchains (there are over 100 blockchain platforms available currently). Will there be one main blockchain left after what is called “the blockchain war”? Or maybe there will be even more platforms, coexisting independently from each other? Download the report to find out what we think!</p><p>In the next part, we take a look at <b>NFTs</b> and the way they took over the entire crypto world and became mainstream. We go back to the first successful NFT project and examine what made NFTs become so popular in 2021. Being experts in <b>NFT platform development </b>we’re also predict the new ways non-fungible tokens can be utilized in the future.</p><p>The next part of our report is devoted to <b>Decentralized Finance (DeFi)</b>, which is an ecosystem of financial apps and services that are build on blockchain. There are various different approaches to investing in DeFi and we cover everything from yield farming to HODLing.</p><p>Lastly, in the part titled “The Future is Decentralized” we talk about <b>Web 3.0, the Metaverse, and the role of Decentralized Autonomous Organizations (DAOs) </b>in the way businesses and other entities operate.</p><p>{{linkImage,Blockchain report}}</p><p></p><p>As 2021 proved to us, when it comes to software development there is currently a strong focus on <b>delivering decentralized platforms</b>, preferably on proof of stake blockchains. DLT developers with knowledge of smart contracts and blockchain-oriented programming languages like Solidity or Vyper are still rare gems on the market. At Rumble Fish, we specialize in <b>smart contracts development, crypto exchange platforms, and other blockchain-centered projects</b>. We’ve worked with many crypto pioneers and have the best team of experts on board. In our report we bring you only the freshest and most relevant insights into the world of blockchain. </p>","timeToRead":3,"shortContent":"<p>In our latest report, we explore and analyze the latest blockchain-related trends and predict which of them are here to stay. We take a look at NFTs, DAOs, the world of DeFi, metaverse, and Web 3.0 to see how those concepts and ideas can be used or augmented in digital product development. </p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"AdobeStock_491373544.jpeg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Adobe_Stock_491373544_ad6178a019.jpeg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"32","attributes":{"title":"DAO - what is a decentralized autonomous organization and how does it work?","slug":"dao-what-is-a-decentralized-autonomous-organization-and-how-does-it-work","pubDate":"2022-03-18","content":"<p>What is the core concept behind the decentralized autonomous organization (DAO) and what benefits can it bring for potential investors and its participants? In this article, you will find simple answers to the most frequently asked DAO questions.</p><h1>What is a DAO and what was it created for?</h1><p>While the recent expansion of DAOs may be a little bit mysterious, it’s not difficult to explain their essence and objectives. <b>A decentralized autonomous organization is an entity represented by rules encoded as a transparent computer program, controlled by its community</b>, and not influenced by any central authority, like a government or a corporation.</p><p>The idea behind a decentralized organization is that <b>people who hold its tokens can manage it collectively</b> (in the next section we’ll dive a bit deeper into the topic of tokens) Individuals with DAO&#39;s tokens are stakeholders and they can make proposals concerning eg. DAO’s future, or how funds are spent or managed. DAOs&#39; mechanisms are encoded into blockchain protocols and enforced by smart contracts. This assures a higher level of transparency and minimizes bureaucracy. Blockchain technology allows exchanging information and value while executing processes securely and transparently. Blockchain applications arbitrate members’ interactions according to the rules encoded in smart contracts, such as, for example, how to vote on proposals. DAOs use different voting mechanisms depending on the agreement between their founders/members. All of those rules have to be <b>visible, verifiable and publicly auditable</b> so any potential community member can understand the protocol’s framework. </p><h1>How does a DAO work in practice?</h1><p>When the founding rules of how a certain DAO will operate are established, the next step is to secure its funding. This is usually achieved through <b>token issuance</b>. DAO needs a token, a digital unit representing a specific value, both to secure the funding and establish voting rights amongst its community. When buying tokens belonging to a DAO, investors are entitled to make decisions with them - the extent of their voting rights is usually proportional to their holdings. To withdraw or transfer funds, most DAOs must vote on a proposal. Decisions are made via proposals the group votes on during a specified period of time. Voting takes place after submitting the proposal. </p><p><b>DAOs use different types of voting mechanisms: </b></p><ul><li><p><b>Relative majority voting mechanism</b> (eg. DAOhaus) - this way of voting compares the total number of votes of those supporting and those against the proposal to arrive at a decision.</p></li><li><p><b>Holographic consensus</b> (eg. DXdao) - this mechanism of voting connects a prediction market with a proposal.</p></li><li><p><b>Conviction voting</b> (eg. 1Hive)  - is a voting mechanism whereby individuals stake their powers to vote on proposals and gather enough votes to pass over time.</p></li><li><p><b>Quorum voting</b> - this mechanism requires a particular voters’ threshold for a proposal to pass, for instance, more than 50% quorum.</p></li></ul><h1>What’s the difference between a DAO and The DAO and why the latter failed?</h1><p>\nIn May of 2016, a few members of the Ethereum community announced the founding of <b>The DAO</b>, which was supposed to be the first operating example of a DAO. It was built as a<b> smart contract on the Ethereum blockchain</b> and developed by the Slock.it team. </p><p>The DAO was meant to operate as a venture capital fund for projects aiming to strengthen Ethereum ecosystem and drive user adoption. The platform would allow anyone with a project idea to pitch it to the community and potentially receive funding from The DAO. If the project brought a profit, anyone with The DAO tokens who voted would gain a share of the profit. The DAO creation period was an unexpected sensation as it managed to gather 12.7M ETH, worth around $150M at the time, making it the biggest crowdfunding in history. However, pretty soon after that time, everything turned upside down. In June of 2016, one hacker <b>found a loophole in the code that allowed him to maliciously withdraw funds from The DAO</b>. As a result of this attack, he stole 3.6M ETH, the equivalent of about $70 million at the time.</p><p>The person behind all of this stated that he did not commit a crime because he did nothing that the code itself would not allow. The hacker simply <b>asked the DAO smart contract to withdraw the ETH multiple times before it could update the balance</b>. When developing a smart contract, the developers did not take into account both the recursive execution and the fact that it first sends funds in ETH and then updates the balance of the internal token. The error did not come from Ethereum itself, but the implementation of the smart contract of the DAO governance. At the time, tools for creating smart contracts were at an early stage and it was far easier to make a mistake than it is nowadays.</p><p>The only viable solution to this crisis was <b>to modify the rules of the Ethereum blockchain itself</b> through the software update, so that it became possible to invalidate the specific fraudulent transactions. This led to a network splitting into two chains:<b> Ethereum (ETH) and Ethereum Classic (ETC)</b>. It was up to the miners to choose if they wanted to accept the change of rules or maintain the chain where the fraudulent transactions were included. </p><p>The hack was the beginning of the end for The DAO. Some Ethereum miners also questioned the network split, claiming that it violated the basic assumptions of blockchain technology. As a consequence of all these negative events, two cryptocurrency exchanges: Poloniex and Kraken removed the DAO token from their platforms.</p><p>As if that wasn’t enough, in July 2017, the US Securities and Exchange Commission (SEC) issued a ruling in which it stated that the tokens offered and sold by The DAO were securities and therefore were subject to federal regulations. This meant that the digital organization had to follow the same rules as the ICO (Initial Coin Offering). According to the SEC, both The DAO and all of its investors had broken the law.</p><p><b>Main conclusions:</b></p><p>While The DAO project no longer exists, it serves as a cautionary tale for other projects of that type that followed. First of all, in the case of The DAO, the hack was not related to the Ethereum blockchain, but to a code vulnerability. The second important outcome was that other companies developed a way to circumvent the guidelines presented by the SEC. One such loophole is to use the so-called <b>SAFT (Simple Agreement for Future Tokens)</b> contract. It stipulates that tokens with reasonable utility value on the blockchain platform violate elements of the Howey test (a test that determines if a certain transaction is considered security), thus they don’t have to be listed as such, and are not subject to SEC regulation.</p><h1>Other examples of DAOs</h1><p>Of course, The DAO is not the only example of decentralized autonomous organization. Many others currently operate with great success. Below is a list of only the biggest DAO projects on Ethereum:</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/image_10_bd80dd2f56.png\" alt=\"image_10.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_image_10_bd80dd2f56.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_image_10_bd80dd2f56.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_image_10_bd80dd2f56.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_image_10_bd80dd2f56.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p><b>Some of the most exciting ones are:</b></p><p>\n<b>Maker DAO</b> - a decentralized autonomous organization based on the Ethereum network. It consists of two parts, managing - Maker and stablecoin - Dai. The former is used to vote on issues related to the platform&#39;s business model. </p><p>{{linkImage,MakerDAO}}</p><p></p><p><b>Aragon </b>- an open-source project that aims to enable the creation of other decentralized autonomous organizations.</p><p><b>LexDAO</b> - a community of legal engineering experts who aspire to build tools that blockchain projects could use instead of some basic and often inadequately expensive legal services.</p><p><b>BitDAO </b>- a decentralized autonomous organization that makes it easy to launch personalized crypto tokens and dApps. It includes token swaps and a multi-asset BitDAO Treasury, used to accumulate various types of tokens.</p><p><b>Rally (RLY)</b> - a decentralized network built for content creators to enable easy monetization of their work. Creators issue their own cryptocurrencies which their fans can buy to gain access to their favourite creators’ content unavailable anywhere else.</p><h1>Watch the market closely, as it’s only the beginning </h1><p>As the examples above show us, DAOs are not only about the DeFi &amp; investment protocols (although the financial part is inherent to every DAO). There are many various areas where <b>DAOs can bring added value and new opportunities</b> - from social through service to media. Moreover, this type of independent, decentralized entity is believed by many to be the future of work and business. It’s worth keeping an eye on emerging DAOs as they seem to be here to stay.</p><p></p>","timeToRead":5,"shortContent":"<p>What is the core concept behind the decentralized autonomous organization (DAO) and what benefits can it bring for potential investors and its participants? In this article, you will find simple answers to the most frequently asked DAO questions.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"AdobeStock_491294740.jpeg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Adobe_Stock_491294740_4899ad8478.jpeg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"31","attributes":{"title":"How to test Custom React Hooks?","slug":"how-to-test-custom-react-hooks","pubDate":"2022-03-08","content":"<p><b>According to Stackoverflow 2021 survey results, React is the most popular web framework amongst front-end developers worldwide. In a nutshell, React is a component-based JavaScript library used to build user interfaces. Today we’ll learn how to test React Hooks, which were first introduced in 2018 and since then have been helping engineers build better apps. </b></p><h2>What are React Hooks?</h2><p>Let’s start with the basics. Hooks were first released in <b>React 16.8</b> in October of 2018 to enable developers to use state and other React features without writing a class or a HOC. One of their biggest benefits is that they work with the existing code and therefore can be easily adopted into your codebase. Hooks are an opt-in tool, but over the years have proven to continuously make devs&#39; lives easier, quickly becoming one of the most popular React features. </p><p>There are 10 built-in hooks that were released with React 16.8, but the most commonly used ones are:</p><ul><li><p><b>State Hook</b> – lets devs manage state inside functional components without the need of converting it to a class component.  Additionally, the State Hook receives an initial state as an argument and adds a second function which allows developers to update it. </p></li></ul><p>{{codeSnippet,Javascript code no 1 hooks}}</p><ul><li><p><b>Effect Hook</b> – enables React developers to perform side-effects in the function components. It’s equivalent to <i>componentDidMount</i>, <i>componentDidUpdate,</i> and <i>componentWillUnmount</i> in class components, but unified into a single API.</p></li></ul><p>{{codeSnippet,javascript hooks code no 2}}</p><ul><li><p><b>Custom Hook</b> – a custom hook is a JavaScript function which uses other hooks inside of it and contains a common stateful logic that can be reused within multiple components.  It minifies your codebase making it less repetitive. In this post we focus on this type of hook and how to test it.</p></li></ul><p>{{codeSnippet,javascript code sniper no 3 hooks}}</p><h2>What to use for testing custom hooks?</h2><p>After carefully crafting your custom hook you probably wonder “will it work over the lifetime of the app I’m building?”. The best way of finding out is to test the hook, preferably with <b>Jest </b>and<b>/</b>or <b>React Hooks Testing Library</b>.</p><ul><li><p><b>Jest is a JS testing framework.</b> It&#39;s an easy way to test your code that also helps mocking functions and any other objects. Additionally, when a test fails for some reason, it provides a rich context why that happened</p></li></ul><ul><li><p><b>React Hooks Testing Library is a set of utilities that, as the name suggests, lets you test your custom hooks.</b> You don’t have to create components to test your hook, nor to figure out how to trigger all the cases in which it could be updated. It’s a hassle-free way of testing even more advanced and complex hooks. </p></li></ul><p><b>Jest</b> lets you access the <b>DOM</b> and mocking functions so you have more control over how the code executes, while <b>React Testing Library</b> provides tools to test and render hooks without getting into implementation details. It’s the combination of both <b>Jest and React Testing Library </b>that will give you the best results while testing.</p><p>Now that we have all the basics covered, let us guide you through testing one of our own custom hooks. </p><h2>1st case: unit testing simple custom hooks</h2><p>The hook we’ve created is called <i><b>useTextField</b></i> and it contains its own state and function to change it. This hook can be used to handle value as local state and behavior for any input. Here’s how it looks:</p><p>{{codeSnippet,javascript no 4 hook}}</p><p>First, we need to create a test using <i>describe</i>. Then, we render a hook to use it for testing. Common way of doing it is to use the <i>renderHook</i> method from the <b>React Hooks Testing Library</b>. The next step is to figure out which cases we need to check. The best way to take off with testing is to start with two cases - in the first one we won’t implement any changes to the value, in the second we’ll update the value. Additionally, it&#39;s a good practice to test the <b>edge case</b> as well - to see how our hook will behave under extreme operating parameters.</p><p>There are three scenarios in our custom hook that we should test:</p><p>1. If the hook renders properly and has exact default values we intended it to have</p><p>{{codeSnippet,javascript hooks code snipet no 6 hooks}}</p><p>2. If <i>onChange</i> function works and changes state properly</p><p>Here we need to use the <i>act()</i> method from React Hooks Testing Library. This makes your test run closer to how React works in the browser.</p><p>{{codeSnippet,javascript code snipet no 7 hooks}}</p><p>3. Finally, let’s test If <i>after unmount and rerender hook</i>, value is back to default</p><p>{{codeSnippet,javascript code snipet no 8 hooks}}</p><p>That’s it! After testing those three variables we are safe to use the custom hook in our app. </p><h2>2nd case: testing more advanced custom hooks</h2><p>Since we now see how it works in a simplified example, let’s try something more advanced. <a href=\"https://github.com/Bartek-str/timer-tests/blob/master/src/hooks/useCountDown.ts\"><u>Here is a more complicated hook we have created</u></a>. <i>useCountDown</i> is a timer that uses its own state, timeout, and interval functions. </p><p>The best way to test timers like this one is to use <i>useFakeTimers</i> provided by <b>Jest</b> and only things that need to be tested are the results at different intervals. We have added two functions which are <i>beforeEach</i> and <i>afterEach</i>. In the first one, we want to mock our timer functions used in this hook; however after each test we want to restore their normal behavior using <i>jest.useRealTimers()</i>. Now that we have a test environment set up, let&#39;s test our hook.</p><p><a href=\"https://github.com/Bartek-str/timer-tests/blob/master/src/hooks/useCountDown.test.ts\"><u>https://github.com/Bartek-str/timer-tests/blob/master/src/hooks/useCountDown.test.ts</u></a></p><p>\nAfter rendering <i>useCountDown</i> with 3 seconds props, <i>timeLeft </i>should be set to 3 seconds and <i>isFinished </i>should be false. We use <i>act() </i>with <i>jest.advanceTimersByTime() </i>to move time forward in the tests<i>. </i>This function shifts the time by the specified value in milliseconds. All done!</p><h2>It’s a wrap!</h2><p>Testing custom hooks can be very difficult depending on the complexity of the hook. Best way to do it is to mock some functions or API calls using <b>Jest</b>. However, don’t forget to make custom hooks simple and reusable so they are easy to implement in a project. Then testing them will become much easier. Good luck with your custom hooks testing! </p>","timeToRead":8,"shortContent":"<p><b>According to Stackoverflow 2021 survey results, React is the most popular web framework amongst front-end developers worldwide. In a nutshell, React is a component-based JavaScript library used to build user interfaces. </b></p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"testing-react-hooks-blog-header.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/testing_react_hooks_blog_header_79827062a2.png"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Bartłomiej Strużyk","Position":"Software Engineer","Avatar":{"data":{"id":"172","attributes":{"name":"bartek_s.jpeg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/bartek_s_043ff24eb5.jpeg"}}}}}]}}},{"id":"30","attributes":{"title":"Web development strategy for your business: dos and don'ts","slug":"web-development-strategy-for-your-business-dos-and-donts","pubDate":"2022-02-15","content":"<p>3Whether you&#39;re in charge of a local small business, an emerging start-up, or an established company, you should realize the importance of your digital strategy and the online presence of your brand. Having helped many companies reach their digital goals, we created a full list of tips on how to approach your web development strategy so it serves your customers the best way possible. We&#39;ll also let you know what&#39;s a big no-no in website development in 2022. Keep on reading!</p><h3><b>Your brand digital presence is everything - especially during the pandemic</b></h3><p>Due to a survey conducted by Salesforce, <a href=\"https://www.salesforce.com/news/stories/growing-smbs-survived-the-pandemic-by-going-digital/\">71% of small and medium businesses survived the pandemic by going digital and enhancing their online presence.</a> Additionally, 66% of business owners claim they couldn&#39;t have survived 2020 using the technology from a decade ago. If that doesn&#39;t show us the magnitude of staying on top of technological trends and updating your company&#39;s tech stack - we don&#39;t know what would. To sum up the survey results:</p><ul><li><p>if your brand isn&#39;t present online yet - you should change that immediately,</p></li><li><p>if you have a website and it hasn&#39;t been updated in months/years - that might be worse for your business than having no site at all!</p></li></ul><p>When you decide to invest in digital, you should also remember to allocate the proper budget to keep your online presence fresh and updated. And the right website development strategy will help you achieve just that.</p><h3><b>3 rules of good website development strategy</b></h3><p>After you&#39;ve decided to <b>strengthen your online presence</b>, it&#39;s time to focus on the strategy. As there isn&#39;t a one-fits-all solution that suits every case, it&#39;s good to know basic rules and a few tricks to <b>maximizing your website dev ROI</b>.</p><p>{{linkImage,Check services}}</p><p></p><h4><b>1. Find the best web development company for your use case</b></h4><p>Sure, there are hundreds of <b>website development agencies</b> when you browse through Google search results. But how to recognize the one that will understand your business requirements, is absolutely tech-savvy, and knows all of the principles of good design?<b> Start with looking for web development companies by browsing their case studies portfolio</b>. If they have projects similar to your own, you&#39;re on the right track. Experience in working with customers from your industry is invaluable when you&#39;re looking for something more than just a vendor. In such a case, a web development company becomes your partner and the best advisor. Let&#39;s look at Rumble Fish as an example - after successfully working with many Blockchain-oriented investors, we are now able <b>to exceed even the most demanding expectations</b> of other companies that operate in this area. We know their pain points, the best technology &amp; tools to apply, and we can easily lead them in the right direction if they&#39;re not sure what to do next.</p><p>The next thing you might want to check out when <b>looking for web development services</b> is the tech stack used by the company. It&#39;s important that their UI/UX designers know the latest trends in web &amp; app development as new tools and solutions might be exactly what your website needs to satisfy your clients. Check out if they use languages like <b>React</b>, <b>React Native</b>, or <b>Nest</b>, as they are very useful when it comes to smooth &amp; modern website design. If your project is more complicated and requires enhanced security and privacy features, make sure that your <b>software house</b> can handle that.</p><p>While building bigger online platforms dedicated to thousands or millions of users your dev team needs to be diverse enough to cover all the bases of the project - you might need cloud or Blockchain engineers to help you achieve your goals. Make sure to discuss that with your potential software house in the early stages of your talks.</p><p>In 2022 it&#39;s more clear than ever that we don&#39;t have to be in the same room/city/country to be business partners. So <b>don&#39;t limit your search to the local companies only</b>. Sure, in some cases face to face meetings might be helpful but as Covid-19 proved to us, Zoom is just as effective. So if you&#39;ve found a company from another country or continent but you really like their work and approach, don&#39;t be afraid to try them out.</p><h4><b>2. Focus on your customers and their specific needs</b></h4><p>Don&#39;t ever assume that you know everything about your customers and their preferences. People tend to be very surprising and might use your product in a way you never would&#39;ve imagined. That&#39;s why it&#39;s important to talk to them, analyze their behavior online, observe them when they use your product.</p><p>If your industry is, for example, healthcare or HealthTech, you should be especially sensitive to users with disabilities and accommodate their needs accordingly. Your website should be WCAG (Web Content Accessibility Guidelines) compliant, which means it should be built in a way accessible for people with various disabilities. WCAG is a set of technical standards that gives your <b>web development team</b> specific details on how to build accessible pages. At Rumble Fish, we have extensive experience with WCAG standards - both in QA and implementation of the guideline.<a href=\"about:blank\"> <u>Read the case study.</u></a></p><h4><b>3. Explore your options - a website is only one of them</b></h4><p>In some cases it&#39;s obvious - your business needs a website to serve as your company&#39;s portfolio. No additional tricks are required. But what if your customers wanted to log in to schedule an appointment or download materials? If you want improved functionalities you&#39;re no longer creating a website, but a <b>web application</b>. And sometimes it makes more sense to <b>develop a mobile app</b> instead of an elaborate <b>web app</b>. The form you choose should be carefully analyzed with a team of digital experts who are masters at their craft. One thing that is certain is that your digital branding should be mobile-friendly. The rest is a matter of preference and business incentives.</p><h3><b>How not to design digital products in 2022</b></h3><h4><b>1. Focus solely on the aesthetic</b></h4><p>We all want our websites to have a sleek and modern look. That&#39;s a no-brainer. But there is nothing more annoying for your potential customer than looking up your business online and seeing a <b>beautifully designed website</b> with no basic info to be found.  It&#39;s crucial for your <b>web design team</b> to know the current trends but it&#39;s also important to remember why you&#39;re setting up your <b>digital presence</b> in the first place. And good design should be complementing your content, not replacing it.</p><h4><b>2. Skip the discovery phase</b></h4><p>In theory, everyone knows <b>the importance of the discovery phase</b> but, as experience shows us on a daily basis, it&#39;s often being forgotten in practice. Sometimes, startup founders or product creators seem to think that they know their stuff the best and no discovery phase is necessary. But if you want your product to reflect exactly what your customers need and require, you have to ask them first. And that is one of the phases of a <b>product discovery workshop</b>. Not to mention the money you can save in the process. A well-planned product is much cheaper to develop than using a trial and error methodology. By conducting a discovery workshop, you greatly boost your chances of delivering a better product.<a href=\"https://www.rumblefish.dev/blog/post/what-is-the-product-discovery-workshop-verify-the-value-of-your-product/\"> <u>In this piece, we explain the details and benefits of a good discovery workshop.</u></a></p><p>{{linkImage,Workshop check}}</p><p></p><h4><b>3. Forget the importance of UX</b></h4><p>Good <b>user experience design</b> is crucial in the <b>web development process</b>. Why? For the same reasons a good product should have a discovery phase. Good <b>UX</b> can increase your sales, drive business growth, expand your customer base. UX puts your customer in the center therefore you need to be able to put your own preferences aside. <b>User experience</b> is not about guessing what the end-user wants but researching and testing it on your target group. Good design makes your website, web app, or mobile app more useful, credible, and accessible.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/what_you_miss_without_UX_2ee52dc1e7.png\" alt=\"what-you-miss-without-UX.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_what_you_miss_without_UX_2ee52dc1e7.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_what_you_miss_without_UX_2ee52dc1e7.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_what_you_miss_without_UX_2ee52dc1e7.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_what_you_miss_without_UX_2ee52dc1e7.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p></p><p>Whether you want to launch a small website, an e-commerce business, or a specific mobile app, you need to focus on your target group, their needs and desires. An experienced <b>software development company </b>should help you every step of the way, delivering the team tailored to your requirements.</p><p></p><p></p>","timeToRead":8,"shortContent":"<p>Whether you&#39;re in charge of a local small business, an emerging start-up, or an established company, you should realize the importance of your digital strategy and the online presence of your brand.<b> </b></p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"web-development-dos-donts-cover-photo-1.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/web_development_dos_donts_cover_photo_1_f0e18e6d71.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"29","attributes":{"title":"Test front-end almost like e2e but on each commit and without browser","slug":"test-front-end-almost-like-e2e-but-on-each-commit-and-without-browser","pubDate":"2022-01-10","content":"<p>This article consists of two parts that complement each other making a great tool for testing modern apps in a unique and performant way. The first one focuses on mocking test data while the second one describes the advantages of combining it with React Testing Library.</p><h2>I introduce you to factory-girl</h2><p><b>Mocking data for tests</b> is really important, but it’s not always straightforward. Lucky for us, there’s <a href=\"https://www.npmjs.com/package/factory-girl\"><u>factory-girl</u></a> - a really handy library that takes care of this, often time-consuming and rather unpleasant, task. We’ll use factory-girl in a sort of non-ordinary way to <b>make the process of writing tests even simpler and better automated</b>.</p><h2>What we’ll be testing?</h2><p>The scope of those tests includes only the frontend part of the application so there won’t be any actual backend working along. Nevertheless, we’ll be able to check if user’s actions like fulfilling inputs and clicking buttons trigger proper API calls and comprehensively verify whether the user interface responds correctly for received data.</p><h2>A few words about our use case</h2><p>The codebase that is being used to demonstrate the items discussed in this article uses <b>Redux</b>, <b>Entity Adapters</b> from <b>Redux Toolkit</b>, and <b>Redux</b> <b>Saga</b>. Also instead of classic Rest API, the communication between backend and frontend relays on WebSocket events. </p><p>Of course, these conditions are not obligatory for successfully using the tools mentioned above. You can make different choices and adapt testing techniques to fit your needs as things that’ll occur in our scenario can be easily adapted for various sets of technologies.</p><p>In this case, we’ll be<b> testing a team chat application</b> in which one can create a community (kind of a server) and a channel in which people exchange messages.</p><p>Each message must have a cryptographic signature matching its sender’s certificate, otherwise, it won’t be considered valid. Because of that, <b>mocking data for tests requires much more effort than just hardcoding utility objects</b>.</p><h2>So what’s that special about mocking data with factory-girl?</h2><p><b>factory-girl builds models with the given data</b>, caring for all its dependencies (corresponding structures), and then <b>inserts it into the test database</b>. As mentioned before, the app uses Redux so to modify the store one needs to dispatch an action. Thankfully, factory-girl comes with the possibility to <b>provide custom adapters for specific model types</b>. In this case, the adapter will take care of our Redux actions.</p><p>{{codeSnippet,export class CustomReduxAdapter {}}</p><p>Let’s make use of it and create a function getting test scenario’s store as a parameter, which initializes a new factory object and attaches our newly created adapter to it.</p><p>{{codeSnippet,import factoryGirl from 'factory-girl';}}</p><p>Note that factory-girl by default exports a single instance of the class instead of the class itself. That’s because the assumption there is that there’s only one database from which a developer can erase data between tests. In our case, we want to start with a fresh store state in each scenario to be able to <b>test against different behavior based on various data and avoid dependency collisions</b>. </p><h2>Let’s get to work with the data</h2><p>Now that we have this part set up, it’s time to create the factories! We’re going to need a few things to get started. The first one is a community, the top-level structure to which all the other data will refer. All models our frontend app operates on are stored within Entity Adapters. Users may participate in more than one community. In order to manipulate the data inside it, we use an action that will trigger an adapter&#39;s method. This mechanism is going to be the same for basically all the data, which has many advantages but the most important at this point is that it’ll <b>simplify dependency management</b> a lot.</p><p>I assume you’re already familiar with Reducers so I won’t repeat the documentation by explaining how to prepare the slice step by step, but I will provide the most essential part of it which is the exact shape of the communities state and the action creator.</p><p>{{codeSnippet, public communities: EntityState<Community> =}}</p><p>{{codeSnippet,addNewCommunity:}}</p><p>Knowing how it looks, we can prepare a factory for the community by naming it and passing the action that updates the store. If the application depended on different state management, we would probably place some model there. Then we specify properties and we give them default values so <b>the data can be generated automatically </b>even if we don’t provide arguments manually when using the factory.</p><p>Also as the community without a channel is pointless, we’re gonna use the <i>afterCreate </i>hook to create one immediately after creating a community.\nNote that factory-girl comes with a few useful methods that makes it easy to <b>keep mocked data unique and well-organized by simultaneously having it automated</b>. For more detailed information, check its official <a href=\"https://www.npmjs.com/package/factory-girl\">documentation.</a></p><p>{{codeSnippet,factory.define(}}</p><p>That’s just one method of linking dependencies. Let’s investigate another one. When you join a community, you register your unique identity. It holds your username and all the necessary cryptographic data.As it’s been said, the factory you create must set the default values for the model&#39;s parameters. <b>But how to avoid potential errors when there is no valid default value to be set yet?</b> The <i>assoc </i>method comes in handy.</p><p>{{codeSnippet,factory.define(    'Identity',}}</p><p>The Identity cannot live without a community. In this example, we associate a community&#39;s id field which means creating and storing a new one and then using its values as parameters of the desired model.</p><p>Now by mocking the user with a single command, we also create community and public channels under the hood, making sure there will be no problems caused by missing objects.</p><p>{{codeSnippet,const john = await factory.create<}}</p><p>So here comes the real power of this library. By nesting <i>create</i> inside build/create callbacks or using <i>assoc</i> as a default parameter value we not only <b>shorten the path of mocking data but also take care of the whole necessary data structure.</b> </p><p>Here’s a clipping of a store snapshot taken right after performing this single operation. It illustrates how many operations are being performed automatically, making the complete elementary test case setup.</p><p>{{codeSnippet,bardzo długi snipet}}</p><h2>Stay tuned for part II!</h2><p>Now that we’ve spent so much time preparing the mocks, you’ll probably want to put it into action. Stay tuned and look out for the second part of the article, in which we’ll share some of our experience of using React Testing Library.</p>","timeToRead":8,"shortContent":"<p>This article consists of two parts that complement each other making a great tool for testing modern apps in a unique and performant way. The first one focuses on mocking test data while the second one describes the advantages of combining it with React Testing Library.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"lautaro-andreani-UYsBCu9RP3Y-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/lautaro_andreani_U_Ys_B_Cu9_RP_3_Y_unsplash_8fcb0d393f.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Wiktor Sieprawski","Position":"Software Engineer","Avatar":{"data":{"id":"323","attributes":{"name":"wiktor.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/wiktor_e1cd92db5a.jpg"}}}}}]}}},{"id":"28","attributes":{"title":"It's not Lean vs Agile. It's the mix of both that improves the software development process","slug":"its-not-lean-vs-agile-its-the-mix-of-both-that-improves-the-software","pubDate":"2021-10-22","content":"<p>Today, we dive a bit deeper into the subject of IT project management, as it might not be as obvious and straightforward as it seems. When we think of software development project management, Agile immediately comes to mind. No wonder - IT teams have been successfully using it for decades now. But what if we could improve the process even more?</p><p>When it comes to modern project management methodologies there is no competition for Agile and Lean. These two, while having the same goal of improving performance, differ on various levels. The former is perceived to work best in software production, while the latter is widely used in manufacturing. But blindly following this rule when starting a new project can take you nowhere - not every IT project is the same, so why should using the same management methodology work? To understand the root difference between Agile and Lean, let&#39;s go back in time to see how it all started.</p><h2><b>Lean management: a brief history</b></h2><p>The Lean way of thinking took root in the 1940s in Japan when Taiichi Ōhno, one of the managers in Toyota, developed the Toyota Production System to reduce inventory costs and improve efficiency. Besides other principles, TPS used visual signs (does Kanban sound familiar?) to showcase inventory needs exactly when they were required to reduce the cost of overstocking. Soon, Japanese manufacturers were running Western carmakers out of business so they had to adapt. They decided to look into the Japanese way of process management and called it &quot;Lean&quot;. In time, Lean management has spread beyond manufacturing to other branches, like service operations and, eventually, software development.</p><p>At its core, Lean management strives for maximum waste elimination and getting rid of anything that&#39;s not adding value to the process or the product. In software development, waste elimination means no more useless meetings or excessive documentation. We only focus on the relevant features needed and deliver fast. In 2006, Mary and Tom Poppendieck published <i>Lean Software Development. From Concept to Cash, </i>which became a crucial position for those willing to learn more about the techniques and tools used in lean IT projects. Here are the core principles described by the authors:</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Lean_Principles_d512e5c486.png\" alt=\"Lean_Principles.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_Lean_Principles_d512e5c486.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Lean_Principles_d512e5c486.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Lean_Principles_d512e5c486.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Lean_Principles_d512e5c486.png 235w,\" sizes=\"100vw\" width=\"1000px\"></p><h2><b>The rise of Agile</b></h2><p>In February of 2001, a group of seventeen software developers met in Utah to discuss an alternative for the inefficient, yet popular waterfall model used to create digital products. The result of their discussion and brainstorming was the <a href=\"http://agilemanifesto.org/\"><u>Agile Manifesto</u></a>, which states the values and principles of the Agile software development process. In essence, Agile aims to create better digital products. Since 2001 it has developed a myriad of techniques and frameworks that are used and applied in a range of projects, not limited only to digital ones.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Agile_Values_2444752aa3.png\" alt=\"Agile_Values.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_Agile_Values_2444752aa3.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Agile_Values_2444752aa3.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Agile_Values_2444752aa3.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Agile_Values_2444752aa3.png 235w,\" sizes=\"100vw\" width=\"1000px\"></p><p>Besides stating its values, the Agile Manifesto also lays out twelve main principles of creating software development:</p><ol><li><p>The highest priority is customer satisfaction achieved by early and continuous delivery of valuable software</p></li><li><p>Welcome changing requirements, even in late development</p></li><li><p>Deliver working software frequently (weeks rather than months)</p></li><li><p>Close, daily cooperation between business clients and developers</p></li><li><p>Projects are built around motivated individuals, who should be trusted</p></li><li><p>A face-to-face conversation is the best form of communication (co-location)</p></li><li><p>Working software is the primary measure of progress</p></li><li><p>Sustainable development, able to maintain a constant pace</p></li><li><p>Continuous attention to technical excellence and good design</p></li><li><p>Simplicity—the art of maximizing the amount of work not done—is essential</p></li><li><p>Best architectures, requirements, and designs emerge from self-organizing teams</p></li><li><p>Regularly, the team reflects on how to become more effective and adjusts accordingly</p></li></ol><h2><b>What&#39;s so different about Lean and Agile?</b></h2><p>Now that we know the basic principles and values of both methodologies, we can better understand the differences between them. Let&#39;s start with their approach to process speed and iterations. In Lean, we often use Kanban boards to outline the schedule, while in Agile, Scrum seems to be the king.</p><h2><b>Kanban vs. Scrum</b></h2><p>In Scrum, developer teams work in time-boxed sprints, which, in comparison to the Waterfall method, is greatly beneficial and far more effective. But in many cases, the sprints are way too long and can cause very inefficient downtime when developers are forced to wait before updating the code to align with changing customer needs. When the sprints are too short, bigger tasks are portioned into smaller chunks which don&#39;t deliver any value to the customer on their own and can lead to losing the big picture perspective.</p><p>Kanban might be the right approach to address those issues. In Kanban scheduling, there are no sprints, and the workload is limited by how many features can be worked on at a given time. A Kanban board allows the team to visually track the progress and allows for immediate elimination of bottlenecks. As a result of this approach, the team gets more feedback and can react and adapt faster.</p><h2><b>Lean and Agile: It&#39;s not a battle, but a partnership</b></h2><p>So, as it appears, Kanban is great for scheduling and allows for faster reaction to changing requirements and Scrum is perfect for self-organizing agile teams. Is it possible to somehow take the best of both worlds and implement it in a single software development project? It&#39;s not only possible but welcomed and recommended.</p><p>What we often see in IT development projects is the mistake of believing that it&#39;s necessary to choose either Agile or Lean management and then stick to it strictly without exceptions. When in reality, the best we can do is assess the project and then decide which aspects of those methodologies fit certain tasks the best. When we realize that Lean and Agile complement one another, instead of being mutually exclusive, we start benefiting from the best-of-both approach and combine tools, top-performing methods, and other elements to create a custom project management solution to meet the unique requirements of our customers as quickly and efficiently as possible.</p><h2><b>Lean/Agile software development in action: a case study</b></h2><p>Our customer, a very reputable fintech company, was developing a digital product that heavily relied on end-user feedback and data. Originally, we were asked to create a Scrum backlog for the development team, but we soon realized that it might not be the most efficient method for this project. While Scrum allows for frequent iterations, it still wasn&#39;t often enough for our customer. They had to collect data, react to what they learned and deliver improved features almost instantly. There was no time to waste waiting for the sprint to end. That&#39;s when we stepped in and designed a custom delivery method based on Lean management principles mixed with Agile Manifesto fundamentals. Our expert team ended up implementing a successful method for Continuous Delivery paired with the proper and agile pipeline to enable the immediate deployment of every single commit that passes tests.</p><h2><b>Let&#39;s wrap it up</b></h2><p>Agile and Lean management are not enemies. They both offer a plethora of benefits that fulfill different needs and requirements but in the end have the same goal - to deliver a beautiful product with minimum waste and maximum efficiency. They both focus on people as the most important factor in the production process. And yet they are not mutually exclusive - we can take what we need from either one and design our own delivery method to satisfy the customer.</p><p></p>","timeToRead":7,"shortContent":"<p>Today, we dive a bit deeper into the subject of IT project management, as it might not be as obvious and straightforward as it seems. When we think of software development project management, Agile immediately comes to mind. No wonder - IT teams have been successfully using it for decades now. But what if we could improve the process even more?</p>","imageFitContain":false,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"title__1_.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/title_1_4e239b25df.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Olga Degtiarova","Position":"CEO / Co-Founder","Avatar":{"data":{"id":"52","attributes":{"name":"DSC07412.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07412_2a80c9ee47.jpg"}}}}}]}}},{"id":"27","attributes":{"title":"Privatizing the private key in blockchain development with KMS Provider","slug":"privatizing-the-private-key-in-blockchain-development-with-kms-provider","pubDate":"2021-09-10","content":"<h2>The problem of the (not so) private key</h2><p>Every collaborative development venture sooner or later faces the problem of effective, convenient, and secure key management. It gets even worse when it comes to blockchain projects, where the private key used to deploy smart contracts on production holds $$$ worth of ether and usually has the power to govern contracts. To keep the private key safe, a stakeholder would need to run production-related operations by himself. That’s the theory.</p><p>In practice, however, things look different. For many reasons, the stakeholder may not be - and usually isn’t - responsible for deploying, upgrading, or maintaining the code on production, so he entrusts the private key to another person, making it not so private anymore. Devs will ask this person to perform various operations on production by explaining what to do step by step or by providing scripts that require the private key to execute. I can think of many things that can possibly go wrong with this approach:</p><ul><li><p>A person entrusted with the key leaves the project and the key needs to be shared with his successor which may not be so trustworthy,</p></li><li><p>The script given by a dev has malicious code that steals the private key, </p></li><li><p>A person is overwhelmed with devs requests and makes a mistake during an upgrade,</p></li><li><p>A person loses the key...</p></li></ul><p>And so on.</p><p>This sounds scary but due to lack of better tooling, this ‘methodology’ is widely used across Defi projects. What can we do about it?</p><h2>KMS to the rescue</h2><p>One of the most popular ways to deal with secrets in IT is to use “secret as a service” solutions like AWS Key Management Service which makes collaboration effective and secure. Using this service an AWS user can generate a new key and set which IAM users/roles can use it for signing. Most importantly, keys are generated by AWS and there is no way to export them. IAM users can be given access to use the key for signing without learning the underlying private key. In a sense, this workflow is similar to using a hardware wallet, but instead of using physical Ledger Nano, the developer requests that KMS generates a signature.</p><p>When a new team member needs to perform a deployment, they receive an appropriate IAM role and gets access to needed secrets. If a member leaves the team, the IAM role is revoked and there is no risk of disclosure. Using this workflow, the stakeholder of the project remains in control of the private key and can assign and revoke access to it when needed.</p><h2>Using KMS in practice</h2><p>It takes a bit of work to hook KMS and web3 providers together. Since we’re using this approach in Rumblefish across many projects, we’ve decided to open-source the tools we’re using and “pay it forward”. </p><p>We’ve created two packages:</p><ul><li><p><a href=\"https://github.com/rumblefishdev/eth-signer-kms\"><u>https://github.com/rumblefishdev/eth-signer-kms</u></a> is a package that you should use when using web3 or ethers contracts.</p></li><li><p><a href=\"https://github.com/rumblefishdev/hardhat-kms-signer\"><u>https://github.com/rumblefishdev/hardhat-kms-signer</u></a> allows deploying contracts using the HardHat development environment and hardhat-deploy plugin. </p></li></ul><p>In order to create a new Ethereum account, the user needs to create a KMS key. When doing this in the AWS console, this is the correct way to configure the key:</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/marek_obrazek_a3cdaa6eb6.png\" alt=\"marek_obrazek.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_marek_obrazek_a3cdaa6eb6.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_marek_obrazek_a3cdaa6eb6.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_marek_obrazek_a3cdaa6eb6.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_marek_obrazek_a3cdaa6eb6.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p>The key needs to be:</p><ul><li><p>Key type: Asymmetric</p></li><li><p>Key usage: Sign and Verify</p></li><li><p>Key spec: ECC_SECG_P256K1</p></li></ul><p>The next step would be to learn the address of the account that you’ve just created. It’s derived from the public key of the key, but the transition is a tad complicated. </p><p>We usually do it by configuring the provider using one of the packages above and performing the `eth_accounts` call. </p><p>For example, when using a hardhat you can do:</p><p>{{codeSnippet,Privatizing the private key in blockchain development with KMS Provider}}</p><p>Alternatively using the regular web3 provider:</p><p>{{codeSnippet,KMS provider learn address}}</p><p></p><p>For more details of the setup please refer to the Readme of the provider package you’re using.</p><p>Once you know your Ethereum address you can send some ETH to it and you’re all set to start using it for deployments and/or sending transactions.</p><p></p>","timeToRead":6,"shortContent":"<p>Every collaborative development venture sooner or later faces the problem of effective, convenient, and secure key management. It gets even worse when it comes to blockchain projects, where the private key used to deploy smart contracts on production holds $$$ worth of ether and usually has the power to govern contracts. </p>","imageFitContain":null,"facebookImage":{"data":{"attributes":{"name":"LinkedIn_Post__11_.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Linked_In_Post_11_f246718756.png"}}},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"image.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/image_5d1b66a834.png"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"AWS"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Marek Kowalski","Position":"CTO / Co-Founder","Avatar":{"data":{"id":"101","attributes":{"name":"Marek-Kowalski-CEO-Rumble-Fish.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Marek_Kowalski_CEO_Rumble_Fish_fdc397497a.png"}}}}},{"attributes":{"Name":"Daniel Cybułka","Position":"Blockchain Full Stack Developer","Avatar":{"data":{"id":"82","attributes":{"name":"IMG_5321_2.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/IMG_5321_2_fe8a67c7ad.jpg"}}}}}]}}},{"id":"26","attributes":{"title":"MakerDAO, stablecoin innovators & the company behind Dai,  entrust Rumblefish for platform re-write","slug":"makerdao-stablecoin-innovators-and-the-company-behind-dai-entrust-rumblefish","pubDate":"2021-08-24","content":"<p><b>MakerDAO is the company behind DAI, the first truly decentralized stablecoin cryptocurrency on the Ethereum blockchain. Maker has come a long way in a relatively short period of time and in June 2021 Maker Foundation CEO, Rune Christensen, announced the milestone of full decentralization.</b></p><h2><b>The real use case - cryptocurrency exchange protocol upgrade </b></h2><p>Not so long ago at Rumble Fish, we set off on a client journey with Maker that would change the face of their exchange platform. Upon establishing and developing our relationship with MakerDAO we were able to get to the route of the main challenge that they were facing which centered around their cryptocurrency exchange protocol - OasisDex.</p><p>{{linkImage,MakerDAO Case Study}}</p><p></p><h2><b>Re-thinking the strategy with Rumble Fish front-end experts</b></h2><p>Originally developed using the Meteor framework, our client was facing a challenge to scale and maintain which led us to the shared vision of completely reevaluating their strategy and how they speak to their audience. It was quickly established that they would need a team of skilled front-end developers to re-write the platform using a modern technology stack - and we had just the guys for the job!</p><h2><b>Custom software development with Rumble Fish is the key</b></h2><p>At Rumble Fish we are especially proud of and renowned for providing top-quality solutions to entrepreneurs looking to build and launch new products. Using end-to-end solutions, our dedicated, passionate team of IT experts breaks the mold when it comes to using technology to propel businesses to the next level.      </p><h2><b>The results - increased user engagement &amp; successfully delivered end-product</b></h2><p>Having the objectives laid out, our dynamic duo of skilled front-end developers got straight to work and was responsible for carrying out development improvements on the platform whilst working with a multitude of different components including Oasis, Oasis Direct, and Eth2Dai components which are responsible for exchanging DAI, ETH, and MKR assets.</p><p>With the development of the exchange platform and the surrounding components at the forefront of the operation, our tech experts also managed to increase platform engagement and perceived authority among clients, all whilst solidifying a long-term working relationship with MakerDAO - pretty special, right?</p><p>Don’t take our word for it, let’s hear from the customer himself:</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/quote_rch_30ba6c765f.PNG\" alt=\"quote_rch.PNG\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_quote_rch_30ba6c765f.PNG 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_quote_rch_30ba6c765f.PNG 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_quote_rch_30ba6c765f.PNG 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_quote_rch_30ba6c765f.PNG 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p></p><p>With more DAO-based projects underway, watch this space to see what wonders we can work once again!</p>","timeToRead":3,"shortContent":"<p><b>MakerDAO is the company behind DAI, the first truly decentralized stablecoin cryptocurrency on the Ethereum blockchain. Maker has come a long way in a relatively short period of time and in June 2021 Maker Foundation CEO, Rune Christensen, announced the milestone of full decentralization.</b></p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"img-2_2x.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/img_2_2x_8785deb4f1.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Agnieszka Dobosz","Position":"Head of Business Development","Avatar":{"data":{"id":"7","attributes":{"name":"1560169564058__2_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1560169564058_2_9b91ff3ca4.jpg"}}}}}]}}},{"id":"25","attributes":{"title":"Why should we use React Native and will it be the best choice for my business?","slug":"why-should-we-use-react-native","pubDate":"2021-07-02","content":"<p>The mobile industry is experiencing a significant boom right now and from the previous events of the last 18 months, it shows no signs of slowing down. Convenience has become king and if you’re in need of a service, you’ve probably heard ‘there&#39;s an app for that’.</p><p>As we continue to shift our lives online there is no shortage of apps waiting to accommodate our every need, from fitness to entertainment and transport to food, what is certain is that opportunity is knocking.  </p><p>App revenue comes in different shapes and sizes, being generated from downloads, in-app purchases and advertising and by 2023 the overall app industry estimate is set to reach staggering heights to the tune of $935 billion.</p><p>\n</p><p>So, just how do you plan to capitalize on the mobile app revolution to provide seamless integration with a mobile OS and what solutions will be the best fit for your business. Enter React Native and let&#39;s take a look at why (or why not) this framework may be the key to your next business app decision. </p><p>\n</p><h3><b>What exactly is React Native?</b></h3><p>\n</p><p>If you’ve used Airbnb, Netflix or Uber then you’ll already be a UI statistic for some major global players that have journeyed down the route of React Native which essentially, is an open-source framework that can be used to develop mobile applications in JavaScript, targeting both iOS and Android platforms.</p><p>The story of React Native started with Facebook who, at the time, were using server-based rendering for its app with a mix of JavaScript and PHP. Keen to provide a UI update and move towards a native mobile approach for its users on both platforms (IOS and Android) Facebook came up with React Native. A solution to bring together a single team for the development of the App for both platforms using one language. One team, one code, multiple deployment.  </p><p>\n</p><h3><b>So why is this Important?</b></h3><p>\n</p><p>Developing a mobile application for both iOS and Android has historically required two different development approaches: using Objective-C or Swift for iOS, and Java for Android. Finding developers with both skill sets is rare, and many companies have had to set up two teams of developers, one for each platform – an expensive proposition.</p><p> </p><p>To overcome this, some organizations tried developing Web-based mobile applications using HTML and JavaScript. While this simplified the development approach, Web-based mobile apps lack a performant UI and can be challenging to run offline without an Internet connection. </p><p> </p><p>React Native aims to be the best of both worlds. Developers write their application once using JavaScript, and can generate versions for both iOS and Android. Instead of using a Web based UI, React Native binds to native UI components – creating apps that look and feel indistinguishable from those written using Swift or Java. Finally, when it comes to sharing the app with users, a React Native application can be uploaded and distributed via app stores</p><p>\n\n\n</p><h3><b>How popular is React Native and what does the future hold?</b></h3><p>\n</p><p>The very purpose of React Native as mentioned has gone a long way in proving that it is a very popular way to conveniently build apps for cross function mobile applications. Referring to the actual companies that have utilized its features, take a look at the app store stats below and you’ll be sure to recognize some big hitters.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/jpg_react_native_afc3b2acb2.png\" alt=\"jpg_react_native.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_jpg_react_native_afc3b2acb2.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_jpg_react_native_afc3b2acb2.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_jpg_react_native_afc3b2acb2.png 194w,\" sizes=\"100vw\" width=\"750px\"></p><p>React Native is not only surviving, it&#39;s thriving, and as one of the biggest names on the scene for building complex apps that provide a heightened user experience it looks like it’s here to stay. With its flexibility between platforms and contribution towards experience, React Native has fared very well against others, as illustrated below.</p><p>\n\n\n\n\n\n\n\n\n</p><p><i>Cross-platform mobile frameworks used by software developers worldwide in 2019 and 2020 (source: Statista)</i></p><p><i></i></p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/wykres_react_native_e35f7cffaf.png\" alt=\"wykres_react_native.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/large_wykres_react_native_e35f7cffaf.png 1000w,https://strapi-uploads-staging-aldnr.rumblefish.dev/small_wykres_react_native_e35f7cffaf.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_wykres_react_native_e35f7cffaf.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_wykres_react_native_e35f7cffaf.png 245w,\" sizes=\"100vw\" width=\"1000px\"></p><p>With the recent release of Native 0.62. Which contained critical bug fixes and performance improvements, there’s more on the horizon and according to React Native developers they will be applying lessons from the last 5 years of operation to make the framework more efficient and more modern than ever.</p><p>\n\n</p><h3><b>Why should we use React Native and will it be the best choice for my business?</b></h3><p>\n</p><p>As React Native continues its rise to platform stardom, what is clear is that community support is growing along with a very healthy market share in the industry. As users continue to use the services of the big known names that we’ve mentioned, the feel, need and comfort of Native Apps is becoming more apparent. </p><p>\n</p><h3><b>One code base, one language</b></h3><p>\n</p><p>Some of the biggest advantages come from why the platform was originally created, and this includes having one code base that will be fully functional for Android and iOS using the incredibly popular JavaScript. Not only does this mean you’ll only need one development team, but also its ease of use with this language will not cause any major headaches. Developers can celebrate in the knowledge that they can integrate 90% of the native framework for reusing codes for both operating systems.</p><p>\n</p><h3><b>Built, used and trusted by experts</b></h3><p>\n</p><p>Community support can be invaluable and React Natives’ open source allows developers to share their knowledge and skill set which is accessible to all. </p><p>To date, this community has reached nearly 50,000 active members and improvements are constantly being made to ensure that you can save time in finding the answers you need to quickly and efficiently solve your issues.</p><p>\n</p><h3><b>Time and Money</b></h3><p>\n</p><p>Using React Native can significantly cut costs, mainly related to having one team rather than two for development and maintenance. Its ease of use is equally just as helpful as it has been shown to cut down on the time it takes to bring the app to market with a near 40% reduction in development effort compared to duplicating the work needed for both Android and iOS.</p><p>\n\n</p><h3><b>Looks and Performance </b></h3><p>\n</p><p>There have been many discussions regarding the performance of React Native in that it doesn’t use a mobile apps native language. This however has little bearing on the overall user experience, and the impressive near-native performance lets you achieve a truly similar result to that of a native app.</p><p>The very fact that React Native compiles and wraps existing native code via a so-called ‘bridge’ shows just how closely React Native replicates something of a Native feel.</p><p>\n</p><p>Despite using JavaScript, applications written using React Native still offer comparable performance to applications written in Swift/Java, especially as all of the UI is rendered using native components.</p><p>For applications that require additional performance (e.g., access to the GPU for video-intensive tasks), React Native offers a “bridge” where developers can bundle native code with their JavaScript code</p><p>\n\n\n</p><h3><b>What about the drawbacks?</b></h3><p>\n</p><p>It’s clear that for many reasons, Native React is making its mark but as with every coin, there are two sides and it’s important to summarize some potential drawbacks when thinking about working with this platform.</p><p>\n</p><h3><b>Still relatively new</b></h3><p>\n</p><p>Compared to other mobile app development technologies, React Native is still relatively new and when a new upgrade is released it can take time and effort to implement these features on a more regular basis. It’s also important to note that not all codes are compatible with React Native, and so this may require more work from the developers side to write the required Native Code when necessary.</p><p>\n</p><h3><b>Building a cross-platform team</b></h3><p>\n</p><p>Although having one team is a huge advantage when it comes to development costs, the knowledge base needed will have to cover web technologies such as JavaScript and native technologies to deal with issues that may arise from cross-platform applications. This could have some bearing on selection of the team as opposed to having two separate ones who are experts in their own field.</p><p>\n</p><h3><b>Compatibility and troubleshooting</b></h3><p>\n</p><p>As popular as React Native is, it’s still in the beta phase. If there are issues with debugging then this could slow things down, especially if this is a relatively new area for developers. Again the balance between how much time troubleshooting takes rather than using an alternative more recognized platform will need to be taken into consideration.</p><p>\n\n</p><h3><b>Is it right for my project?</b></h3><p>\n</p><p>If you’re wondering whether React Native is right for you and your project, it’s fair to say that it is one of the most popular platforms out there being used for creating some great mobile apps that have a smooth, sleek and native feel with a reduced, less laggy loading time.</p><p>The rate of growth linked with the time and financial saving capabilities should make it a serious contender for upcoming projects, and there’s no lack of support as it gains momentum.</p><p>Developers can be safe in the knowledge that they can bring their existing experience to the table, and this will only be a benefit when adding code where it&#39;s needed within the platform.</p>","timeToRead":8,"shortContent":"<p>The mobile industry is experiencing a significant boom right now and from the previous events of the last 18 months, it shows no signs of slowing down. Convenience has become king and if you’re in need of a service, you’ve probably heard ‘there&#39;s an app for that’.  </p>","imageFitContain":false,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"Mariusz_w_React.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Mariusz_w_React_41ac9a22fe.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"24","attributes":{"title":"How to run NodeJS (...and many others) inside your Android app","slug":"how-to-run-nodejs-and-many-others-inside-your-android-app","pubDate":"2021-07-01","content":"<p>It may not be the most essential thing in mobile development, but sometimes you get to the point where there is no option but to do something unusual in order to make your project as awesome as you want it to be. In my case it was all about running software written in NodeJS as a Java process from my app’s service.</p><p>Sample repository is available at <a href=\"https://github.com/siepra/node-on-android-demo\"><u>https://github.com/siepra/node-on-android-demo</u></a></p><h1>Where do we start?</h1><p>\nAndroid is basically Linux. This means that we can execute ELF (Executable and Linkable Format) files which can represent products of a compiler like object code or shared libraries. But why is it important for us? Well, because thanks to that, we’re able to execute any binary which we can build for desired ABI.</p><h1>Let’s build some packages</h1><h2>\nFind a proper tool</h2><p>Termux comes in handy here. Termux is an open source project that emulates a terminal and provides a Linux environment on Android. But the most important thing in our case is that it allows us to build a variety of packages like, among many others Git, Tor, Python and well… NodeJS. In order to prepare a working binary, we have to clone the termux-packages repository from <a href=\"https://github.com/termux/termux-packages\"><u>https://github.com/termux/termux-packages</u></a> and configure it to fit your needs. </p><h2>Set up the environment</h2><p>Termux provides a Docker container with a build environment which is the easiest and fastest way to start building packages. Inside the container we can find a file structure that mimics a real Android environment. Some packages may want to make use of the system libraries. By default, they’ll be linked within the app package directory as that’s exactly where they are during the build. But when installed on user devices, they won’t be there. Instead, when trying to check that path the app will get a “file not found” response and will start looking for them within the system. We should keep in mind that the app is limited in accessing files on the device, only to its own files and system libraries. If the app tries to search for dependencies in the other’s app directory, which it is not permitted to access, it will get a “permission denied” and throw an error. To remedy this, we should ensure that during the build, all the paths will be the same as on the final Android device.</p><p>\nUnder the <i>termux-packages/scripts</i> folder you’ll find the <i>properties.sh</i> file. TERMUX_APP_PACKAGE var should be changed to fit our app package name. In this example it will be <i>com.myapp</i>. After that, you can run the container. With Docker installed and running, the only thing to do is to run the following command from inside the termux-packages directory.</p><p></p><p>{{codeSnippet,node-js1}}</p><p>The next step is to rename the root data directory. Navigate up within docker files with</p><p>{{codeSnippet,node-js2}}</p><p>Then change the com.termux directory name to the one you setted up in <i>properties.sh</i>.</p><p>{{codeSnippet,node-js3}}</p><h2>Build libnode.so for your app</h2><p>Now you’re ready to build packages! Come back to <i>/home/builder/termux-packages</i> and run build command<i> </i>with proper attributes (the wiki page about building packages can be found here <a href=\"https://github.com/termux/termux-packages/wiki/Building-packages\"><u>https://github.com/termux/termux-packages/wiki/Building-packages</u></a>)</p><p>I’ll build arm64-v8a NodeJS for purpose of this tutorial</p><p>{{codeSnippet,node-js4}}</p><p>Here comes the moment to get some coffee or take a walk as we have to wait for the package to build.</p><p>After some time you’ll be ready to get our freshly compiled .so file with all its dependencies. By default, generated files can be found under the <i>debs</i> folder. You can also find them inside container’s files at <i>/data/data/com.myapp/files/</i>.</p><h2>Get corresponding files</h2><p>Besides package binary we also need to take care of its dependencies. They should also be present inside <i>debs</i>, but the easiest way is to copy them directly from the place where they were generated during the package build process. That will additionally assure us that there will be no linking problem at runtime after we execute the desired package.\nIn order to copy anything from docker container to the local file system we need to check out container id with <i>docker ps</i> command and then use it with the following pattern</p><p>{{codeSnippet,node-js5}}</p><p>which, in our case <i>src-path</i> is  <i>/data/data/com.myapp/files/usr/lib </i>and is the directory where all the dependencies for our package are stored.</p><h1>Leap into app source</h1><h2>Implement native libs into project</h2><p>Now that we have all we need to get on with it, there’s time to integrate those freshly generated binaries (which from this time we’ll be calling native libs) into our app.</p><p>\nStarting from Android 10, files residing in the app home directory can no longer be executed. Executable must be placed inside the jniLibs folder. Android studio will do it for us if we add following lines in the build.gradle file.</p><p>{{codeSnippet,node-js6}}</p><p>Additionally, we can add directories for specific abis and handle a situation where someone is trying to run a program on a device having an unsupported architecture.</p><p>Binary file must be placed inside that folder with <i>lib</i> prefix and <i>.so</i> extension.<code> </code></p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_28_10_13_02_a7abb5d0dc.png\" alt=\"Screenshot_from_2021-06-28_10-13-02.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_28_10_13_02_a7abb5d0dc.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_28_10_13_02_a7abb5d0dc.png 245w,\" sizes=\"100vw\" width=\"500px\"></p><p><code> </code>\nWe should also add the following line to the application tag in the manifest file...</p><p>{{codeSnippet,node-js7}}</p><p>...and point libs as gradle dependencies.</p><p>{{codeSnippet,node-js8 2}}</p><h2>Prepare linked libraries</h2><p>Let’s take care of the libraries that the desired package is going to use. Ultimately you’ll probably want to download them through the web at initial run of the application as they may occupy a lot of space and make your app heavy which serves as a great disadvantage if you want to share your product via Google Play. But to simplify things  a little bit, for this example we’ll just treat them as regular assets (note that they won’t be executed but read, so they don’t need to be treated as jniLibs).</p><p>Create assets folder under <i>app/src/main</i> and place there libraries previously copied from docker container, packed into .zip archive (again it would be great if we divide them into proper abis). </p><p>As we need to pass the <i>LD_LIBRARY_PATH</i> environment variable to the process, we have to get the absolute path to the accessible folder containing required dependencies. The contents of project&#39;s assets folder are packaged in the APK file and it’s entries can be accessed only through input streams with the help of <i>AssetManager</i>. Because of that, we must copy them into the app’s files directory which will be available for us on runtime.</p><p>We need to add Apache Commons IO as a dependency in module build.gradle first.</p><p></p><p>{{codeSnippet,node-js8}}</p><p>Then we’ll create a utility class for unpacking our assets. We’ll pass context and path to assets we want to unpack, as it’s parameters. Then, we shall implement methods for copying entries extracted from the .apk file and write them inside an accessible folder.</p><p>{{codeSnippet,node-js9}}</p><p>Now we can use it in the MainActivity <i>onCreate()</i></p><p>{{codeSnippet,node-js10}}</p><h2>Run node service</h2><p>Finally it is time to create a service for running NodeJS. Its process should run in the background thread. </p><p>Prepare a command as an array. I created a simple index.js file that prints a string to the console and I put it in the assets just like we did with libraries. <i>nodeAppPath</i> is the absolute path to this file. Of course, instead you can use any parameter that is supported by the program, e.g. <i>-h</i> or <i>-v</i>.</p><p>{{codeSnippet,node-js 11}}</p><p>Create a process builder with spreaded command as a parameter. We’ll also pass an absolute path to the folder containing assets unpacked in the previous steps, as <i>LD_LIBRARY_PATH</i> environment variable. It must be the same path that was provided to the <i>installAssets</i> method.</p><p>{{codeSnippet,node-js12}}</p><p>Now we can start the process. We have to run it in the directory containing the NodeJS binary</p><p>{{codeSnippet,node-js13}}</p><p>Last but not least we can get output and see what the process returns</p><p>{{codeSnippet,node-js14}}</p><p>In logcat we can see the result of our program</p><p>{{codeSnippet,node-js15}}</p><h1>That’s it</h1><p>\nAs you can see, Termux with its ability to build packages for Android is a powerful tool you can use for various scenarios. It sometimes comes in handy to use ready-made software written in not natively supported technology, instead of spending time on re-developing the same thing in different language. </p><p>It was  really fun to get all the things mentioned above to work. I hope someone will find this article useful and reap the benefits of how nice it is to work with native libraries on mobile.</p><p>Special thanks to Marek Kowalski for his guidance, and Emilia Marczyk for encouraging me to write this article.</p>","timeToRead":8,"shortContent":"<p>It may not be the most essential thing in mobile development, but sometimes you get to the point where there is no option but to do something unusual in order to make your project as awesome as you want it to be. In my case it was all about running software written in NodeJS as a Java process from my app’s service.</p>","imageFitContain":false,"facebookImage":{"data":{"attributes":{"name":"article_bg.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/article_bg_e4a2d66bc4.png"}}},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"article_bg.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/article_bg_e4a2d66bc4.png"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Mobile development"}],"authors":{"data":[{"attributes":{"Name":"Wiktor Sieprawski","Position":"Software Engineer","Avatar":{"data":{"id":"323","attributes":{"name":"wiktor.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/wiktor_e1cd92db5a.jpg"}}}}}]}}},{"id":"23","attributes":{"title":"How to split git monorepo like a boss?","slug":"how-to-split-git-monorepo-like-a-boss","pubDate":"2021-06-09","content":"<h2><b>Why?</b></h2><p>Nowadays, it is hard to imagine a software development team without a Version Control System. For the past 10+ years, git has been rocking  that field with its fantastic branching capabilities, allowing agile teams to benefit from the feature branch workflow. Initially, git was commonly adopted by open-source projects, but we’ve watched its rapid growth over the years in the enterprise as well. </p><p>Many companies start their technological journey from a single repository, representing a product they are launching with. Engineering is about constant evolution, and in  enterprise, evolution means growth. As the product grows, so does the company. Eventually, more and more teams start to work on  significantly bigger products making it  reasonable to split the initial codebase into smaller units to more efficiently distribute the responsibility for certain parts of the application across different teams.</p><p>Depending on the scale of the initial project, dynamics of development, the codebase itself and  the point in time when a decision to perform the split was made, the repository can already contain 10,000s of commits touching thousands of files across the project. Ideally, it’s best  to keep the history clean and - most importantly - relevant on brand new repositories you are just about to set. It is not always an easy constraint to fulfill, so let me walk you through some tools and ideas that might come in handy during this process.</p><h2>\n<b>Sample repository</b></h2><p>Before we begin our practice, I assume you already have a basic understanding of git. I have prepared a sample repository to be used for evaluating different strategies. Let&#39;s clone it first:</p><p>{{codeSnippet,Monorepo 123}}</p><p>The repo consists of 4 empty React applications created with create-react-app utility under ./apps directory:</p><ul><li><p><i>app1</i></p></li><li><p><i>app2</i></p></li><li><p><i>app3</i></p></li><li><p><i>app4</i></p></li></ul><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_10_38_42_4026827428.png\" alt=\"Screenshot_from_2021-06-09_10-38-42.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_10_38_42_4026827428.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_10_38_42_4026827428.png 245w,\" sizes=\"100vw\" width=\"500px\"></p><p>There are no modules shared between the apps, nor any configuration. It is just some standalone apps that happen to be located under the same repository. The repo&#39;s master branch has a couple of commits (19 to be precise) touching different directories around the repo. There are 4 application-specific commits in each of the apps, 1 commit adding shared .gitignore, another one adding shared README.md, and 1 commit touching files across all four apps. Later on, we will attempt to rewrite these to keep our history relevant per app. But first...</p><p><b>If you do not care much about the history...</b></p><p>... an approach I personally side with,  start off with something elementary, and for those who are not very familiar with git VCS, let&#39;s consider the simplest thing we can do to split our basic-monorepo-example repo.</p><p>There are 4 apps so let&#39;s make 4 copies of the repo:</p><p>{{codeSnippet,Monorepo 11}}</p><p>Next, we will focus on the first of the apps:</p><p>{{codeSnippet,Monorepo12}}</p><p>As this section title states - for now, we will overlook the history, so let us step out of the git world for a second by removing the git repository but keeping our source code. We will initiate a new repository as soon as we are done with all the necessary changes surrounding the project.</p><p>{{codeSnippet,monorepo13}}</p><p>Right now, we would like to move our ./apps/app1 to ./app and get rid of the ./apps folder.</p><p>{{codeSnippet,Monorepo14}}</p><p>It looks like we are done here, so now it is time to initiate our new repo:</p><p>{{codeSnippet,Monorepo15}}</p><p>As we have an empty repository, we need to add our project&#39;s files to the staging area:</p><p>{{codeSnippet,Monorepo16}}</p><p>And commit them:</p><p>{{codeSnippet,Monorepo17}}</p><p>Finally, we can add a remote for our repo:</p><p>{{codeSnippet,Monorepo18}}</p><p>As you can see, we just created a new repository from the old one. Our new repo contains a single application, README.md and .gitignore, but we also got rid of the entire history. If this is what you are looking for - repeat the above steps for the other apps, and you are done. Otherwise, let&#39;s try to perform our changes on the <b>app2</b>, but this time we will not remove the .git folder.</p><p>{{codeSnippet,Monorepo19}}</p><p>Now briefly check that our history is there:</p><p>{{codeSnippet,Monorepo20}}</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_10_24_56_b10503ebc6.png\" alt=\"Screenshot_from_2021-06-09_10-24-56.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_10_24_56_b10503ebc6.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_10_24_56_b10503ebc6.png 228w,\" sizes=\"100vw\" width=\"500px\"></p><p>Now let&#39;s perform the similar operations as we did for <b>app1</b>, but using git:</p><p>{{codeSnippet,Monorepo21}}</p><p>After doing so, it is worth checking the repository status:</p><p>{{codeSnippet,Monorepo22}}</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_11_41_50_87b36bad80.png\" alt=\"Screenshot_from_2021-06-09_11-41-50.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_11_41_50_87b36bad80.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_11_41_50_87b36bad80.png 220w,\" sizes=\"100vw\" width=\"500px\"></p><p>At this point, our changes are staged, but they still need to be committed.</p><p>{{codeSnippet,Monorepo23}}</p><p>If we check our repo&#39;s remotes, we still can see the old remote on the list:</p><p>{{codeSnippet,Monorepo24}}</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_11_44_45_40afe51271.png\" alt=\"Screenshot_from_2021-06-09_11-44-45.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_11_44_45_40afe51271.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_11_44_45_40afe51271.png 245w,\" sizes=\"100vw\" width=\"500px\"></p><p>We shall remove the current origin, and add a new one:</p><p>{{codeSnippet,Monorepo25}}</p><p>The solution we used for <b>app2</b> is noticeably better than the one we used for <b>app1</b>, as it keeps the history, but the result is far from being perfect, as we still see all the irrelevant commits from other apps. Additionally, our changes regarding directory structure required committing, so we expanded our history rather than making it cleaner. Let&#39;s now check what we can do about it.</p><h2><b>When you care about collaborators</b></h2><p>I am definitely a fan of doing things thoroughly. I always anticipate that there will be a number of people working on where I left off, so it is crucial to make their life easier. Keeping the history clean and relevant is one of the things that maintainers can do to save developers some additional work, as quite often we (developers) search the history for some answers, mostly <i>&quot;How the hell did this get here?&quot;</i>...</p><p>Luckily for us, git comes with a couple of tools to rewrite history. One that you might be familiar with is git rebase with --exec param. It allows you to execute some shell commands or scripts on every commit. However, this is not quite the tool I would like to focus on now. We still have 2 applications left in our repo so let&#39;s try to achieve a cleaner history on them. This time we will use git-filter-branch.</p><p>{{codeSnippet,Monorepo26}}</p><p>According to git docs, git-filter-branch lets you rewrite the revision history applying custom filters to each commit. The tool is quite powerful, as the filters might be applied on the index, commit, message, tag name, tree and more. In our basic-monorepo-example we can leverage a --tree-filter to perform the cleanup, leaving only relevant commits in our history.</p><p>At this point it is worth to mention, that git-filter-branch upon execution displays a friendly warning:</p><p><i>WARNING: git-filter-branch has a glut of gotchas generating mangled history rewrites.</i></p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_11_48_59_20c5d71399.png\" alt=\"Screenshot_from_2021-06-09_11-48-59.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_11_48_59_20c5d71399.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_11_48_59_20c5d71399.png 245w,\" sizes=\"100vw\" width=\"500px\"></p><p>You can read more about these gotchas on the <a href=\"https://git-scm.com/docs/git-filter-branch\">git-filter-branch official docs</a> . For educational purposes let&#39;s ignore the warning for now.</p><p>{{codeSnippet,Monorepo 27}}</p><p>The above command applies a tree filter on every commit in our current branch&#39;s history. The filter performs git mv and git rm as we previously did. --ignore-unmatch in git rm ensures the command&#39;s exit code is always 0, so even if the directory does not exist, the command will not fail. The --prune-empty tells git-filter-branch to remove all empty commits, and our tree filter should make at least a couple of commits blank.</p><p>The result of executing the above command should be 7 commits left in our history - 1 commit for .gitignore, 4 application specific commits, 1 commit touching all the applications (now you can notice only the app-relevant file modified), and 1 for common README.md. Right on!</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_11_52_00_50c836188f.png\" alt=\"Screenshot_from_2021-06-09_11-52-00.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_11_52_00_50c836188f.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_11_52_00_50c836188f.png 245w,\" sizes=\"100vw\" width=\"500px\"></p><p>We can now remove the old origin, and add a new one:</p><p>{{codeSnippet,Monorepo28}}</p><p>However, there is one more step we need to take to consider our job done. The problem with git-filter-branch is that we cleaned our history , but deleted objects that remained in our refs (check with git log --all --oneline), as git does everything not to lose anything. </p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_12_01_16_0c6966d674.png\" alt=\"Screenshot_from_2021-06-09_12-01-16.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_12_01_16_0c6966d674.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_12_01_16_0c6966d674.png 226w,\" sizes=\"100vw\" width=\"500px\"></p><p>Following <a href=\"https://git-scm.com/docs/git-filter-branch#_checklist_for_shrinking_a_repository\">the official docs</a>, we need to tell git to forget our deleted objects. We will remove refs backed up by git-filter-branch, expire the reflog and run the git garbage collector.</p><p>{{codeSnippet,Monorepo29}}</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_12_05_40_2df2a4df99.png\" alt=\"Screenshot_from_2021-06-09_12-05-40.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Screenshot_from_2021_06_09_12_05_40_2df2a4df99.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Screenshot_from_2021_06_09_12_05_40_2df2a4df99.png 245w,\" sizes=\"100vw\" width=\"500px\"></p><p>And that&#39;s it!</p><h2><b>But what about the warning?</b></h2><p>As mentioned before, when running git-filter-branch we get a warning about its gotchas. The very same warning brings up another tool we will try on our final application.</p><p>{{codeSnippet,Monorepo30}}</p><p>Git project now recommends using <a href=\"https://github.com/newren/git-filter-repo/\">git-filter-repo</a> instead of git-filter-branch. The only inconvenience with git-filter-repo is that it is a 3rd party Python script, and not an official git command, so it needs to be installed separately. Assuming you do have Python &gt;= 3.5 installed on your machine you can run:</p><p>{{codeSnippet,Monorepo31}}</p><p>From now on we can use filter-repo similarly to any git command, so let&#39;s try the following:</p><p>{{codeSnippet,Monorepo32}}</p><p>As you can see, filter-repo is a bit different in terms of supplied parameters compared to filter-branch. You can still apply filters with supported callbacks (eg. blog, commit, tag), where the executed callback code is written in Python rather than shell commands. filter-repo also comes with some convenience callbacks such as filename, message and email. However, callbacks are a matter for another article, so to find out more about them please refer to the [official docs](https://github.com/newren/git-filter-repo/blob/main/Documentation/git-filter-repo.txt) for now.</p><p>The above command depends on another filter-repo convenience. --path parameter tells filter-repo what file or folder we would like to keep in our repository. Subsequent --path-rename renames (or rather moves) the kept file or directory to a new location, and finally --path-regex tells the command to keep everything but the apps directory. You are free to use multiple --path for a single run, so the above could be otherwise written as:</p><p>{{codeSnippet,Monorepo33}}</p><p>The result is similar to what we achieved with filter-branch, but filter-repo claims to be much faster (and it is actually visibly faster when working on large repos) and safer.</p><p>One more perk of using git-filter-repo instead of git-filter-branch is that after a rewrite we do not need to expire the reflog and run a garbage collector - filter-repo does that step for us. Viola!</p><h2><b>Conclusion</b></h2><p>My aim was to walk you through some ideas on how to perform a monorepo split. The sample repository is a very basic example of split problems you might encounter, however the actual strategy for performing a split will strongly depend on the repository&#39;s code. As with all the above   operations you might do at VCS level, there is still code that would need to reflect this for example, your directory structure changes etc. I rather wanted to give you a taste of how you could approach the monorepo split, and point out that there is no one &quot;proper&quot; way of achieving what you&#39;re looking for. If you found the article&#39;s title a bit misleading, I still hope you learned something new, even if you’re not quite feeling like a boss and owning monorepo splits, yet. <b>Happy DevOpsing!</b></p>","timeToRead":10,"shortContent":"<p>Nowadays, it is hard to imagine a software development team without a Version Control System. For the past 10+ years, git has been rocking  that field with its fantastic branching capabilities, allowing agile teams to benefit from the feature branch workflow. </p>","imageFitContain":false,"facebookImage":{"data":{"attributes":{"name":"Screenshot_from_2021-06-09_10-24-56.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_10_24_56_b10503ebc6.png"}}},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"Screenshot_from_2021-06-09_10-24-56.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Screenshot_from_2021_06_09_10_24_56_b10503ebc6.png"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Tomasz Los","Position":"Senior Software Engineer","Avatar":{"data":{"id":"249","attributes":{"name":"lostomek.jpeg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/lostomek_28b00d4687.jpeg"}}}}}]}}},{"id":"22","attributes":{"title":"Why is Solana Better for DeFi Product Development?","slug":"why-is-solana-better-for-defi-product-development","pubDate":"2021-04-22","content":"<p>DeFi applications currently use blockchains like Ethereum, but there’s a change in the air. We’re bound to see more and more projects switching to no-sharding, low-cost and high-speed blockchains. The public blockchains underlying many DeFi apps today can’t process large volumes of data at a scalable speed. </p><p>This is an amazing opportunity for new DeFi projects to cross the chasm and deliver a great product that comes with minimal fees.</p><p>Solana is one of the blockchain technologies that could be at the center of DeFi soon. Read this article to learn what Solana is and why it’s a better option for developing DeFi products.</p><h2>What is Solana?</h2><p>\nSolana (SOL) is an open-source blockchain that opens the door to fast, secure, and scalable decentralized apps. Currently, Solana supports 65,000 TPS (transactions per second) and 400ms Block Times. </p><p>The primary objective of Solana software is to make it possible to scale the transaction proportionally to the network bandwidth. The idea is to match all  three requirements of the blockchain: scalability, security and decentralization. </p><h2>Why is Solana better for DeFi product development?</h2><h3>Lightning fast</h3><p>\nSolana supports <a href=\"https://genesisblockhk.com/what-is-solana/\"><u>65,000 TPS</u></a> (transactions per second). In test lab conditions it could scale to <a href=\"https://github.com/solana-labs/solana/releases/tag/v1.2.0\"><u>111,000</u></a> (in May 2020). Solana was designed to scale together with hardware and bandwidth, so its performance will improve together with the industry’s growth.</p><h3>Cost-effective</h3><p>\nSolana’s transaction fee is very small: $0.00001. This is a perfect scenario for DeFi applications that want to keep costs at bay.</p><h3>Decentralized</h3><p>\nDecentralization is the core requirement of blockchain and Solana meets it perfectly. The Solana MainNet currently has 128 independent validators securing the Solana Blockchain Network.</p><h3>Open source</h3><p>\nAnyone can download Solana’s code straight from <a href=\"https://github.com/solana-labs/solana\"><u>Solana Lab’s Github</u></a> and get a node running quickly. The team did a great job at explaining how the technology works in <a href=\"https://solana.blog/inside-the-solana-docs-creating-wallets-airdrops-and-sol-transfers/\"><u>Solana Docs</u></a>.</p><h3>Reliable partner</h3><p>\nIn March 2020, Solana announced its partnership with Chainlink to provide high-speed Oracle data feeds to DeFi apps. The idea is to make Chainlink the Oracle solution for this project but also the standard across all Solana Dapps. That’s how Dapps are going to get secure access to all the inputs and outputs they require, avoiding major pitfalls when deploying self-made Oracles (from delays and extra costs to serious security issues).</p><p>Another important partnership is with the stablecoin token bridge Terra. The goal is to build a new high-speed token bridge that streamlines the transfer of Terra stablecoins into the Solana Dapp ecosystem. These tokens are the first stablecoins on the network. Solana aims to open the door to more developers and new applications that may require price-stable payments.</p><h3>Built on Rust</h3><p>One of the fastest-growing languages according to <a href=\"https://octoverse.github.com/\"><u>Github’s The State of the Octoverse</u></a><u> is </u>Rust, the language underlying Solana. Rust helped the team to solve issues around memory safety and thread concurrency. Rust is also used in <a href=\"https://developers.libra.org/docs/community/coding-guidelines\"><u>Facebook’s Libra Project</u></a>.</p><h2>Working with Solana &amp; Rust</h2><p>“Solana makes it possible to write smart contract code in many programming languages. At Rumble Fish, we chose Rust because we like how strict it is when it comes to the compilation time. It’s easier to avoid mistakes in this context,” says Marek Kowalski, CTO and co-founder of Rumble Fish.</p><p>There’s a framework emerging today called <a href=\"https://project-serum.github.io/anchor/getting-started/introduction.html\"><u>Anchor</u></a>. It plays the same role in Solana as Truffle does in Ethereum. </p><h2>Building a project with Solana</h2><p>I think Solana is a good choice for building an exchange on the Uniswap protocol. Creating an NFT token is easy; there’s a prebuilt contract that generates all the tokens. NFT tokens on Solana are just tokens with a totalSupply of 1. In this case, the token’s cost is $0.02 per the current price of SOL (the native currency of Solana used for paying the transaction costs). Transaction throughput in Solana looks really good. Note that SOL is very cheap; we could make the system much more visibly integrated with blockchain than nbatopshots.</p><h2>Wrap up</h2><p>\nI hope that this article helped you to understand the potential of Solana on the DeFi scene. This introduction is aimed to show you that it pays to keep a close eye on open-source blockchain projects. Reach out if you’d like to see how we work with Solana and download <a href=\"https://project-serum.github.io/anchor/getting-started/introduction.html\"><u>Anchor</u></a> to go through the tutorial to experience how Solana works.</p>","timeToRead":12,"shortContent":"<p>The primary objective of Solana software is to allow scaling the transaction throughput proportionally to the network bandwidth. The idea is to match all the three requirements of a blockchain: scalability, security, and decentralization. \n\n\n\n</p><p></p>","imageFitContain":null,"facebookImage":{"data":{"attributes":{"name":"Solana.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Solana_1e35d8602b.jpg"}}},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"LinkedIn_Article2.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Linked_In_Article2_25aff079ad.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Blockchain"},{"name":"Fintech"},{"name":"AWS"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"21","attributes":{"title":"Why you should use TypeScript in a project from scratch?","slug":"why-you-should-use-typescript-in-a-project-from-scratch","pubDate":"2021-08-09","content":"<h2>What is TypeScript?</h2><p>TypeScript is a JavaScript superset developed under the wing of Microsoft. This means that TypeScript doesn&#39;t replace the JavaScript syntax but extends it with additional functionalities or provides alternatives to encapsulate the originally available elements. What TypeScript adds (and what its name implies) is the static typing system.</p><h2>Advantages of introducing TypeScript right from the start</h2><h3><b>Avoiding JS errors</b></h3><p>When we look at the list of the most common errors in projects that can be found, for example, on <a href=\"https://rollbar.com/blog/top-10-javascript-errors/\"><u>Rollbar</u></a> or <a href=\"https://betterprogramming.pub/the-most-common-javascript-errors-and-how-to-fix-them-29d7c1b2f690\"><u>BetterProgramming</u></a>, we immediately notice that virtually all of them refer to invalid objects that we pass or try to get to a field that doesn&#39;t exist.</p><p>TypeScript avoids this situation on several levels. First of all, the type system means that if we try to read a field that isn&#39;t in the object we receive while editing the code, we will be informed about it. The IDE will keep an eye on whether the fields and methods we use are available at all. Even if we ignore these errors at the stage of code editing, the TypeScript compiler will still inform us about them with a compilation error. So we can say that even if we try, the non-existent field&#39;s error is hard to miss. Secondly, when using TypeScript, we can enable disabling setting a variable or field to null or undefined explicitly or implicitly (with one flag in the configuration). Thanks to this, we minimize the risk of referring to non-existent objects.</p><p>You can read about the available type validation and null setting or writing more complex typing protections in the <a href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html\">language documentation</a>.</p><h3><b>Tool support</b></h3><p>Static typing in the programming language enables tools such as Visual Studio Code to control our code more easily and efficiently, providing developers with additional options that are difficult to achieve with dynamic typing. One such option is code suggesting, which, thanks to static typing, works more precisely and relieves developers from the obligation to remember every field in a given object. Another possibility that is easier to implement and operate efficiently through static typing is any kind of static code analysis. Thanks to this, the tools we use give us an immediate answer to whether the code we write is correct and whether we&#39;re using the elements we wanted. This shortens the time between entering an error into the code and its detection.</p><p>In addition, static typing makes such a common activity as changing the name of a field, function, or class natural and works in most cases without any problems. That&#39;s because the IDE knows exactly where the name appearing in the code refers to the same element whose name is we&#39;re changing.</p><h3><b>Developer performance</b></h3><p>The advantages mentioned in the previous points lead us to the next one, which is the time needed to apply changes to the project. Starting a project with TypeScript may initially feel like spending more time writing additional code than the JavaScript code. </p><p>However, the situation begins to change dramatically as soon as we get to the point where we start referring to the already existing application elements and building complex structures. Thanks to static typing, syntax prompting works efficiently, and the developer doesn&#39;t have to stop every now and then to check or remember which fields contain the object. They will receive it in the function they write - after entering a full stop in the IDE, TypeScript will display a list of all available fields or methods. </p><p>Besides, by eliminating errors that are common in JavaScript and related to the passed objects that don&#39;t necessarily match what we expected already at the compilation stage, the developer avoids spending excess time on writing all kinds of security against such situations - because the language already gives it. And since such errors are caught immediately and automatically, you can avoid a large part of the work associated with the tedious search for the cause of an error where an object doesn&#39;t contain the field that we expected, or we try to refer to a value that doesn&#39;t exist.</p><p>All this allows the programmer to deliver business value from the beginning and use their time to expand the project instead of thinking about ways to protect code against errors resulting from the lack of static typing.</p><h3><b>Clear contracts between modules</b></h3><p>Introducing TypeScript allows you to introduce clear contracts between modules and between the frontend and the API from the very beginning. By choosing TypeScript over JavaScript, we simplify the team&#39;s work on individual application modules. Having specific interfaces to deal with, neither party will have any doubts about what data it will get from another part of the application or what object the function someone else wrote expects.</p><p>Thanks to tools such as TypeLITE, we can generate ready-made interfaces for TypeScript from C# classes by writing the API in C# and passing them to people responsible for integration with the API. Thanks to this, we avoid the problem of looking for the data we get from the API or the objects we have to send the API. In this case, we immediately get ready-made definitions that allow us to avoid the tedious search for such information in the documentation. We don&#39;t need to ask the API team about what should be sent. </p><p>In a situation where the API is written in NodeJS, the benefits of introducing TypeScript on both sides are more noticeable. In this case, we can directly create a set of interfaces shared between the API and the frontend. So, both the backend and the frontend will be working on exactly the same object structures they send. </p><p>Changing any field name won&#39;t be a problem either. That&#39;s because the tool doing it will know exactly where this object is used. Also, you won&#39;t have to synchronize independent definitions added separately in each project or modules.</p><h3><b>Code quality</b></h3><p>Due to the loose approach to the data we transmit and on which we operate, JavaScript certainly allows you to create a prototype of the functionality faster than TypeScript code. </p><p>However, application programming doesn&#39;t mean constantly writing prototypes, which will end up trashed in a moment. It&#39;s also about building code that will be developed over months and years - and during this time, it should be of the highest quality so as to avoid the time-consuming problem of introducing new or similar changes.</p><p>There are several elements to maintaining high-quality code.</p><p>First of all, it&#39;s the possibility of using commonly known solutions, such as design patterns. Since TypeScript introduces, among others, a system of classes and interfaces known from backend object-oriented languages, we can introduce proven backend solutions to our frontend code.</p><p>The second element that improves the quality of code written with TypeScript is the simplicity of refactoring. The refactoring process itself is something natural. But as long as we don&#39;t have clearly defined types and structures, changing the name of a field becomes extremely problematic - not only for the machine but even for the developer who would have to do it manually. By introducing a system of static typing and improved static code analysis already at the compilation stage, TypeScript allows programmers to modify the existing code much more confidently, without worrying that even a small correction of a typo could break something.</p><p>The last element is that there&#39;s no need to write any code that protects the project from absolutely every case where an object may be incorrectly structured or empty. By introducing TypeScript, we can eliminate the excess of instructions from our code, whose task would be only to protect against errors resulting from incorrectly passed objects. As a result, it&#39;s easier to keep order in the code, reducing the need to protect it against unexpected problems in every important function.</p><h3><b>Compatible with JS</b></h3><p>Since TypeScript is a JavaScript superset, it doesn&#39;t break compatibility with the existing JavaScript code. The result is that if we decide to write code using TypeScript, we don&#39;t lose access to libraries prepared for JavaScript, and we gain all the advantages of TypeScript. </p><p>So, the decision to choose TypeScript doesn&#39;t close the doors to using the code that wasn&#39;t created with this language in mind. Thanks to this, we eliminate the risk related to the incompatibility of the library with the language that we&#39;re using. We take advantage of static typing while maintaining full access to a rich library of ready-made solutions that were developed for JavaScript.</p><h3><b>Understandable for backend developers</b></h3><p>The fact that TypeScript in many respects resembles backend languages such as C# or Java means that we can relatively simply introduce it to programmers who have worked mainly with the backend so far (using the mentioned languages). They can now expand their competencies for a job with frontend development.</p><p>This similarity to backend object-oriented languages ​​also allows us to introduce backend developers to the code review process or discuss code design with them. Thanks to this, we increase the number of people whose knowledge we can use in the project. This is a chance to introduce and disseminate ideas that have worked in other situations.</p><p>Introducing TypeScript at the beginning of the project gives us the opportunity to involve the entire team in the process of designing the code structure, regardless of whether we&#39;re talking frontend or backend. As a result, the solutions developed are more consistent and understandable for every technical project member.</p><h2>Summary</h2><p>We can sum up the benefits of introducing TypeScript to our project from the very beginning in three points:</p><ul><li><p>fewer errors,</p></li><li><p>higher code quality,</p></li><li><p>pleasure from working on the project.</p></li></ul><p>TypeScript takes some of the work related to protecting against typical JavaScript errors from the team while making the tools used by developers better partners at work. It also makes writing code easier, giving better suggestions and relieving developers of the responsibility to remember or check what data are communicated to them or forward in a given context.</p><p>This allows developers to focus on delivering high-quality business value right away. And because static typing simplifies the refactoring process and facilitates the implementation of well-known patterns, the quality of code the team delivers is easier to maintain at a high level for a longer period. This is even more important in the project&#39;s initial phases; when changes appear frequently, ideas and needs change dynamically. The process of changes in data structures is continuous. In such a case, efficient control over types and ease of refactoring mean that the maintenance and development of the code don&#39;t give the team any headaches and minimizes the risk of increasing the time needed to introduce new functionalities.</p>","timeToRead":12,"shortContent":"<p>TypeScript is a JavaScript superset developed under the wing of Microsoft. This means that TypeScript doesn&#39;t replace the JavaScript syntax but extends it with additional functionalities or provides alternatives to encapsulate the originally available elements. What TypeScript adds (and what its name implies) is the static typing system.\n\n\n\n</p><p></p>","imageFitContain":null,"facebookImage":{"data":{"attributes":{"name":"WhyTypeScript.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Why_Type_Script_6dc85f3b86.jpg"}}},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"markus-spiske-AaEQmoufHLk-unsplash__1_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/markus_spiske_Aa_E_Qmouf_H_Lk_unsplash_1_df25a341b4.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Software development"}],"authors":{"data":[{"attributes":{"Name":"Rafał Lizoń","Position":"Full Stack Developer at Rumble Fish","Avatar":{"data":{"id":"49","attributes":{"name":"DSC01013.JPG","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_01013_ee787df6ae.JPG"}}}}}]}}},{"id":"20","attributes":{"title":"Solidity and smart contracts: an overview","slug":"solidity-and-smart-contracts-an-overview","pubDate":"2021-03-19","content":"<p>Developers looking to write Ethereum smart contracts can now choose from several options. One of them is Solidity, a JavaScript-based language recommended for this purpose nowadays.</p><p>What is Solidity and how does it help with writing smart contracts? Read this article to get the answer.</p><h2>Introducing Solidity</h2><p>\nSolidity is an object-oriented, high-level programming language designed to target the Ethereum Virtual Machine (EVM). It manages the behavior of accounts within the Ethereum state. This makes Solidity a good technology choice for implementing smart contracts. It’s basically a contract-oriented language.</p><p>By using Solidity, you can develop contracts for a wide range of uses - from crowdfunding and blind auctions to voting and multi-signature wallets. </p><h2>Let’s pause at smart contracts for a moment</h2><p>\nWhat exactly are smart contracts? They’re computer programs or transaction protocols designed to automatically execute, control, or document specific events and actions in line with the terms of a contract or agreement.</p><p>It’s thanks to smart contracts that blockchain applications are programmable and can go beyond currency transfers. In short, smart contracts automate the process of verifying the terms of the agreement. Any operation that depends on a condition can be carried out without involving any middleman or third parties, saving time and money.</p><p>Smart contracts are fully transparent and accessible to all the relevant parties. The contracts live on the internet and run on software code, which helps to accelerate the speed of transaction verification.  </p><h2>Smart contracts and Solidity</h2><p>\nThe approach behind Solidity, called “design by contract,” is nothing new. It was created by Bertrand Meyer in 1986, while he was working on the Eiffel programming language. The idea was to encourage developers to define formal specifications (preconditions, postconditions, and invariants) for each software component.</p><p>In Solidity, these specifications are called contracts. They can be instantiated and have constructors, global and local variables, private and public methods. Solidity contracts also come with public addresses in the blockchain (after they’re deployed). They can also store and send value.</p><p>Moreover, Solidity operates on the account-based model. Just to give you an example (mind you, it’s a specific one): This might mean that operations on a contract result in changes applied to the properties and holdings of the underlying accounts, as the contract itself is alive. </p><h2>How Solidity helps developers write smart contracts </h2><h3>1. Granular privacy</h3><p>As I mentioned before, a single Solidity contract holds various account holdings. Actions may change the holdings of every account, and the holdings are visible to everyone because Solidity was designed for public Ethereum (where every transaction needs to be validated by the network). So, when Solidity runs on a permissioned platform (say, Quorum), you need specific constructs matching the platform to enforce the updated privacy model.</p><p>{{codeSnippet,ERC20}}</p><p></p><p></p><h3>2. Large community and ecosystem of tools</h3><p>\nDevelopers get support from many tools in Solidity’s large, open ecosystem. An example is <a href=\"https://remix-ide.readthedocs.io/en/latest/index.html\"><u>Remix</u></a>, a handy open-source tool that makes it possible to write Solidity contracts straight from the browser, without having to install anything. It’s great for creating small and quick projects. On top of that, these Solidity tools enable interaction with testnet - in fact, you can test your processes on a live public testnet.</p><p>\nThe community that surrounds Solidity is very large, so getting support for your development project is easy. It’s very likely that someone out there has already solved the problem you’re facing.</p><h3>3. Portability and interoperability</h3><p>\nAnother perk of Solidity is that it supports portability. Portability means that a smart contract can run as-is on multiple ledgers. When it comes to portability, Solidity uses the Ethereum Virtual Machine (EVM) that you can integrate to run on multiple ledgers.</p><h2>Conclusion</h2><p>\nSolidity is a language purpose-built for smart contracts, and its simplicity only makes it a better candidate for writing applications based on smart contracts.  </p><p>Personally, I think the future lies in languages that compile to WebAssembly. Ethereum itself will probably support it someday. Then the contracts can be written in, for example, C ++ or Rust, and developers have a lot of general-purpose libraries at their disposal. In Solidity, you often can’t even do a simple thing unless you write it yourself.</p><p>We hope that this article clarifies why Solidity is such a great technology choice for writing smart contracts. </p><p>If you have experience with Solidity and are looking for an interesting project, we might have something for you. Get in touch with us to learn more.</p><p></p>","timeToRead":4,"shortContent":"<p>Solidity is an object-oriented, high-level programming language designed to target the Ethereum Virtual Machine (EVM). It manages the behavior of accounts within the Ethereum state. This makes Solidity a good technology choice for implementing smart contracts. It’s basically a contract-oriented language.</p>","imageFitContain":true,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"Solidity"}}},"image":{"data":{"attributes":{"name":"1615384236776.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/1615384236776_75530f1ed4.png"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"19","attributes":{"title":"What is Zbay","slug":"what-is-zbay","pubDate":"2020-12-29","content":"<p>Zbay is an attempt to build a secure, decentralized substitute for team chat tools like Slack, Discord, or Keybase. </p><p>The goal is to achieve a similar level of usability and reliability to centralized tools, while reducing or outright eliminating risks from phishing attacks, malware attacks, and large-scale data breaches. </p><p>Zbay also integrates the privacy-focused cryptocurrency Zcash. Users can send and receive Zcash, register names for users and communities on the Zcash blockchain, and—potentially, in the future—purchase additional services such as persistent encrypted storage. </p><h3>How does Zbay do it?</h3><h4>The basic starting point</h4><p>At the moment, Zbay relies on shielded transactions on the Zcash blockchain as a transport. Each message sent between the users translates to a spend of UTXO on the blockchain level. We are using the <i>encrypted memo</i> field of the spend output to convey the message body. Zcash shielded transactions are only readable for someone who has a viewing key for the target addresses of the spend. This principle defines how Zbay translates Zcash primitives into interactions between Zbay users.</p><p>All of these details are changing rapidly as we move to using libp2p over Tor for message transport. </p><h4>Direct messages</h4><p>The simplest form of interaction is sending a message to someone whose address you know. This means sending a 0-valued transaction with a message encoded into the <i>note </i>field. Only the recipient of the message has a viewing key to this address, which makes it private, similar to sending a PGP-encrypted email to someone who’s key you know—except that in this case the recipient’s address and public key are the same thing. It’s also important to note that, due to Zcash’s design, a 3rd party observing blocks cannot even tell that the interaction between the two addresses took place. This is unlike more popular blockchain networks like Ethereum or Bitcoin where anyone using even a web-based block explorer can trace the complete history of interactions between parties. Privacy at the blockchain layer is a main feature of Zcash that enables ideas like Zbay in its current form.</p><h4>Private channels</h4><p>Private channels are slightly more complex than direct messages. Private channels are used for interactions between 3 or more Zbay users. To form a private channel, one of the users creates a fresh Zcash address. They then share the viewing key to this address with the people they invite. Invited users add the viewing key to their wallet, which enables them to decrypt (receive) messages.</p><p>Channel invitation builds on top of the “Direct message” functionality, as it’s used to send the viewing key to the invitee. </p><h4>Public channels</h4><p>Public channels are open broadcast communication. Everyone can join and read the channels. From an implementation perspective, public and private channels differ very little. Public channels are private channels that everyone knows the viewing key to. The viewing keys to public channels are published to a meta-channel that we call the “Channel of Channels”, which every Zbay instance tracks.</p><p>It’s up to the user to decide to join the public channel. When they join it, the viewing key is added to their wallet.</p><h4>User identity</h4><p>Each Zbay user creates a username during the first run of the application. Each Zbay client makes sure that the usernames are unique, so that users cannot impersonate one another. </p><p>During the first run, Zbay generates a keypair and stores it. The private key of this pair is used to sign all messages sent by that user. We are using a signing scheme that allows for the extraction of public keys from the signature and signed data. This not only prevents message spoofing but also provides another layer of protection against messages being tampered with in-transit. </p><p>During the first run Zbay also posts the public key and username of the user to the meta-channel we call “Users Channel”. All Zbay instances track this channel. Thanks to the fact that blockchain ensures everyone sees the same order of transaction, we define the ownership of the username as “It’s owned by the public key that claimed it first”.</p><h4>Technical stack</h4><p>Zbay uses the Electron framework. This implies NodeJS for the OS-side of it. For the frontend-side we are using a combination of React + Redux + Material UI. We have recently made a push to move our codebase from Javascript to Typescript. </p><p>Zbay supports Linux, macOS and Windows. It is cross-compiled to each of these platforms using Github Actions.</p><p>Zbay is open source. You can find the code repository <a href=\"https://github.com/ZbayApp/ZbayLite/\"><u>here</u></a>.</p><h3>History of the project</h3><h4>The full node phase </h4><p>The development work on  the project initiated in February 2019. This was just a few months after the Sapling Zcash update which changed the protocol in a way that made Zbay feasible. The first steps in the project were very crude. For example, at the time, the Zcash node didn’t implement importing the viewing keys to the wallet. We had to fork the Zcash node repository and roll in the support for this ourselves. For the first few months of the project, we had to maintain the fork and track each new release of Zcash and merge all the upstream changes to our fork. That was a lot of work, but it was worth it to have a working prototype. Eventually, the Zcash project added the features from our fork, and after that we no longer had to touch the codebase of the Zcash node.</p><p>The architecture of the first implementation assumed that each Zbay user had a local Zcash node. The Zcash node was started and monitored by the Zbay process. From a theoretical point of view, this is the right way to interact with a blockchain. </p><p>This approach worked, but had some serious practical implications. Most notably it takes a lot of time, disk space and CPU usage to get the new user fully synced with blockchain. We’ve put in a lot of work to optimize it. Working in increments we were able to shave off the time needed to onboard new users from a few days to a few hours (it’s hard to give exact figures as those were determined by network, disk and CPU speed). But really there was nothing we could do about requiring over 10 GB of disk space and high CPU usage. </p><p>In this era, we did a lot of work around optimization, monitoring external processes, making backups, etc.</p><h4>The light client phase (current) </h4><p>In early 2020 we’ve implemented a version that we call Zbay light, which at the moment of writing is the current production version. In this era, we are no longer working with a local Zcash node. Instead, we are using tools from the <a href=\"https://github.com/adityapk00/zecwallet-lite\"><u>Zecwallet Lite</u></a> project. This was a major change and has both good and bad implications:</p><ul><li><p>Disadvantage: we are relying on an external piece of cloud infrastructure (Lightwallet servers) that is operated by a trusted party. This also has implications for security and privacy.</p></li><li><p>Disadvantage: we’ve lost the ability to receive 0-confirmation messages and display messages before they are included in the block by a miner.</p></li><li><p>Benefit: it takes just minutes for a new user to be fully synced and operational.</p></li><li><p>Benefit: it requires little disk space as we no longer need to download the entire history of the blockchain.</p></li></ul><p>The Lightwallet protocol maintains privacy by fetching data about new blocks in pure (encrypted) form and only decrypting it locally, on the same computer Zbay is running on.  </p><p>However, for efficiency purposes it strips out memo data, which Zbay relies on. Since different users request different memos, this opens up a surface for some deanonymization attack, if someone could coerce the operators of the Lightwallet servers to cooperate. </p><p>Cryptographic secrets are not exposed in any way, they are stored in a wallet and the wallet is in charge of all the decrypting.</p><p>From an implementation point of view, the switch to “Zbay light” meant a lot of adaptation work. To give some examples, Lightwallet-cli is written in Rust, while Zbay is written in NodeJS. We needed to learn how to efficiently use the code interoperably. Sure, we could have just spawned the subprocess every time we need to run Rust code, but this would result in a whole lot of process forking and would be very inefficient. Therefore, we import Rust components using node-gyp bindings and call Rust functions directly from NodeJS.</p><h3>Present and future of the project</h3><h4>Challenges ahead</h4><p>We are very happy with what we’ve accomplished so far, yet we know there is still a long way to go to reach the goal. To address the elephant in the room, as long as Zbay relies on Zcash for message transport it will be as fast as blockchain. And “as fast as blockchain” doesn’t mean “very fast”. As things currently are, the block time on Zcash is 75 seconds. This is nowhere close to the UX of other instant messaging applications. Storing messages on-chain also means they cannot be deleted or forgotten, which presents a serious privacy and security problem if keys are compromised.</p><h4>“Websocket over Tor” phase</h4><p>We have recently released a version that offers instant and efficient direct messaging when both parties are online.</p><p> Zbay launches a local tor client, which configures it to expose a <a href=\"https://2019.www.torproject.org/docs/onion-services\"><u>v3 onion service</u></a>. This service allows each Zbay to open a private websocket server that other Zbay instances can connect to using its onion address. The connection is direct in the sense of a Websocket layer. But since it goes over Tor, it means that in reality there are 6 tor nodes in between that form a Tor circuit, effectively anonymizing the connection on TCP protocol layer and offering metadata protection against a wide range of attackers.</p><p>Thanks to this approach, Direct Messages are now truly instant.</p><h4>Libp2p over Websocket over Tor </h4><p>Direct websocket connections are awesome for direct messages but how do we use it for private and public channels? How does it scale if there are hundreds or thousands of users? Shall we create a well-connected network of Websocket connections, effectively opening o(n2) connections? This would not work so well.</p><p>Our current development work revolves around using the l<a href=\"https://github.com/libp2p/js-libp2p\"><u>ibp2p</u></a> library to create a mesh of Websocket-over-Tor connections. So instead of creating the connection directly, we rely on Libp2p library to do it for us. Its DHT implementation is responsible for creating the topology of the Mesh. Thanks to gossip and pubsub protocols (libp2p’s GossipSub), we don’t require everyone to be connected to everyone else. At the moment of writing this article, we are at the stage of load testing the communication logic using hundreds of machines running on AWS and the results look very promising, pointing us to what we should address next.</p><h4>Persistent channel history </h4><p>Moving the message part of communication out of Zcash has one more important consequence. When we were using a blockchain to deliver messages, the blockchain was providing us with the immutable record of history of each channel or direct message thread.</p><p>With the move to communication over pubsub, we are losing the history, as in pubsub you only receive a message if you’re currently subscribed. Therefore, at the same time we are developing a solution to keep the state of the channel between channel members. Remember that by design we have no central servers that could keep the data while everyone goes offline, so we need a robust system that can keep track of history and reconcile the network partitions which happen when members of the channels go online and offline while others keep on chatting. </p><p>For solving our history problem, we are looking into adopting good old <i>git</i> plus some extra cryptography. We are exposing read-only git repositories on Tor’s v3 onion services, so that users can sync their history using <i>git pull</i>. That’s of course just a gist of it, it gets quite a bit more nuanced in details. We considered designing our own protocol, perhaps borrowing from concepts in the peer-to-peer social networking protocol SecureScuttlebutt. But the problem seemed to overlap in significant ways with the use case and functionality offered by git, and git is fast and well-understood, so we decided to start there. The result has been promising!</p><h4>More private Private Channels</h4><p>It is important to highlight that with push to Tor and Libp2p we are not breaking ties with Zcash. We are keeping the cryptography model used on blockchain, so for example Private Channels will continue to be encrypted in transit using the same key as they used to be as the <i>note</i> field in Zcash transaction output. </p><p>However, for Private Channels we were planning some redesign. The current cryptographic setup has some limitations that we want to shake off:</p><ul><li><p>There is only one shared viewing key used for the channel. </p></li><li><p>Once someone learns there is no way to make him ‘unlearn it’. So, there is no way to revoke access to a Private channel shall this be required. It&#39;s an important missing feature, yet not one that is easy to roll in in the current design.</p></li><li><p>We would like to offer forward and backward secrecy for Private Channels. If an attacker who is intercepting a team’s encrypted network traffic succeeds at obtaining the private key to a channel, for example through a malware attack or the theft of a device, they should not be able to decrypt old messages that were intercepted in transit, but deleted from the device. Similarly, they lose the ability to decrypt messages immediately or at least soon after the device compromise.</p></li><li><p>Eventually we also want to protect private channels from leaking metadata to users who are not part of the team. For this, it is not enough to encrypt messages. Ideally, we have to move each private channel to its own mesh network (connecting over Tor, but only to other team members) and we need a secure way to permit new peers to join these networks. </p></li></ul><h3>Final thoughts</h3><p>Zbay is an exciting project. It’s pushing the limits of what is possible using open-source technologies and decentralization. We’ve been working on it for a little over year and half and have made some amazing progress. We have a clear vision of what we want to accomplish and how to do it. </p><p>We are also scaling up the team and are looking for developers passionate about Tor, cryptography, and decentralization to lend us a hand. </p>","timeToRead":10,"shortContent":"<p>Zbay is an attempt to build a secure, decentralized substitute for team chat tools like Slack, Discord, or Keybase. The goal is to achieve a similar level of usability and reliability to centralized tools, while reducing or outright eliminating risks from phishing attacks, malware attacks, and large-scale data breaches. </p>","imageFitContain":true,"facebookImage":{"data":{"attributes":{"name":"Zbay.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Zbay_3b811302cb.jpg"}}},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"macbook-with-screen-p-1600.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/macbook_with_screen_p_1600_962a7d8e59.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Marek Kowalski","Position":"CTO / Co-Founder","Avatar":{"data":{"id":"101","attributes":{"name":"Marek-Kowalski-CEO-Rumble-Fish.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Marek_Kowalski_CEO_Rumble_Fish_fdc397497a.png"}}}}},{"attributes":{"Name":"Holmes Wilson ","Position":"Founder","Avatar":{"data":{"id":"81","attributes":{"name":"Holmes2.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Holmes2_e7ed2ee58c.jpg"}}}}}]}}},{"id":"18","attributes":{"title":"How to become a blockchain developer","slug":"how-to-become-a-blockchain-developer","pubDate":"2020-12-21","content":"<p>The Blockchain Developer is perhaps the most sought after emerging job role of the 2020s. Since the advent of Bitcoin in 2009, the underlying blockchain technology has spread industry-wide into various novel applications. The promise of immutable, secure, and fast transactions makes blockchain a highly desirable investment for firms, especially in finance, banking, law, and real estate.</p><p>To help prepare you for a job of the future, this post discusses what you need to do to become a blockchain developer.</p><h2>Work out where you want to be</h2><p>Before diving into the technical aspects of blockchain, you have an initial decision to make. You can either look to work for a blockchain company and support their projects or create your own blockchain products and services. There are pros and cons to both options. Working for a reputable company will earn you a high salary, given the demand for the role. However, a blockchain entrepreneur will likely be able to raise much money via funding if you have a unique idea and want to retain the intellectual property.</p><p>The<a href=\"https://www.bloomberg.com/news/articles/2017-12-21/crypto-craze-sees-long-island-iced-tea-rename-as-long-blockchain\"><u> Long Island Iced Tea Company</u></a> changed its name to Long Blockchain Corporation and received a massive funding amount. They still sell the same products, but the buzz around blockchain helped them get off the ground. If you become a skilled blockchain developer, there is much potential to do similar.</p><h2>What does a blockchain developer do?</h2><p>There are two different types of blockchain developers. A Core Blockchain Developer is responsible for the project&#39;s security and architecture, creating the architecture for others to build upon. A Blockchain Software Developer uses the core architecture to produce decentralized apps (dapps) and web varieties for blockchain technology. A small business may need somebody to fill both roles, but larger blockchain organizations will recruit separate developers.</p><p>The primary responsibilities of a Core Blockchain Developer are to design protocols and network security, understand and implement blockchain features and functionality, and ensure everything on the network works as intended.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blockchain001_9b8ce8d91d.png\" alt=\"Blockchain001.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Blockchain001_9b8ce8d91d.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Blockchain001_9b8ce8d91d.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Blockchain001_9b8ce8d91d.png 239w,\" sizes=\"100vw\" width=\"750px\"></p><p>A Blockchain Software Developer will develop and implement smart contracts, design the backend and frontend of dapps, make sure the dapps run as expected, and look after integrations with other services.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blockchain002_3e83af6839.png\" alt=\"Blockchain002.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Blockchain002_3e83af6839.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Blockchain002_3e83af6839.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Blockchain002_3e83af6839.png 239w,\" sizes=\"100vw\" width=\"750px\"></p><h2>Technical skills of a blockchain developer</h2><p>There are a considerable amount of technical requirements to become a blockchain developer. The image below shows what will be the expectation at a base level.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blockchain003_41a2fe0f12.png\" alt=\"Blockchain003.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Blockchain003_41a2fe0f12.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Blockchain003_41a2fe0f12.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Blockchain003_41a2fe0f12.png 215w,\" sizes=\"100vw\" width=\"750px\"></p><h3>Data Structures</h3><p>Knowledge of data structures is fundamental for blockchain development. They give you the capacity to test and learn with the technology and configure it in a way that suits your project.</p><h3>Building smart contracts</h3><p>Smart contract development is one of the most popular blockchain use cases. You will want to understand the Ethereum platform and Solidity programming language, which are the most used tools for smart contract creation.</p><h3>Cryptography</h3><p>Blockchain protects the data it holds using cryptography. A basic understanding of applying cryptography to algorithms is incredibly useful or bordering on essential for a blockchain developer.</p><h3>Hash functions, distributed ledgers, Merkle Roots, and consensus</h3><p>You will see these three terms in every blockchain development guide that you read. Without understanding how they feed into blockchain architecture, you won&#39;t be able to develop effectively.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blockchain004_d3ce0503c1.png\" alt=\"Blockchain004.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Blockchain004_d3ce0503c1.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Blockchain004_d3ce0503c1.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Blockchain004_d3ce0503c1.png 215w,\" sizes=\"100vw\" width=\"750px\"></p><h2>Steps to get started as a blockchain developer</h2><p>We’ve talked about deciding the type of developer you want to be and where you might apply those skills, but how do you get started in the world of blockchain technology?</p><h3>Start with the basics</h3><p>Become 100% familiar with blockchain architecture and the terms we have outlined in this post. Research the different tools and platforms that exist on the market and determine which of those you are most comfortable using.</p><h3>Put it all together</h3><p>Once you know the basics, familiarize yourself with how all the different blockchain constituents come together. For example, cryptocurrency is still the most common blockchain application. You can sign up to trading platforms to gain a real-world insight into the workings of the technology.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blockchain005_2654237ecb.png\" alt=\"Blockchain005.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Blockchain005_2654237ecb.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Blockchain005_2654237ecb.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Blockchain005_2654237ecb.png 245w,\" sizes=\"100vw\" width=\"750px\"></p><h3>Learn to code</h3><p>Start to code with the Solidity programming language on the Ethereum blockchain. You will be able to create smart contracts and dapps. Blockchain platforms are open-source, allowing you to review and understand how the code works. Write some simple blocks, turn them into a chain, validate, and test.</p><h3>Keep reading and researching</h3><p>When you have a foundational level understanding of how blockchain works and how to program it, continue to research and improve your skills. The technology is still very immature, and new trends emerge all the time. Join some programmer communities to share ideas with others and look out for project opportunities.</p><h2>Summary</h2><p>Becoming a blockchain developer requires a lot of learning and research. However, the rewards will likely be high with a mass of demand for the skills in a broad range of industries. It is an excellent time to start learning blockchain, with a boom expected during the 2020s as more organizations realize the benefits of the technology.</p>","timeToRead":3,"shortContent":"<p>The Blockchain Developer is perhaps the most sought after emerging job role of the 2020s. Since the advent of Bitcoin in 2009, the underlying blockchain technology has spread industry-wide into various novel applications. The promise of immutable, secure, and fast transactions makes blockchain a highly desirable investment for firms, especially in finance, banking, law, and real estate.</p>","imageFitContain":null,"facebookImage":{"data":null},"homePageTag":{"data":{"attributes":{"tag":"homePage"}}},"image":{"data":{"attributes":{"name":"zac-durant-_6HzPU9Hyfg-unsplash.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/zac_durant_6_Hz_PU_9_Hyfg_unsplash_f3052c3a12.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Code Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Karolina Kubas-Stachowska","Position":"HR Manager","Avatar":{"data":{"id":"50","attributes":{"name":"DSC07345.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07345_cf92b543d8.png"}}}}}]}}},{"id":"17","attributes":{"title":"What are smart contracts?","slug":"what-are-smart-contracts","pubDate":"2020-12-11","content":"<p>\nWhen two parties want to make a formal agreement, a written contract is typically put in place. Arrangements can be between businesses, individuals, or both with something like real estate. Traditional contracts come with many problems. First, checking, validating, and approving terms is time-consuming due to complex language and the sheer length of the documents. Execution of contracts tends to need human intervention and may even require a costly third-party review. When contracts include complex terms, they need a higher degree of control, which leads to a greater risk of future disputes. </p><p>The answer to the problem is smart contracts, which translate the agreement into a computational code, avoiding ambiguity and varying interpretations further down the line. \n</p><h2>What is smart contract, and how does it work?</h2><p>Just like a traditional contract, a smart contract is an agreement between two people. However, instead of being physically written, it is run on the blockchain, stored publicly, and cannot be changed. Any transactions involving the smart contract are processed by the\nblockchain, allowing them to be automatic and not require a third-party intervention. A transaction will only happen if a condition is met, mitigating issues of trust when a third party is involved. \n</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Smart_Contracts001_c3a826f18a.png\" alt=\"SmartContracts001.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Smart_Contracts001_c3a826f18a.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Smart_Contracts001_c3a826f18a.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Smart_Contracts001_c3a826f18a.png 178w,\" sizes=\"100vw\" width=\"750px\"></p><p></p><p>Smart contracts operate using blockchain technology. Imagine you have a file of transactions on your computer. Also, two accountants have the same file on their computer. Whenever you make a transaction, both accounts get an email to tell them. The accountants will check if you can afford the transaction and then reply to your email as verification. If everyone agrees, the file is updated.</p><p><img src=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/Smart_Contracts002_2be03dddf6.png\" alt=\"SmartContracts002.png\" srcset=\"https://strapi-uploads-staging-aldnr.rumblefish.dev/small_Smart_Contracts002_2be03dddf6.png 500w,https://strapi-uploads-staging-aldnr.rumblefish.dev/medium_Smart_Contracts002_2be03dddf6.png 750w,https://strapi-uploads-staging-aldnr.rumblefish.dev/thumbnail_Smart_Contracts002_2be03dddf6.png 178w,\" sizes=\"100vw\" width=\"750px\"></p><p></p><h3>Binding agreements</h3><p>Once a deal is set up as digital code, smart contracts allow parties to bind themselves. The individuals or businesses agree on the terms, sign it, and push it to the blockchain. The contract cannot be changed or modified while being secured by a network of computers.</p><h3>Transaction automation</h3><p>Imagine you pay somebody $100 per month for a service. Smart contracts can define the terms in a self-executing agreement, transferring the funds on a specific day. Assets are transferred in a secure and timely manner.</p><h3>Triggers</h3><p>When a business works with many suppliers, much time can go into chasing and reconciling orders. Smart contracts can have obligations attached to them that trigger if a party does not deliver on a promise. For example, if a supplier does not deliver goods on a specific day, contract requirements are not met, and a client does not pay the invoice.</p><h3>Removing the middle man</h3><p>Smart contracts can perform the tasks of intermediaries. For example, there tend to be estate agents, solicitors, banks, buyers, and sellers involved in real estate. As blockchain technology is trustworthy, robust, and immutable, there is no need for third-party involvement. Individuals could handle a transaction like property exchange between themselves.</p><h2>Developing smart contracts</h2><p>There are plenty of<u> </u>online guides to help you get started with smart contracts. It will involve developers, testers, business analysts, and end-users. A smart contract can be built on multiple blockchain platforms like<a href=\"https://ethereum.org/en/\"><u> Ethereum</u></a> and<a href=\"https://docs.neo.org/developerguide/en/articles/smart_contract.html\"><u> NEO</u></a>, using an original coding language.</p><h2>Smart contract use cases</h2><p>There are plenty of use cases for smart contracts spanning several industries. We have talked about real estate, and below are three other significant applications.</p><h3>Healthcare</h3><p>Companies like EncrypGen build smart contracts to transfer patient data securely, without third party access. Patients stay in control of their data, and it cannot get into the hands of research companies without permission and/or fees.</p><h3>Government</h3><p>Smart contracts can enable secure and trustworthy government voting systems. For example,<a href=\"https://followmyvote.com/\"><u> Follow My Vote</u></a> is a secure blockchain-enabled voting platform, offering greater transparency with results. Voting through a smart contract sends a token to an address that can’t be changed, automatically verifying the counts.</p><h3>Insurance</h3><p>Insurance can be a document-heavy and complex industry. Smart contracts can streamline the claims process. For example, travel insurance claims are typically paid when flights are delayed or canceled. As part of the agreement with an insurer, a trigger can be in place to specify if a flight is on-time or late. When the flight is on-time, no action is taken. If the flight delay reaches a threshold, say one hour, the insurer automatically pays a $50 claim. A similar system could be in place for different insurer verticals, reducing time to settle and paperwork volumes.</p><h2>Summary</h2><p>Smart contracts offer enhanced security and trust, as well as reduced paperwork and resource over traditional agreements. There is amazing potential to speed up laborious processes, removing middlemen and benefitting the wider economy.</p><p></p><p>\n\n</p>","timeToRead":5,"shortContent":"<p>When two parties want to make a formal agreement, a written contract is typically put in place. Arrangements can be between businesses, individuals, or both with something like real estate. Traditional contracts come with many problems. \n</p><p>\n\n</p>","imageFitContain":null,"facebookImage":{"data":{"attributes":{"name":"SmartContracts_whatis.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Smart_Contracts_whatis_b384dc48d6.png"}}},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"Blog006.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Blog006_467a609c6f.png"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"16","attributes":{"title":"How smart contract can be used in finance","slug":"how-smart-contract-can-be-used-in-finance","pubDate":"2020-11-30","content":"<p>Bitcoin, a peer-to-peer system сuѕtоm-dеѕіgnеd to funсtіоn for value trаnѕfеr wіthоut relying оn a central раrtу, wаѕ thе first wеll-knоwn аррlісаtіоn оf blосkсhаіn tесhnоlоgу. It worked well аnd ѕtіll funсtіоnѕ today as arguably thе most rоbuѕt dерlоуmеnt оf blockchain applications. But if it wеrе not for several kеу tесhnоlоgіеѕ that wеrе аddеd tо thе lіmіtеd fеаturеѕ іn Bіtсоіn, blосkсhаіn would never have made technological іnnоvаtіоnѕ at the fоrеfrоnt, аnd smart соntrасtѕ were a сrіtісаl bаѕіѕ оf thаt revolution. The use оf smart contracts, including trust, transparency, ѕесurіtу, autonomy, аnd ассurасу, hаѕ many buѕіnеѕѕ аdvаntаgеѕ. Thіѕ article will соnсеntrаtе on clarifying whаt a ѕmаrt соntrасt is, hоw іt wоrkѕ, and thе dіffеrеnt deployment аррrоасhеѕ.</p><p>Trust іѕ nоt аn еѕѕеntіаl іngrеdіеnt to mаkе things wоrk in a dесеntrаlіzеd world. To ореrаtе truthfully, Blосkсhаіn rеlіеvеѕ participants from hаvіng tо rеlу on a сеntrаlіzеd раrtу. No mоrе еntruѕtіng the lіvеlіhооd оf уоur соmраnу tо a thіrd-раrtу іntеrmеdіаrу in thе hоре thаt thеу wіll always dо the rіght thіng. Evеrу раrtісіраnt is in соntrоl of the blосkсhаіn, yet nоbоdу hаѕ tоtаl control. To rеаlіzе thіѕ self-governance, thеrе аrе ѕеvеrаl tесhnоlоgіеѕ еmрlоуеd by blockchain designs. Intelligent соntrасtѕ аrе thе most mature аnd widely аdорtеd tесhnоlоgу ѕо far.</p><p>A smart contract rеfеrѕ tо a ріесе of a computer program thаt is іndереndеntlу еxесutеd to rесоrd thе lаtеѕt program state bу a quorum оf blосkсhаіn nоdеѕ. Thаt mіght seem соmрlісаtеd, so lеt&#39;ѕ tаkе a little tіmе to unрасk іt.</p><h2>Bаѕіс Dеfіnіtіоn of Smart Cоntrасtѕ</h2><p>Smаrt соntrасtѕ аrе disintermediated and generally trаnѕраrеnt, offering the promise оf іnсrеаѕеd buѕіnеѕѕ efficiency, reduced legal аnd transaction соѕtѕ, аnd anonymous trаnѕасtіоnѕ. Fоr various соmmеrсіаl рurроѕеѕ, thе buѕіnеѕѕ wоrld іѕ actively investigating the uѕе оf blосkсhаіn technology.</p><p>Smаrt Contracts are highly rеlіаblе dіgіtаl соntrасtѕ thаt аrе executed оn a tamper-proof, secure, and decentralized network, fоr еxаmрlе Ethеrеum (a blockchain). Juѕt рut іn a digital соntrасt оf ѕеlf-еxесutіоn with terms оf аgrееmеnt written іn code. Their еxtrеmе reliability enables аgrееmеntѕ to be reached оn аn еntіrеlу nеw lеvеl оf added vаluе and trustworthiness. Cоntrасtѕ аrе ѕсhеdulеd fоr specific аgrееmеntѕ аnd are carried оut as ѕооn аѕ the predefined еvеnt takes рlасе.</p><p>Contracts thеmѕеlvеѕ аrе nоthіng nеw. Theyаrе еvеrуwhеrе, for example on the ѕtосk mаrkеt in the form of futures соntrасtѕ or dеrіvаtіvеѕ contracts. Nowadays, these &#39;trаdіtіоnаl contracts&#39; can even be automated with the use of software. Thе mаіn dіffеrеnсе іѕ the tаmреr-рrооf аѕресt, whеrеbу smart соntrасtѕ wіll аlwауѕ bе executed undеr thе pre-established соndіtіоnѕ wіth a blосkсhаіn, and nо third раrtу wіll bе аblе to сhаngе thіѕ. Thе ѕuреrіоr fоrm оf a соntrасt іѕ a ѕmаrt contract.</p><h2>Anаtоmу of a Smart Contract</h2><p>Thе bеѕt way tо undеrѕtаnd іntеllіgеnt соntrасtѕ is tо think of them аѕ funсtіоnѕ of the рrоgrаm: thеrе are inputs, іnрut рrосеѕѕіng logic, аnd оutрuts. Smart соntrасt executions often result іn updated states.</p><p>Thе lоgіс within smart contracts wіll determine whеthеr оr not a trаnѕасtіоn іѕ vаlіd. Examples оf an іnvаlіd trаnѕасtіоn mау іnсludе nоt operating аt thе correct starting ѕtаtе lеvеl, ѕuсh as trуіng tо ѕреnd tоkеnѕ without hаvіng еnоugh resources. In updated ѕtаtеѕ, оnlу vаlіd trаnѕасtіоnѕ result. Dереndіng on vаrіоuѕ blосkсhаіn designs, іnvаlіd transactions аrе either rеjесtеd bу the network оr included in the blockchain but mаrkеd аѕ fаіlіng.</p><p>As a way оf informing thе outside wоrld, smart соntrасtѕ mау аlѕо рublіѕh еvеntѕ. Whеn thе blосk соntаіnіng thе trаnѕасtіоn becomes committed tо thе blосkсhаіn оn thе node, event listeners аrе nоtіfіеd.</p><p>On thе оthеr hаnd, wіthоut uрdаtіng іt, querying fоr thе lаtеѕt ѕtаtе саn bе ассоmрlіѕhеd muсh faster аnd іnvоlvеѕ оnlу a ѕіnglе nеtwоrk node. Thrоugh reading frоm the lосаllу maintained ѕtаtе database, any node thаt has thе smart соntrасt installed lосаllу саn еxесutе the ԛuеrу rеԛuеѕt and return thе rеѕult.</p><h2>Hоw dо ѕmаrt contracts work?</h2><p>Sіmрlу рut, іntеllіgеnt соntrасtѕ function a lot like vending mасhіnеѕ. You just drop thе rеԛuіrеd amount оf a cryptocurrency into a ѕmаrt соntrасt, аnd your еѕсrоw, right to hоuѕе оwnеrѕhір, driver&#39;s lісеnѕе, оr whаtеvеr else drops іntо уоur ассоunt. Nоt оnlу аrе all the rulеѕ and реnаltіеѕ рrе-dеfіnеd bу ѕmаrt соntrасtѕ, but they are аlѕо еnfоrсеd by thеm.</p><h4>Interdependence</h4><p>A ѕmаrt contract саn wоrk on іtѕ оwn but, аlоng with any numbеr оf other smart contracts, іt саn аlѕо be іmрlеmеntеd in a system. Thеу саn then be ѕеt up in a wау that makes them dереndеnt on each оthеr. For example, the suссеѕѕful completion оf оnе ѕресіfіс ѕmаrt соntrасt cantrіggеr the start оf аnоthеr оnе, and so оn. In theory, entire ѕуѕtеmѕ and оrgаnіzаtіоnѕ саn run еntіrеlу оn ѕmаrt соntrасtѕ. Thіѕ is аlrеаdу implemented іn various сrурtосurrеnсу ѕуѕtеmѕ tо ѕоmе еxtеnt, whеrе all thе lаwѕ аrе рrе-dеfіnеd аnd because оf that, the nеtwоrk саn funсtіоn іndереndеntlу аnd autonomously.</p><h4>Objects оf smart соntrасtѕ</h4><p>Essentially, fоr еvеrу ѕmаrt соntrасt, thеrе аrе three іntеgrаl parts, also referred tо аѕ objects. The fіrѕt іѕ thе ѕіgnаtоrіеѕ, who аgrее or disagree wіth the tеrmѕ оf the аgrееmеnt uѕіng dіgіtаl ѕіgnаturеѕ bу the twо or mоrе parties uѕіng thе ѕmаrt contract.</p><p>Thе tоріс оf thе аgrееmеnt is thе second оbjесt. Thіѕ can only be аn object whісh еxіѕtѕ within thе еnvіrоnmеnt оf thе ѕmаrt contract. Smаrt contracts must, alternatively, hаvе unіmреdеd and dіrесt ассеѕѕ tо thе object. Evеn though smart contracts wеrе first dіѕсuѕѕеd bасk іn 1996, thеіr dеvеlорmеnt was stalled bу thіѕ раrtісulаr object. Onlу after thе first cryptocurrency арреаrеd іn 2009 wаѕ thіѕ іѕѕuе раrtіаllу ѕоlvеd.</p><p>Finally, раrtісulаr tеrmѕ hаvе to bе іnсludеd in any ѕmаrt соntrасt. These tеrmѕ nееd to be fullу dеѕсrіbеd mаthеmаtісаllу аnd using a рrоgrаmmіng lаnguаgе thаt is appropriate fоr thе еnvіrоnmеnt of thе ѕресіfіс ѕmаrt соntrасt. </p><h4>Environment</h4><p>Smаrt соntrасtѕ hаvе tо work within a ѕресіfіс suitable еnvіrоnmеnt fоr thеm to еxіѕt and function рrореrlу. Fіrѕt оf all, the еnvіrоnmеnt nееdѕ to ѕuрроrt the use оf рublіс-kеу сrурtоgrарhу, which аllоwѕ uѕеrѕ tо use thеіr unique, specially generated cryptographic codes to ѕіgn оff fоr thе trаnѕасtіоn. This is the еxасt scheme that is uѕеd bу thе аbѕоlutе majority оf existing cryptocurrencies at рrеѕеnt.</p><p>Sесоndlу, thеу rеԛuіrе аn ореn аnd dесеntrаlіzеd dаtаbаѕе thаt can be fullу truѕtеd by аll раrtіеѕ tо the соntrасt аnd which is fullу automated. Mоrеоvеr, for thе ѕmаrt соntrасt to bе implemented, the entire еnvіrоnmеnt itself hаѕ to bе dесеntrаlіzеd. Blockchains аrе thе реrfесt еnvіrоnmеnt for ѕmаrt соntrасtѕ, еѕресіаllу thе Ethеrеum Blockchain. Finally, thе dіgіtаl dаtа ѕоurсе uѕеd bу thе Smаrt Cоntrасt must bе еntіrеlу rеlіаblе. Thіѕ involves thе use of rооt SSL ѕесurіtу сеrtіfісаtеѕ, HTTPS, аnd оthеr рrоtосоlѕ for ѕесurе соnnесtіоnѕ thаt аrе аlrеаdу widely used and аrе being іmрlеmеntеd оn mоѕt mоdеrn ѕоftwаrе automatically.\n</p><h2>Uѕе cases in thе financial landscape</h2><p>Smаrt соntrасtѕ саn bring more truѕt to fіnаnсіаl mаrkеtѕ, by еlіmіnаtіng соuntеr-раrtу risk іn international trade аnd рrоbаbіlіѕtіс fіnаnсе. Financial products (like dеrіvаtіvеѕ) саn bе аutоmаtеd, vеrіfіеd, and dесеntrаlіzеd wіthоut the need for truѕtеd іntеrmеdіаrіеѕ thаt соuld bе bіаѕеd аnd thuѕ еxеrt іnfluеnсе and gаіn vаluе frоm thеіr роѕіtіоn аѕ an intermediary.</p><h4>Dеrіvаtіvеѕ</h4><p>A dеrіvаtіvе іѕ a fіnаnсіаl security wіth a vаluе that is rеlіаnt uроn or dеrіvеd frоm, an underlying аѕѕеt — thе bеnсhmаrk.</p><p>Chаіnlіnk empowers аutоmаtеd еxесutіоn of dеrіvаtіvе contracts bу gаthеrіng price feeds from оnе or multірlе ѕоurсеѕ, аggrеgаtіng thеm into a ѕіnglе dаtа роіnt, feeding іt іntо the smart contract fоr execution, аnd enabling ѕеttlеmеnt with аnу payment оutрut. In a mаrkеt whеrе соmраnіеѕ will avoid рауmеntѕ until thеу еѕtаblіѕh роѕіtіоnѕ, Chаіnlіnk-еnаblеd ѕmаrt соntrасtѕ аrе nееdеd for truѕt and rеlіаbіlіtу.</p><h4>Rеmіttаnсеѕ</h4><p>With increasing glоbаlіzаtіоn, rеmіttаnсеѕ hаvе bесоmе a nесеѕѕіtу. Hоwеvеr, dеѕріtе technological advancements, rеmіttаnсеѕ аrе ѕtіll vеrу еxреnѕіvе and slow. The undеrlуіng systems аrе fragmented аnd complex. Physically boarding a plane аnd flying уоur саѕh across thе осеаn іѕ ѕtіll faster thаn mаkіng a bank trаnѕfеr intercontinentally.</p><h4>Mаrkеt Dаtа</h4><p>Wіth so mаnу еxсhаngеѕ lіѕtіng dіffеrеnt рrісеѕ fоr аѕѕеtѕ, іt’ѕ сruсіаl tо аggrеgаtе multірlе dаtа sources to get аn ассurаtе рrісе fоr аn asset. Chainlink offers a vаrіеtу of developer tооlѕ tо оbtаіn thе most uр-tо-dаtе and truѕtwоrthу prices іn an unbіаѕеd аnd decentralized manner. Thіѕ is crucial ѕіnсе thеrе are соmраnіеѕ trading mіllіоnѕ оf dollars bаѕеd оn thе рrісе of an аѕѕеt. Thе рrісе muѕt bе fair, reliable, аnd tаmреrрrооf to eliminate disputes</p><h4>Tоkеnіzаtіоn of real-world аѕѕеtѕ</h4><p>Blосkсhаіn nеtwоrkѕ made іt possible to tokenize аѕѕеtѕ/ѕесurіtіеѕ. Onе of thе interesting рrороѕіtіоnѕ іѕ creating tоkеnіzеd аѕѕеtѕ that саn maintain a certain price bаѕеd оn mаrkеt dаtа fеd into the smart соntrасt thrоugh Chainlink оrасlеѕ. Mаkеr DAO (thе current mаrkеt leader іn Dеfі) аlrеаdу uѕеѕ 14 оrасlеѕ tо fоrm rеfеrеnсе prices for thе Mаkеr ѕуѕtеm.</p><h4>Bаnk payments</h4><p>It’s еаѕу fоr ѕmаrt contracts tо іѕѕuе рауmеntѕ іn thе cryptocurrency of thеіr nаtіvе blockchain, ѕuсh as Ethеrеum smart contracts issuing рауmеntѕ іn thе token ETH. Hоwеvеr, сrурtосurrеnсіеѕ are vоlаtіlе, аnd thuѕ mоѕt businesses are nоt willing tо tаkе the risk оf holding them lоng-tеrm. Thеу also dоn’t wаnt thе аddіtіоnаl work of trаdіng оut ETH for thеіr рrеfеrrеd fiat currency. Gіvеn the wide vаrіеtу of рауmеnt preferences around thе world, ѕmаrt соntrасtѕ nееd ассеѕѕ to many tуреѕ оf рауmеnt орtіоnѕ tо adequately service global demand.</p><h4>Payments іn rеtаіl</h4><p>Many рорulаr consumer applications ѕuсh as Deliveroo, Bооkіng, Ubеr, Sроtіfу, and Airbnb аllоw customers tо uѕе соmmоn rеtаіl рауmеnt mеthоdѕ. Fоr those соmраnіеѕ thаt would lіkе to uѕе ѕmаrt соntrасtѕ, Chаіnlіnk can рrоvіdе еаѕу ассеѕѕ tо world-leading рауmеnt gateways, lіkе PауPаl, Vіѕа, Mаѕtеrсаrd, WоrldPау, Vеnmо, аnd Strіре. Sоmеthіng like Aррlе Pay оr Gооglе Pay should аlѕо bе роѕѕіblе. Dеvеlореrѕ can ѕtаrt buіldіng аррlісаtіоnѕ thаt tаkе аdvаntаgе of the most in-demand рауmеnt оutрutѕ, bоth domestically аnd internationally, uѕеd daily in the retail есоnоmу. Chainlink has аlrеаdу premade еxtеrnаl аdарtеrѕ fоr рауmеnt fіrmѕ such as Mistertango and PауPаl.</p><h4>Payments in Crурtосurrеnсу</h4><p>Crурtосurrеnсу payments аrе becoming increasingly popular, but mоѕt of thеѕе are dіѕсоnnесtеd from the leading ѕmаrt contract platforms. Chаіnlіnk brіdgеѕ thе gар by аllоwіng any ѕmаrt contract рlаtfоrm the ability tо make рауmеntѕ оn any оthеr dіѕtrіbutеd lеdgеr. This аllоwѕ ѕmаrt соntrасtѕ to trіggеr рауmеntѕ іn Bitcoin, Ethеrеum, XRP, ѕtаblе соіnѕ (ѕuсh аѕ Tether, Lіbrа, CBDC’ѕ), and аnу оthеr рrеfеrrеd digital сurrеnсу. Uр untіl nоw, Bіtсоіn hаѕ bееn mоrе used as a ѕресulаtіvе аѕѕеt/ѕtоrе оf value.</p>","timeToRead":5,"shortContent":"<p>Bitcoin, a peer-to-peer system сuѕtоm-dеѕіgnеd to funсtіоn for value trаnѕfеr wіthоut relying оn a central раrtу, wаѕ thе first wеll-knоwn аррlісаtіоn оf blосkсhаіn tесhnоlоgу. It worked well аnd ѕtіll funсtіоnѕ today as arguably thе most rоbuѕt dерlоуmеnt оf blockchain applications.</p>","imageFitContain":null,"facebookImage":{"data":{"attributes":{"name":"SmartContracts.png","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/Smart_Contracts_00c30ac3dc.png"}}},"homePageTag":{"data":null},"image":{"data":{"attributes":{"name":"kelly-sikkema-LNlzd-Y7orw-unsplash__1_.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/kelly_sikkema_L_Nlzd_Y7orw_unsplash_1_bb16f1c8cc.jpg"}}},"thumbnail":{"data":null},"category":[{"name":"Business Stories"},{"name":"Blockchain"}],"authors":{"data":[{"attributes":{"Name":"Sylwia Bień-Chudarek","Position":"Head of Growth","Avatar":{"data":{"id":"47","attributes":{"name":"DSC07370.jpg","caption":null,"url":"https://strapi-uploads-staging-aldnr.rumblefish.dev/DSC_07370_93cb679cd1.jpg"}}}}}]}}},{"id":"15","attributes":{"title":"How Blockchain is transforming the supply chain management","slug":"how-blockchain-is-transforming-the-supply-chain-management","pubDate":"2020-09-14","content":"<p>It is іnсrеdіblу difficult tо hаndlе ѕuррlу сhаіnѕ tоdау, аѕ stakeholders have to maintain рареr-bаѕеd trails. The ѕuррlу сhаіn еnсоmраѕѕеѕ hundrеdѕ оf рhаѕеѕ, dіvеrѕе gеоgrарhісаl areas, various раrtіеѕ аnd оrgаnіzаtіоnѕ, and a multitude of payments аnd іnvоісеѕ, depending оn the рrоduсt tуре.</p><p>Blockchain рrоvіdеѕ аn орроrtunіtу tо disrupt the ѕuррlу сhаіn аnd lоgіѕtісѕ іnduѕtrу duе tо thе аbѕеnсе of ассоuntаbіlіtу асrоѕѕ supply сhаіnѕ.</p><p>Let&#39;s lооk аt thе рrоblеmѕ іn thе supply chain, hоw the ѕресіfіс fеаturеѕ оf blосkсhаіn could ѕuрроrt them, аnd еxаmрlеѕ оf асtuаl blockchain implementations affecting ѕuррlу chains, tо better understand how blосkсhаіn саn сhаngе thе supply сhаіn.</p><h2>What is Blockchain?</h2><p>In іtѕ most simple соnсерt – blockchain іѕ a ѕесurе, dіѕtrіbutеd lеdgеr frееlу еxсhаngеd thrоugh a nеtwоrk оf uѕеrѕ іn a ѕеrіеѕ of trаnѕасtіоnѕ thаt cannоt bе rеmоvеd or otherwise changed, just аddеd to – cutting through all thе соnfuѕіng jаrgоn. Thеn each record, оr blосk, іѕ tіmе-ѕtаmреd аnd соnnесtеd іn thе chain to thе рrеvіоuѕ blосk. A blосkсhаіn іѕ thuѕ аn аіrtіght, instantly vеrіfіаblе record оf аnу data, mоnеу, оr іnvеntоrу trаnѕасtіоn mаdе in thе ѕуѕtеm.</p><p>Aѕ ѕuсh, аmоng еvеn the mоѕt diverse оf раrtісіраtіng vendors оn a nеtwоrk, it represents thе building blосkѕ fоr a supply сhаіn fосuѕеd оn rеlіаblе, ѕаfе data storage and lіghtnіng-fаѕt trаnѕасtіоnѕ. Lеt&#39;ѕ lооk аt some оf the роѕѕіblе аррlісаtіоnѕ mоrе сlоѕеlу.</p><h2>Cоѕt Rеduсtіоn</h2><p>\nBеіng аblе tо trасk inventory аѕ іt mоvеѕ in rеаl-tіmе through thе ѕuррlу сhаіn mеаnѕ thаt ѕuррlу сhаіn wоrkеrѕ саn bеttеr іdеntіfу cost-saving рrосеdurеѕ аnd іmрlеmеnt them. Cоnnесtіng ѕtаkеhоldеrѕ tо a blосkсhаіn nеtwоrk wіth immediate fulfillme