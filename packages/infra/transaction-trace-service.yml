Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
  HostedZoneId:
    Type: String
  Domain:
    Type: String
  CertificateArn:
    Type: String
  JsonBucketName:
    Type: String
  ApiGatewayAllowOrigin:
    Type: String
  AlchemyKey:
    Type: String

Resources:
  AnalyzerDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-analyzer-store
      AttributeDefinitions:
        - AttributeName: txHash
          AttributeType: S
        - AttributeName: type#time
          AttributeType: S
      KeySchema:
        - AttributeName: txHash
          KeyType: HASH
        - AttributeName: type#time
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  Api:
    Type: AWS::Serverless::Api
    Name: !Sub ${AWS::StackName}-api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'POST, GET, OPTIONS'"
        AllowOrigin: !Join ['', ["'", !Ref ApiGatewayAllowOrigin, "'"]]
        AllowHeaders: "'content-type, x-api-key'"
        AllowCredentials: false
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
      Domain:
        CertificateArn: !Ref CertificateArn
        DomainName: !Ref Domain
        Route53:
          HostedZoneId: !Ref HostedZoneId

  TransactionTraceSqsDeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-sqs-dead-letter

  TransactionTraceSqs:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-sqs
      VisibilityTimeout: 910
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TransactionTraceSqsDeadLetter.Arn
        maxReceiveCount: 1

  TransactionTraceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../transaction-trace-api
      Handler: txTraceApi.analyzeTransactionHandler
      Runtime: nodejs18.x
      Timeout: 30
      MemorySize: 128
      Architectures:
        - x86_64
      Environment:
        Variables:
          ANALYZER_DATA_TABLE_NAME: !Ref AnalyzerDataTable
          SQS_ANALYZER_URL: !Ref TransactionTraceSqs
      Events:
        TransactionTraceApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /analyzerData/{txHash}/{chainId}
            Method: get
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - !GetAtt AnalyzerDataTable.Arn
                - !Sub ${AnalyzerDataTable.Arn}/**
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource:
                - !GetAtt TransactionTraceSqs.Arn
    Metadata:
      BuildMethod: makefile

  TransactionTraceProviderFunctionDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: transaction-trace-provider-dependencies
      Description: Dependencies for transaction-trace-provider
      ContentUri: ../transaction-trace-provider/dependencies/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  TransactionTraceSqsHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../transaction-trace-provider
      Handler: src/sqsConsumer.consumeSqsAnalyzeTx
      Runtime: nodejs18.x
      Layers:
        - !Ref TransactionTraceProviderFunctionDepLayer
      Timeout: 900
      MemorySize: 6144
      Architectures:
        - x86_64
      Environment:
        Variables:
          ALCHEMY_KEY: !Ref AlchemyKey
          ANALYZER_DATA_TABLE_NAME: !Ref AnalyzerDataTable
          ANALYZER_DATA_BUCKET_NAME: !Ref JsonBucketName
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransactionTraceSqs.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 5
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt AnalyzerDataTable.Arn
                - !Sub ${AnalyzerDataTable.Arn}/**
            - Action:
                - s3:*
              Effect: Allow
              Resource:
                - !Sub arn:aws:s3:::${JsonBucketName}
                - !Sub arn:aws:s3:::${JsonBucketName}/**

    Metadata:
      BuildMethod: makefile

  TransactionTraceSqsDeadLetterHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../transaction-trace-provider
      Handler: src/sqsDeadLetterConsumer.consumeSqsAnalyzeTxError
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          ANALYZER_DATA_TABLE_NAME: !Ref AnalyzerDataTable
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransactionTraceSqsDeadLetter.Arn
            ScalingConfig:
              MaximumConcurrency: 5
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt AnalyzerDataTable.Arn
                - !Sub ${AnalyzerDataTable.Arn}/**
    Metadata:
      BuildMethod: makefile
