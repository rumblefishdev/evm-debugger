Parameters:
  DomainName:
    Type: String
  CertificateArn:
    Type: String
  HostedZoneId:
    Type: String
  DefaultObject:
    Type: String
    Default: "/index.html"
  Prefix:
    Type: String
    Default: ""
    Description: Limit serving files only to specified prefix
  GhOIDCProviderArn:
    Type: String

Resources:
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Ref DomainName
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - POST
              - GET
            AllowedOrigins:
              - '*'
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  FrontendOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub access-identity-${DomainName}

  FrontendCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - POST
            - HEAD
            - OPTIONS
            - DELETE
            - PUT
            - PATCH
          Compress: True
          ForwardedValues:
            QueryString: False
          DefaultTTL: 86400
          MaxTTL: 31536000
          MinTTL: 0
          TargetOriginId:
            Fn::Join:
              - "-"
              - - S3
                - Ref: FrontendBucket
          ViewerProtocolPolicy: redirect-to-https

        Enabled: True
        HttpVersion: http2
        IPV6Enabled: True
        Origins:
          - DomainName:
              Fn::GetAtt: [FrontendBucket, RegionalDomainName]
            Id:
              Fn::Join:
                - "-"
                - - S3
                  - Ref: FrontendBucket
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - "/"
                  - - origin-access-identity/cloudfront
                    - Ref: FrontendOriginAccessIdentity
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCachingMinTTL: 86000
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: !Ref DefaultObject
          - ErrorCachingMinTTL: 86000
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: !Ref DefaultObject

  FrontendAllowFromCloudFrontBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendBucket
      PolicyDocument:
        Statement:
          -
            Sid: 1
            Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  - Ref: FrontendBucket
                  - !Sub "${Prefix}/*"
            Principal:
              AWS:
                Fn::Join:
                  - " "
                  -
                    - "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity"
                    - Ref: FrontendOriginAccessIdentity

  FrontendRoute53:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName:
          Fn::GetAtt: [FrontendCloudFront, DomainName]
        HostedZoneId: Z2FDTNDATAQYW2 # Static for CloudFront
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A

  S3ArtefactsRoleUpload:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${DomainName}-github-workflow
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated:
                - !Ref GhOIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              ForAnyValue:StringLike:
                token.actions.githubusercontent.com:sub:
                  - repo:rumblefishdev/evm-debugger:*
      Path: "/"
      Policies:
        - PolicyName: upload-to-s3-bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::www-staging-aldnr.rumblefish.dev.evmdebugger
                  - arn:aws:s3:::www-staging-aldnr.rumblefish.dev.evmdebugger/**
                Effect: Allow

Outputs:
  CloudFrontDistributionId:
    Value: !Ref FrontendCloudFront
  FrontendBucketName:
    Value: !Ref DomainName
  FrontendBucketArn:
    Value: !GetAtt FrontendBucket.Arn
