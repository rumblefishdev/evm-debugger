Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
  HostedZoneId:
    Type: String
  Domain:
    Type: String
  CertificateArn:
    Type: String
  TraceBucketName:
    Type: String
  ApiGatewayAllowOrigin:
    Type: String
  AlchemyKey:
    Type: String
  SentryDsn:
    Type: String

  # Adding new SSM parameters via AWS console, remember to add tag 'Owner: evm-debugger' to them
  EtherscanKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/evm-debugger/secrets/ETHERSCAN_KEY"
  PolygonscanKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/evm-debugger/secrets/POLYGONSCAN_KEY"
  ArbitrumscanKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/evm-debugger/secrets/ARBITRUMSCAN_KEY"

Resources:
  Api:
    Type: AWS::Serverless::Api
    Name: !Sub ${AWS::StackName}-api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'POST, GET, OPTIONS'"
        AllowOrigin: !Join ['', ["'", !Ref ApiGatewayAllowOrigin, "'"]]
        AllowHeaders: "'content-type, x-api-key'"
        AllowCredentials: false
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
      Domain:
        CertificateArn: !Ref CertificateArn
        DomainName: !Ref Domain
        Route53:
          HostedZoneId: !Ref HostedZoneId

  ###################################
  ###### Transaction Trace API ######
  ###################################
  AnalyzerDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-analyzer-store
      AttributeDefinitions:
        - AttributeName: txHash
          AttributeType: S
        - AttributeName: type#time
          AttributeType: S
      KeySchema:
        - AttributeName: txHash
          KeyType: HASH
        - AttributeName: type#time
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TransactionTraceSqsDeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-sqs-dead-letter

  TransactionTraceSqs:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-sqs
      VisibilityTimeout: 910
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TransactionTraceSqsDeadLetter.Arn
        maxReceiveCount: 1

  TransactionTraceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../transaction-trace-api
      Handler: txTraceApi.analyzeTransactionEntrypoint
      Runtime: nodejs18.x
      Timeout: 30
      MemorySize: 128
      Architectures:
        - x86_64
      Environment:
        Variables:
          ANALYZER_DATA_TABLE_NAME: !Ref AnalyzerDataTable
          SQS_ANALYZER_URL: !Ref TransactionTraceSqs
          ENVIRONMENT: !Ref Environment
          SENTRY_DSN: !Ref SentryDsn
      Events:
        TransactionTraceApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /analyzerData/{txHash}/{chainId}
            Method: get
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - !GetAtt AnalyzerDataTable.Arn
                - !Sub ${AnalyzerDataTable.Arn}/**
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource:
                - !GetAtt TransactionTraceSqs.Arn
    Metadata:
      BuildMethod: makefile

  TransactionTraceProviderFunctionDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: transaction-trace-provider-dependencies
      Description: Dependencies for transaction-trace-provider
      ContentUri: ../transaction-trace-provider/dependencies/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  TransactionTraceSqsHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../transaction-trace-provider
      Handler: src/sqsConsumer.consumeSqsAnalyzeTxEntrypoint
      Runtime: nodejs18.x
      Layers:
        - !Ref TransactionTraceProviderFunctionDepLayer
      Timeout: 900
      MemorySize: 6144
      Architectures:
        - x86_64
      Environment:
        Variables:
          ALCHEMY_KEY: !Ref AlchemyKey
          ANALYZER_DATA_TABLE_NAME: !Ref AnalyzerDataTable
          ANALYZER_DATA_BUCKET_NAME: !Ref TraceBucketName
          ENVIRONMENT: !Ref Environment
          SENTRY_DSN: !Ref SentryDsn
          # HardHat uses env-path for config files, so we need to set it to /tmp/home
          XDG_DATA_HOME: /tmp/home/.local/share
          XDG_CONFIG_HOME: /tmp/home/.config
          XDG_CACHE_HOME: /tmp/home/.cache
          XDG_STATE_HOME: /tmp/home/.local/state
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransactionTraceSqs.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 5
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt AnalyzerDataTable.Arn
                - !Sub ${AnalyzerDataTable.Arn}/**
            - Action:
                - s3:*
              Effect: Allow
              Resource:
                - !Sub arn:aws:s3:::${TraceBucketName}
                - !Sub arn:aws:s3:::${TraceBucketName}/**

    Metadata:
      BuildMethod: makefile

  TransactionTraceSqsDeadLetterHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../transaction-trace-provider
      Handler: src/sqsDeadLetterConsumer.consumeSqsAnalyzeTxErrorEntrypoint
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          ANALYZER_DATA_TABLE_NAME: !Ref AnalyzerDataTable
          ENVIRONMENT: !Ref Environment
          SENTRY_DSN: !Ref SentryDsn
          # HardHat uses env-path for config files, so we need to set it to /tmp/home
          XDG_DATA_HOME: /tmp/home/.local/share
          XDG_CONFIG_HOME: /tmp/home/.config
          XDG_CACHE_HOME: /tmp/home/.cache
          XDG_STATE_HOME: /tmp/home/.local/state
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransactionTraceSqsDeadLetter.Arn
            ScalingConfig:
              MaximumConcurrency: 5
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !GetAtt AnalyzerDataTable.Arn
                - !Sub ${AnalyzerDataTable.Arn}/**
    Metadata:
      BuildMethod: makefile

  ###################################
  ######### Source Map API ##########
  ###################################
  SrcMapContractsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub evm-debugger-${Environment}-srcmap-contracts-ddb
      AttributeDefinitions:
        - AttributeName: address
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
        - AttributeName: chainId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: address
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: ChainIdIndex
          KeySchema:
            - AttributeName: chainId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        - IndexName: StatusIndex
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5

  SrcMapContractsFetcherSqsDeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub evm-debugger-${Environment}-srcmap-contracts-fetcher-sqs-dead-letter
      VisibilityTimeout: 900

  SrcMapContractsFetcherSqs:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub evm-debugger-${Environment}-srcmap-contracts-fetcher-sqs
      VisibilityTimeout: 900
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt SrcMapContractsFetcherSqsDeadLetter.Arn
        maxReceiveCount: 3

  SrcMapApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub evm-debugger-${Environment}-srcmap-api
      CodeUri: ../srcmap-api
      Handler: lambdaApi.srcmapApiEntrypoint
      Runtime: nodejs18.x
      Timeout: 180
      MemorySize: 256
      Architectures:
        - x86_64
      Environment:
        Variables:
          SRCMAP_CONTRACTS_TABLE_NAME: !Ref SrcMapContractsTable
          SQS_FILES_FETCHER_URL: !Ref SrcMapContractsFetcherSqs
          ENVIRONMENT: !Ref Environment
          SENTRY_DSN: !Ref SentryDsn
          BUCKET_NAME: !Ref TraceBucketName
          REACT_APP_ETHERSCAN_KEY: !Ref EtherscanKey
          REACT_APP_POLYGONSCAN_KEY: !Ref PolygonscanKey
          REACT_APP_ARBITRUMSCAN_KEY: !Ref ArbitrumscanKey
      Events:
        SrcMapApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /srcmap-api
            Method: post
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - !GetAtt SrcMapContractsTable.Arn
                - !Sub ${SrcMapContractsTable.Arn}/**
            - Action:
                - ssm:GetParameter
                - ssm:GetParameters
              Effect: Allow
              Resource:
                - '*'
            - Action:
                - lambda:InvokeFunction
              Effect: Allow
              Resource:
                - '*'
            - Action:
                - s3:*
              Effect: Allow
              Resource:
                - !Sub arn:aws:s3:::${TraceBucketName}
                - !Sub arn:aws:s3:::${TraceBucketName}/**
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource:
                - !GetAtt SrcMapContractsFetcherSqs.Arn
    Metadata:
      BuildMethod: makefile

  SrcMapFetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub evm-debugger-${Environment}-srcmap-fetcher
      CodeUri: ../srcmap-api
      Handler: lambdaFetcher.srcmapFetcherEntrypoint
      Runtime: nodejs18.x
      Timeout: 180
      MemorySize: 256
      Architectures:
        - x86_64
      Environment:
        Variables:
          SRCMAP_CONTRACTS_TABLE_NAME: !Ref SrcMapContractsTable
          ENVIRONMENT: !Ref Environment
          SENTRY_DSN: !Ref SentryDsn
          BUCKET_NAME: !Ref TraceBucketName
          REACT_APP_ETHERSCAN_KEY: !Ref EtherscanKey
          REACT_APP_POLYGONSCAN_KEY: !Ref PolygonscanKey
          REACT_APP_ARBITRUMSCAN_KEY: !Ref ArbitrumscanKey
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SrcMapContractsFetcherSqs.Arn
            ScalingConfig:
              MaximumConcurrency: 5 # based on etherscan rate limits https://docs.etherscan.io/support/rate-limits
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - !GetAtt SrcMapContractsTable.Arn
                - !Sub ${SrcMapContractsTable.Arn}/**
            - Action:
                - ssm:GetParameter
                - ssm:GetParameters
              Effect: Allow
              Resource:
                - '*'
            - Action:
                - s3:*
              Effect: Allow
              Resource:
                - !Sub arn:aws:s3:::${TraceBucketName}
                - !Sub arn:aws:s3:::${TraceBucketName}/**
    Metadata:
      BuildMethod: makefile

  SrcMapFetcherDeadLetterQueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub evm-debugger-${Environment}-srcmap-fetcher-dlq
      CodeUri: ../srcmap-api
      Handler: lambdaFetcherDlq.srcmapFetcherDeadLetterEntrypoint
      Runtime: nodejs18.x
      Timeout: 180
      MemorySize: 256
      Architectures:
        - x86_64
      Environment:
        Variables:
          SRCMAP_CONTRACTS_TABLE_NAME: !Ref SrcMapContractsTable
          ENVIRONMENT: !Ref Environment
          SENTRY_DSN: !Ref SentryDsn
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SrcMapContractsFetcherSqsDeadLetter.Arn
            ScalingConfig:
              MaximumConcurrency: 100
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Query
              Resource:
                - !GetAtt SrcMapContractsTable.Arn
                - !Sub ${SrcMapContractsTable.Arn}/**
    Metadata:
      BuildMethod: makefile
